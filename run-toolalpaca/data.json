[
    {
        "service_name": "nager",
        "cases": [
            {
                "input": "[INST] <<SYS>>You are called nager. You have access to different tools and these can be used to perform tasks such as getting information on public holidays for more than 90 countries. You do not know anything about public holidays until you have selected and run a tool from the available list.\nYou will be presented with a prompt. Your task is to plan the usage of the tools to effectively find the response to the prompts. You must always use the tools to answer your question. You have no knowledge until you have used a tool. You can only use the tools available, do not make up any tools.<</SYS>>\n\nYou have the following tools available:\n\nCountryCountryInfo: Get country info for the given country. To use this tool, you need to provide the countryCode property.\nCountryAvailableCountries: Get all available countries\nLongWeekendLongWeekend: Get long weekends for a given country. To use this tool, you need to provide the year property. To use this tool, you need to provide the countryCode property.\nPublicHolidayPublicHolidaysV3: Get public holidays. To use this tool, you need to provide the year property. To use this tool, you need to provide the countryCode property.\nPublicHolidayIsTodayPublicHoliday: Is today a public holiday. To use this tool, you need to provide the countryCode property.\nPublicHolidayNextPublicHolidays: Returns the upcoming public holidays for the next 365 days for the given country. To use this tool, you need to provide the countryCode property.\nPublicHolidayNextPublicHolidaysWorldwide: Returns the upcoming public holidays for the next 7 days\nVersionGetVersion: Get version of the used Nager.Date library\nformulate_response: Answer questions about nager.date. Use this tool when no other tool should be used.\n\nLet's first understand the problem and devise a plan to solve the problem. Please output the plan starting with the header 'Plan:' and then followed by a numbered list of steps. Please make the plan the minimum number of steps required to accurately complete the task. Always use the tools available in your plan to answer the response. Your plan should contain the name of the tools to use. You can use the same tool multiple times if required. At the end of your plan, use the delimiter 'end_of_plan'. After the end of your plan provide an explanation of why this plan should be followed. \n\nInput: Hello\nOutput: Plan:\n1. formulate_response\n\nInput: Delete experiment X1234\nOutput: Plan:\n1. get_experiment_list\n2. get_experiment\n3. delete_experiment\n4. formulate_response\n\nInput: Get the country info for China.\nOutput:[\\INST]",
                "expected_plan": [
                    "CountryCountryInfo"
                ],
                "actual_output": ""
            },
            {
                "input": "[INST] <<SYS>>You are called nager. You have access to different tools and these can be used to perform tasks such as getting information on public holidays for more than 90 countries. You do not know anything about public holidays until you have selected and run a tool from the available list.\nYou will be presented with a prompt. Your task is to plan the usage of the tools to effectively find the response to the prompts. You must always use the tools to answer your question. You have no knowledge until you have used a tool. You can only use the tools available, do not make up any tools.<</SYS>>\n\nYou have the following tools available:\n\nCountryCountryInfo: Get country info for the given country. To use this tool, you need to provide the countryCode property.\nCountryAvailableCountries: Get all available countries\nLongWeekendLongWeekend: Get long weekends for a given country. To use this tool, you need to provide the year property. To use this tool, you need to provide the countryCode property.\nPublicHolidayPublicHolidaysV3: Get public holidays. To use this tool, you need to provide the year property. To use this tool, you need to provide the countryCode property.\nPublicHolidayIsTodayPublicHoliday: Is today a public holiday. To use this tool, you need to provide the countryCode property.\nPublicHolidayNextPublicHolidays: Returns the upcoming public holidays for the next 365 days for the given country. To use this tool, you need to provide the countryCode property.\nPublicHolidayNextPublicHolidaysWorldwide: Returns the upcoming public holidays for the next 7 days\nVersionGetVersion: Get version of the used Nager.Date library\nformulate_response: Answer questions about nager.date. Use this tool when no other tool should be used.\n\nLet's first understand the problem and devise a plan to solve the problem. Please output the plan starting with the header 'Plan:' and then followed by a numbered list of steps. Please make the plan the minimum number of steps required to accurately complete the task. Always use the tools available in your plan to answer the response. Your plan should contain the name of the tools to use. You can use the same tool multiple times if required. At the end of your plan, use the delimiter 'end_of_plan'. After the end of your plan provide an explanation of why this plan should be followed. \n\nInput: Hello\nOutput: Plan:\n1. formulate_response\n\nInput: Delete experiment X1234\nOutput: Plan:\n1. get_experiment_list\n2. get_experiment\n3. delete_experiment\n4. formulate_response\n\nInput: Hey, I'm curious about the holidays in different countries. Can you compare the number of public holidays in Canada, and Mexico for 2023?\nOutput:[\\INST]",
                "expected_plan": [
                    "PublicHolidayPublicHolidaysV3",
                    "PublicHolidayPublicHolidaysV3"
                ],
                "actual_output": ""
            },
            {
                "input": "[INST] <<SYS>>You are called nager. You have access to different tools and these can be used to perform tasks such as getting information on public holidays for more than 90 countries. You do not know anything about public holidays until you have selected and run a tool from the available list.\nYou will be presented with a prompt. Your task is to plan the usage of the tools to effectively find the response to the prompts. You must always use the tools to answer your question. You have no knowledge until you have used a tool. You can only use the tools available, do not make up any tools.<</SYS>>\n\nYou have the following tools available:\n\nCountryCountryInfo: Get country info for the given country. To use this tool, you need to provide the countryCode property.\nCountryAvailableCountries: Get all available countries\nLongWeekendLongWeekend: Get long weekends for a given country. To use this tool, you need to provide the year property. To use this tool, you need to provide the countryCode property.\nPublicHolidayPublicHolidaysV3: Get public holidays. To use this tool, you need to provide the year property. To use this tool, you need to provide the countryCode property.\nPublicHolidayIsTodayPublicHoliday: Is today a public holiday. To use this tool, you need to provide the countryCode property.\nPublicHolidayNextPublicHolidays: Returns the upcoming public holidays for the next 365 days for the given country. To use this tool, you need to provide the countryCode property.\nPublicHolidayNextPublicHolidaysWorldwide: Returns the upcoming public holidays for the next 7 days\nVersionGetVersion: Get version of the used Nager.Date library\nformulate_response: Answer questions about nager.date. Use this tool when no other tool should be used.\n\nLet's first understand the problem and devise a plan to solve the problem. Please output the plan starting with the header 'Plan:' and then followed by a numbered list of steps. Please make the plan the minimum number of steps required to accurately complete the task. Always use the tools available in your plan to answer the response. Your plan should contain the name of the tools to use. You can use the same tool multiple times if required. At the end of your plan, use the delimiter 'end_of_plan'. After the end of your plan provide an explanation of why this plan should be followed. \n\nInput: Hello\nOutput: Plan:\n1. formulate_response\n\nInput: Delete experiment X1234\nOutput: Plan:\n1. get_experiment_list\n2. get_experiment\n3. delete_experiment\n4. formulate_response\n\nInput: Get the list of all available countries for public holiday information.\nOutput:[\\INST]",
                "expected_plan": [
                    "CountryAvailableCountries"
                ],
                "actual_output": ""
            },
            {
                "input": "[INST] <<SYS>>You are called nager. You have access to different tools and these can be used to perform tasks such as getting information on public holidays for more than 90 countries. You do not know anything about public holidays until you have selected and run a tool from the available list.\nYou will be presented with a prompt. Your task is to plan the usage of the tools to effectively find the response to the prompts. You must always use the tools to answer your question. You have no knowledge until you have used a tool. You can only use the tools available, do not make up any tools.<</SYS>>\n\nYou have the following tools available:\n\nCountryCountryInfo: Get country info for the given country. To use this tool, you need to provide the countryCode property.\nCountryAvailableCountries: Get all available countries\nLongWeekendLongWeekend: Get long weekends for a given country. To use this tool, you need to provide the year property. To use this tool, you need to provide the countryCode property.\nPublicHolidayPublicHolidaysV3: Get public holidays. To use this tool, you need to provide the year property. To use this tool, you need to provide the countryCode property.\nPublicHolidayIsTodayPublicHoliday: Is today a public holiday. To use this tool, you need to provide the countryCode property.\nPublicHolidayNextPublicHolidays: Returns the upcoming public holidays for the next 365 days for the given country. To use this tool, you need to provide the countryCode property.\nPublicHolidayNextPublicHolidaysWorldwide: Returns the upcoming public holidays for the next 7 days\nVersionGetVersion: Get version of the used Nager.Date library\nformulate_response: Answer questions about nager.date. Use this tool when no other tool should be used.\n\nLet's first understand the problem and devise a plan to solve the problem. Please output the plan starting with the header 'Plan:' and then followed by a numbered list of steps. Please make the plan the minimum number of steps required to accurately complete the task. Always use the tools available in your plan to answer the response. Your plan should contain the name of the tools to use. You can use the same tool multiple times if required. At the end of your plan, use the delimiter 'end_of_plan'. After the end of your plan provide an explanation of why this plan should be followed. \n\nInput: Hello\nOutput: Plan:\n1. formulate_response\n\nInput: Delete experiment X1234\nOutput: Plan:\n1. get_experiment_list\n2. get_experiment\n3. delete_experiment\n4. formulate_response\n\nInput: Find out the next public holidays for the Great Britain.\nOutput:[\\INST]",
                "expected_plan": [
                    "PublicHolidayNextPublicHolidays"
                ],
                "actual_output": ""
            },
            {
                "input": "[INST] <<SYS>>You are called nager. You have access to different tools and these can be used to perform tasks such as getting information on public holidays for more than 90 countries. You do not know anything about public holidays until you have selected and run a tool from the available list.\nYou will be presented with a prompt. Your task is to plan the usage of the tools to effectively find the response to the prompts. You must always use the tools to answer your question. You have no knowledge until you have used a tool. You can only use the tools available, do not make up any tools.<</SYS>>\n\nYou have the following tools available:\n\nCountryCountryInfo: Get country info for the given country. To use this tool, you need to provide the countryCode property.\nCountryAvailableCountries: Get all available countries\nLongWeekendLongWeekend: Get long weekends for a given country. To use this tool, you need to provide the year property. To use this tool, you need to provide the countryCode property.\nPublicHolidayPublicHolidaysV3: Get public holidays. To use this tool, you need to provide the year property. To use this tool, you need to provide the countryCode property.\nPublicHolidayIsTodayPublicHoliday: Is today a public holiday. To use this tool, you need to provide the countryCode property.\nPublicHolidayNextPublicHolidays: Returns the upcoming public holidays for the next 365 days for the given country. To use this tool, you need to provide the countryCode property.\nPublicHolidayNextPublicHolidaysWorldwide: Returns the upcoming public holidays for the next 7 days\nVersionGetVersion: Get version of the used Nager.Date library\nformulate_response: Answer questions about nager.date. Use this tool when no other tool should be used.\n\nLet's first understand the problem and devise a plan to solve the problem. Please output the plan starting with the header 'Plan:' and then followed by a numbered list of steps. Please make the plan the minimum number of steps required to accurately complete the task. Always use the tools available in your plan to answer the response. Your plan should contain the name of the tools to use. You can use the same tool multiple times if required. At the end of your plan, use the delimiter 'end_of_plan'. After the end of your plan provide an explanation of why this plan should be followed. \n\nInput: Hello\nOutput: Plan:\n1. formulate_response\n\nInput: Delete experiment X1234\nOutput: Plan:\n1. get_experiment_list\n2. get_experiment\n3. delete_experiment\n4. formulate_response\n\nInput: I'm interested in knowing the upcoming public holidays in Germany for the next year. Could you fetch that information for me?\nOutput:[\\INST]",
                "expected_plan": [
                    "PublicHolidayNextPublicHolidays"
                ],
                "actual_output": ""
            },
            {
                "input": "[INST] <<SYS>>You are called nager. You have access to different tools and these can be used to perform tasks such as getting information on public holidays for more than 90 countries. You do not know anything about public holidays until you have selected and run a tool from the available list.\nYou will be presented with a prompt. Your task is to plan the usage of the tools to effectively find the response to the prompts. You must always use the tools to answer your question. You have no knowledge until you have used a tool. You can only use the tools available, do not make up any tools.<</SYS>>\n\nYou have the following tools available:\n\nCountryCountryInfo: Get country info for the given country. To use this tool, you need to provide the countryCode property.\nCountryAvailableCountries: Get all available countries\nLongWeekendLongWeekend: Get long weekends for a given country. To use this tool, you need to provide the year property. To use this tool, you need to provide the countryCode property.\nPublicHolidayPublicHolidaysV3: Get public holidays. To use this tool, you need to provide the year property. To use this tool, you need to provide the countryCode property.\nPublicHolidayIsTodayPublicHoliday: Is today a public holiday. To use this tool, you need to provide the countryCode property.\nPublicHolidayNextPublicHolidays: Returns the upcoming public holidays for the next 365 days for the given country. To use this tool, you need to provide the countryCode property.\nPublicHolidayNextPublicHolidaysWorldwide: Returns the upcoming public holidays for the next 7 days\nVersionGetVersion: Get version of the used Nager.Date library\nformulate_response: Answer questions about nager.date. Use this tool when no other tool should be used.\n\nLet's first understand the problem and devise a plan to solve the problem. Please output the plan starting with the header 'Plan:' and then followed by a numbered list of steps. Please make the plan the minimum number of steps required to accurately complete the task. Always use the tools available in your plan to answer the response. Your plan should contain the name of the tools to use. You can use the same tool multiple times if required. At the end of your plan, use the delimiter 'end_of_plan'. After the end of your plan provide an explanation of why this plan should be followed. \n\nInput: Hello\nOutput: Plan:\n1. formulate_response\n\nInput: Delete experiment X1234\nOutput: Plan:\n1. get_experiment_list\n2. get_experiment\n3. delete_experiment\n4. formulate_response\n\nInput: I need to find out if there are any long weekends in the United States in 2024. Can you help me with that?\nOutput:[\\INST]",
                "expected_plan": [
                    "LongWeekendLongWeekend"
                ],
                "actual_output": ""
            },
            {
                "input": "[INST] <<SYS>>You are called nager. You have access to different tools and these can be used to perform tasks such as getting information on public holidays for more than 90 countries. You do not know anything about public holidays until you have selected and run a tool from the available list.\nYou will be presented with a prompt. Your task is to plan the usage of the tools to effectively find the response to the prompts. You must always use the tools to answer your question. You have no knowledge until you have used a tool. You can only use the tools available, do not make up any tools.<</SYS>>\n\nYou have the following tools available:\n\nCountryCountryInfo: Get country info for the given country. To use this tool, you need to provide the countryCode property.\nCountryAvailableCountries: Get all available countries\nLongWeekendLongWeekend: Get long weekends for a given country. To use this tool, you need to provide the year property. To use this tool, you need to provide the countryCode property.\nPublicHolidayPublicHolidaysV3: Get public holidays. To use this tool, you need to provide the year property. To use this tool, you need to provide the countryCode property.\nPublicHolidayIsTodayPublicHoliday: Is today a public holiday. To use this tool, you need to provide the countryCode property.\nPublicHolidayNextPublicHolidays: Returns the upcoming public holidays for the next 365 days for the given country. To use this tool, you need to provide the countryCode property.\nPublicHolidayNextPublicHolidaysWorldwide: Returns the upcoming public holidays for the next 7 days\nVersionGetVersion: Get version of the used Nager.Date library\nformulate_response: Answer questions about nager.date. Use this tool when no other tool should be used.\n\nLet's first understand the problem and devise a plan to solve the problem. Please output the plan starting with the header 'Plan:' and then followed by a numbered list of steps. Please make the plan the minimum number of steps required to accurately complete the task. Always use the tools available in your plan to answer the response. Your plan should contain the name of the tools to use. You can use the same tool multiple times if required. At the end of your plan, use the delimiter 'end_of_plan'. After the end of your plan provide an explanation of why this plan should be followed. \n\nInput: Hello\nOutput: Plan:\n1. formulate_response\n\nInput: Delete experiment X1234\nOutput: Plan:\n1. get_experiment_list\n2. get_experiment\n3. delete_experiment\n4. formulate_response\n\nInput: I'm planning a road trip across Europe. Can you provide me with information about Italy, including its common name, official name, and the countries it shares borders with?\nOutput:[\\INST]",
                "expected_plan": [
                    "CountryCountryInfo"
                ],
                "actual_output": ""
            },
            {
                "input": "[INST] <<SYS>>You are called nager. You have access to different tools and these can be used to perform tasks such as getting information on public holidays for more than 90 countries. You do not know anything about public holidays until you have selected and run a tool from the available list.\nYou will be presented with a prompt. Your task is to plan the usage of the tools to effectively find the response to the prompts. You must always use the tools to answer your question. You have no knowledge until you have used a tool. You can only use the tools available, do not make up any tools.<</SYS>>\n\nYou have the following tools available:\n\nCountryCountryInfo: Get country info for the given country. To use this tool, you need to provide the countryCode property.\nCountryAvailableCountries: Get all available countries\nLongWeekendLongWeekend: Get long weekends for a given country. To use this tool, you need to provide the year property. To use this tool, you need to provide the countryCode property.\nPublicHolidayPublicHolidaysV3: Get public holidays. To use this tool, you need to provide the year property. To use this tool, you need to provide the countryCode property.\nPublicHolidayIsTodayPublicHoliday: Is today a public holiday. To use this tool, you need to provide the countryCode property.\nPublicHolidayNextPublicHolidays: Returns the upcoming public holidays for the next 365 days for the given country. To use this tool, you need to provide the countryCode property.\nPublicHolidayNextPublicHolidaysWorldwide: Returns the upcoming public holidays for the next 7 days\nVersionGetVersion: Get version of the used Nager.Date library\nformulate_response: Answer questions about nager.date. Use this tool when no other tool should be used.\n\nLet's first understand the problem and devise a plan to solve the problem. Please output the plan starting with the header 'Plan:' and then followed by a numbered list of steps. Please make the plan the minimum number of steps required to accurately complete the task. Always use the tools available in your plan to answer the response. Your plan should contain the name of the tools to use. You can use the same tool multiple times if required. At the end of your plan, use the delimiter 'end_of_plan'. After the end of your plan provide an explanation of why this plan should be followed. \n\nInput: Hello\nOutput: Plan:\n1. formulate_response\n\nInput: Delete experiment X1234\nOutput: Plan:\n1. get_experiment_list\n2. get_experiment\n3. delete_experiment\n4. formulate_response\n\nInput: I'm planning a surprise visit to my friend in Germany. I need to know when the next long weekend of the year 2023 is coming up, so I can plan my trip.\nOutput:[\\INST]",
                "expected_plan": [
                    "LongWeekendLongWeekend"
                ],
                "actual_output": ""
            },
            {
                "input": "[INST] <<SYS>>You are called nager. You have access to different tools and these can be used to perform tasks such as getting information on public holidays for more than 90 countries. You do not know anything about public holidays until you have selected and run a tool from the available list.\nYou will be presented with a prompt. Your task is to plan the usage of the tools to effectively find the response to the prompts. You must always use the tools to answer your question. You have no knowledge until you have used a tool. You can only use the tools available, do not make up any tools.<</SYS>>\n\nYou have the following tools available:\n\nCountryCountryInfo: Get country info for the given country. To use this tool, you need to provide the countryCode property.\nCountryAvailableCountries: Get all available countries\nLongWeekendLongWeekend: Get long weekends for a given country. To use this tool, you need to provide the year property. To use this tool, you need to provide the countryCode property.\nPublicHolidayPublicHolidaysV3: Get public holidays. To use this tool, you need to provide the year property. To use this tool, you need to provide the countryCode property.\nPublicHolidayIsTodayPublicHoliday: Is today a public holiday. To use this tool, you need to provide the countryCode property.\nPublicHolidayNextPublicHolidays: Returns the upcoming public holidays for the next 365 days for the given country. To use this tool, you need to provide the countryCode property.\nPublicHolidayNextPublicHolidaysWorldwide: Returns the upcoming public holidays for the next 7 days\nVersionGetVersion: Get version of the used Nager.Date library\nformulate_response: Answer questions about nager.date. Use this tool when no other tool should be used.\n\nLet's first understand the problem and devise a plan to solve the problem. Please output the plan starting with the header 'Plan:' and then followed by a numbered list of steps. Please make the plan the minimum number of steps required to accurately complete the task. Always use the tools available in your plan to answer the response. Your plan should contain the name of the tools to use. You can use the same tool multiple times if required. At the end of your plan, use the delimiter 'end_of_plan'. After the end of your plan provide an explanation of why this plan should be followed. \n\nInput: Hello\nOutput: Plan:\n1. formulate_response\n\nInput: Delete experiment X1234\nOutput: Plan:\n1. get_experiment_list\n2. get_experiment\n3. delete_experiment\n4. formulate_response\n\nInput: I'm curious about the public holidays in Australia in 2023. Can you fetch the list for me?\nOutput:[\\INST]",
                "expected_plan": [
                    "PublicHolidayPublicHolidaysV3"
                ],
                "actual_output": ""
            },
            {
                "input": "[INST] <<SYS>>You are called nager. You have access to different tools and these can be used to perform tasks such as getting information on public holidays for more than 90 countries. You do not know anything about public holidays until you have selected and run a tool from the available list.\nYou will be presented with a prompt. Your task is to plan the usage of the tools to effectively find the response to the prompts. You must always use the tools to answer your question. You have no knowledge until you have used a tool. You can only use the tools available, do not make up any tools.<</SYS>>\n\nYou have the following tools available:\n\nCountryCountryInfo: Get country info for the given country. To use this tool, you need to provide the countryCode property.\nCountryAvailableCountries: Get all available countries\nLongWeekendLongWeekend: Get long weekends for a given country. To use this tool, you need to provide the year property. To use this tool, you need to provide the countryCode property.\nPublicHolidayPublicHolidaysV3: Get public holidays. To use this tool, you need to provide the year property. To use this tool, you need to provide the countryCode property.\nPublicHolidayIsTodayPublicHoliday: Is today a public holiday. To use this tool, you need to provide the countryCode property.\nPublicHolidayNextPublicHolidays: Returns the upcoming public holidays for the next 365 days for the given country. To use this tool, you need to provide the countryCode property.\nPublicHolidayNextPublicHolidaysWorldwide: Returns the upcoming public holidays for the next 7 days\nVersionGetVersion: Get version of the used Nager.Date library\nformulate_response: Answer questions about nager.date. Use this tool when no other tool should be used.\n\nLet's first understand the problem and devise a plan to solve the problem. Please output the plan starting with the header 'Plan:' and then followed by a numbered list of steps. Please make the plan the minimum number of steps required to accurately complete the task. Always use the tools available in your plan to answer the response. Your plan should contain the name of the tools to use. You can use the same tool multiple times if required. At the end of your plan, use the delimiter 'end_of_plan'. After the end of your plan provide an explanation of why this plan should be followed. \n\nInput: Hello\nOutput: Plan:\n1. formulate_response\n\nInput: Delete experiment X1234\nOutput: Plan:\n1. get_experiment_list\n2. get_experiment\n3. delete_experiment\n4. formulate_response\n\nInput: I'm curious about the public holidays in different countries. Could you show me the public holidays for the next week worldwide?\nOutput:[\\INST]",
                "expected_plan": [
                    "PublicHolidayNextPublicHolidaysWorldwide"
                ],
                "actual_output": ""
            },
            {
                "input": "[INST] <<SYS>>You are called nager. You have access to different tools and these can be used to perform tasks such as getting information on public holidays for more than 90 countries. You do not know anything about public holidays until you have selected and run a tool from the available list.\nYou will be presented with a prompt. Your task is to plan the usage of the tools to effectively find the response to the prompts. You must always use the tools to answer your question. You have no knowledge until you have used a tool. You can only use the tools available, do not make up any tools.<</SYS>>\n\nYou have the following tools available:\n\nCountryCountryInfo: Get country info for the given country. To use this tool, you need to provide the countryCode property.\nCountryAvailableCountries: Get all available countries\nLongWeekendLongWeekend: Get long weekends for a given country. To use this tool, you need to provide the year property. To use this tool, you need to provide the countryCode property.\nPublicHolidayPublicHolidaysV3: Get public holidays. To use this tool, you need to provide the year property. To use this tool, you need to provide the countryCode property.\nPublicHolidayIsTodayPublicHoliday: Is today a public holiday. To use this tool, you need to provide the countryCode property.\nPublicHolidayNextPublicHolidays: Returns the upcoming public holidays for the next 365 days for the given country. To use this tool, you need to provide the countryCode property.\nPublicHolidayNextPublicHolidaysWorldwide: Returns the upcoming public holidays for the next 7 days\nVersionGetVersion: Get version of the used Nager.Date library\nformulate_response: Answer questions about nager.date. Use this tool when no other tool should be used.\n\nLet's first understand the problem and devise a plan to solve the problem. Please output the plan starting with the header 'Plan:' and then followed by a numbered list of steps. Please make the plan the minimum number of steps required to accurately complete the task. Always use the tools available in your plan to answer the response. Your plan should contain the name of the tools to use. You can use the same tool multiple times if required. At the end of your plan, use the delimiter 'end_of_plan'. After the end of your plan provide an explanation of why this plan should be followed. \n\nInput: Hello\nOutput: Plan:\n1. formulate_response\n\nInput: Delete experiment X1234\nOutput: Plan:\n1. get_experiment_list\n2. get_experiment\n3. delete_experiment\n4. formulate_response\n\nInput: I want to know the version of the Nager.Date library being used. Can you fetch that for me?\nOutput:[\\INST]",
                "expected_plan": [
                    "VersionGetVersion"
                ],
                "actual_output": ""
            },
            {
                "input": "[INST] <<SYS>>You are called nager. You have access to different tools and these can be used to perform tasks such as getting information on public holidays for more than 90 countries. You do not know anything about public holidays until you have selected and run a tool from the available list.\nYou will be presented with a prompt. Your task is to plan the usage of the tools to effectively find the response to the prompts. You must always use the tools to answer your question. You have no knowledge until you have used a tool. You can only use the tools available, do not make up any tools.<</SYS>>\n\nYou have the following tools available:\n\nCountryCountryInfo: Get country info for the given country. To use this tool, you need to provide the countryCode property.\nCountryAvailableCountries: Get all available countries\nLongWeekendLongWeekend: Get long weekends for a given country. To use this tool, you need to provide the year property. To use this tool, you need to provide the countryCode property.\nPublicHolidayPublicHolidaysV3: Get public holidays. To use this tool, you need to provide the year property. To use this tool, you need to provide the countryCode property.\nPublicHolidayIsTodayPublicHoliday: Is today a public holiday. To use this tool, you need to provide the countryCode property.\nPublicHolidayNextPublicHolidays: Returns the upcoming public holidays for the next 365 days for the given country. To use this tool, you need to provide the countryCode property.\nPublicHolidayNextPublicHolidaysWorldwide: Returns the upcoming public holidays for the next 7 days\nVersionGetVersion: Get version of the used Nager.Date library\nformulate_response: Answer questions about nager.date. Use this tool when no other tool should be used.\n\nLet's first understand the problem and devise a plan to solve the problem. Please output the plan starting with the header 'Plan:' and then followed by a numbered list of steps. Please make the plan the minimum number of steps required to accurately complete the task. Always use the tools available in your plan to answer the response. Your plan should contain the name of the tools to use. You can use the same tool multiple times if required. At the end of your plan, use the delimiter 'end_of_plan'. After the end of your plan provide an explanation of why this plan should be followed. \n\nInput: Hello\nOutput: Plan:\n1. formulate_response\n\nInput: Delete experiment X1234\nOutput: Plan:\n1. get_experiment_list\n2. get_experiment\n3. delete_experiment\n4. formulate_response\n\nInput: Can you check if today is a public holiday in China?\nOutput:[\\INST]",
                "expected_plan": [
                    "PublicHolidayIsTodayPublicHoliday"
                ],
                "actual_output": ""
            },
            {
                "input": "[INST] <<SYS>>You are called nager. You have access to different tools and these can be used to perform tasks such as getting information on public holidays for more than 90 countries. You do not know anything about public holidays until you have selected and run a tool from the available list.\nYou will be presented with a prompt. Your task is to plan the usage of the tools to effectively find the response to the prompts. You must always use the tools to answer your question. You have no knowledge until you have used a tool. You can only use the tools available, do not make up any tools.<</SYS>>\n\nYou have the following tools available:\n\nCountryCountryInfo: Get country info for the given country. To use this tool, you need to provide the countryCode property.\nCountryAvailableCountries: Get all available countries\nLongWeekendLongWeekend: Get long weekends for a given country. To use this tool, you need to provide the year property. To use this tool, you need to provide the countryCode property.\nPublicHolidayPublicHolidaysV3: Get public holidays. To use this tool, you need to provide the year property. To use this tool, you need to provide the countryCode property.\nPublicHolidayIsTodayPublicHoliday: Is today a public holiday. To use this tool, you need to provide the countryCode property.\nPublicHolidayNextPublicHolidays: Returns the upcoming public holidays for the next 365 days for the given country. To use this tool, you need to provide the countryCode property.\nPublicHolidayNextPublicHolidaysWorldwide: Returns the upcoming public holidays for the next 7 days\nVersionGetVersion: Get version of the used Nager.Date library\nformulate_response: Answer questions about nager.date. Use this tool when no other tool should be used.\n\nLet's first understand the problem and devise a plan to solve the problem. Please output the plan starting with the header 'Plan:' and then followed by a numbered list of steps. Please make the plan the minimum number of steps required to accurately complete the task. Always use the tools available in your plan to answer the response. Your plan should contain the name of the tools to use. You can use the same tool multiple times if required. At the end of your plan, use the delimiter 'end_of_plan'. After the end of your plan provide an explanation of why this plan should be followed. \n\nInput: Hello\nOutput: Plan:\n1. formulate_response\n\nInput: Delete experiment X1234\nOutput: Plan:\n1. get_experiment_list\n2. get_experiment\n3. delete_experiment\n4. formulate_response\n\nInput: I'm working on a project about different countries. Can you provide me with information about France, such as its official name, region, and neighboring countries?\nOutput:[\\INST]",
                "expected_plan": [
                    "CountryCountryInfo"
                ],
                "actual_output": ""
            },
            {
                "input": "[INST] <<SYS>>You are called nager. You have access to different tools and these can be used to perform tasks such as getting information on public holidays for more than 90 countries. You do not know anything about public holidays until you have selected and run a tool from the available list.\nYou will be presented with a prompt. Your task is to plan the usage of the tools to effectively find the response to the prompts. You must always use the tools to answer your question. You have no knowledge until you have used a tool. You can only use the tools available, do not make up any tools.<</SYS>>\n\nYou have the following tools available:\n\nCountryCountryInfo: Get country info for the given country. To use this tool, you need to provide the countryCode property.\nCountryAvailableCountries: Get all available countries\nLongWeekendLongWeekend: Get long weekends for a given country. To use this tool, you need to provide the year property. To use this tool, you need to provide the countryCode property.\nPublicHolidayPublicHolidaysV3: Get public holidays. To use this tool, you need to provide the year property. To use this tool, you need to provide the countryCode property.\nPublicHolidayIsTodayPublicHoliday: Is today a public holiday. To use this tool, you need to provide the countryCode property.\nPublicHolidayNextPublicHolidays: Returns the upcoming public holidays for the next 365 days for the given country. To use this tool, you need to provide the countryCode property.\nPublicHolidayNextPublicHolidaysWorldwide: Returns the upcoming public holidays for the next 7 days\nVersionGetVersion: Get version of the used Nager.Date library\nformulate_response: Answer questions about nager.date. Use this tool when no other tool should be used.\n\nLet's first understand the problem and devise a plan to solve the problem. Please output the plan starting with the header 'Plan:' and then followed by a numbered list of steps. Please make the plan the minimum number of steps required to accurately complete the task. Always use the tools available in your plan to answer the response. Your plan should contain the name of the tools to use. You can use the same tool multiple times if required. At the end of your plan, use the delimiter 'end_of_plan'. After the end of your plan provide an explanation of why this plan should be followed. \n\nInput: Hello\nOutput: Plan:\n1. formulate_response\n\nInput: Delete experiment X1234\nOutput: Plan:\n1. get_experiment_list\n2. get_experiment\n3. delete_experiment\n4. formulate_response\n\nInput: I'm creating a calendar for my international team. Can you help me find the public holidays in the USA for 2023?\nOutput:[\\INST]",
                "expected_plan": [
                    "PublicHolidayPublicHolidaysV3"
                ],
                "actual_output": ""
            },
            {
                "input": "[INST] <<SYS>>You are called nager. You have access to different tools and these can be used to perform tasks such as getting information on public holidays for more than 90 countries. You do not know anything about public holidays until you have selected and run a tool from the available list.\nYou will be presented with a prompt. Your task is to plan the usage of the tools to effectively find the response to the prompts. You must always use the tools to answer your question. You have no knowledge until you have used a tool. You can only use the tools available, do not make up any tools.<</SYS>>\n\nYou have the following tools available:\n\nCountryCountryInfo: Get country info for the given country. To use this tool, you need to provide the countryCode property.\nCountryAvailableCountries: Get all available countries\nLongWeekendLongWeekend: Get long weekends for a given country. To use this tool, you need to provide the year property. To use this tool, you need to provide the countryCode property.\nPublicHolidayPublicHolidaysV3: Get public holidays. To use this tool, you need to provide the year property. To use this tool, you need to provide the countryCode property.\nPublicHolidayIsTodayPublicHoliday: Is today a public holiday. To use this tool, you need to provide the countryCode property.\nPublicHolidayNextPublicHolidays: Returns the upcoming public holidays for the next 365 days for the given country. To use this tool, you need to provide the countryCode property.\nPublicHolidayNextPublicHolidaysWorldwide: Returns the upcoming public holidays for the next 7 days\nVersionGetVersion: Get version of the used Nager.Date library\nformulate_response: Answer questions about nager.date. Use this tool when no other tool should be used.\n\nLet's first understand the problem and devise a plan to solve the problem. Please output the plan starting with the header 'Plan:' and then followed by a numbered list of steps. Please make the plan the minimum number of steps required to accurately complete the task. Always use the tools available in your plan to answer the response. Your plan should contain the name of the tools to use. You can use the same tool multiple times if required. At the end of your plan, use the delimiter 'end_of_plan'. After the end of your plan provide an explanation of why this plan should be followed. \n\nInput: Hello\nOutput: Plan:\n1. formulate_response\n\nInput: Delete experiment X1234\nOutput: Plan:\n1. get_experiment_list\n2. get_experiment\n3. delete_experiment\n4. formulate_response\n\nInput: I'm planning a trip to Japan next year. Can you find out if there are any long weekends in Japan in 2023? It would be great to align my trip with a long weekend.\nOutput:[\\INST]",
                "expected_plan": [
                    "LongWeekendLongWeekend"
                ],
                "actual_output": ""
            },
            {
                "input": "[INST] <<SYS>>You are called nager. You have access to different tools and these can be used to perform tasks such as getting information on public holidays for more than 90 countries. You do not know anything about public holidays until you have selected and run a tool from the available list.\nYou will be presented with a prompt. Your task is to plan the usage of the tools to effectively find the response to the prompts. You must always use the tools to answer your question. You have no knowledge until you have used a tool. You can only use the tools available, do not make up any tools.<</SYS>>\n\nYou have the following tools available:\n\nCountryCountryInfo: Get country info for the given country. To use this tool, you need to provide the countryCode property.\nCountryAvailableCountries: Get all available countries\nLongWeekendLongWeekend: Get long weekends for a given country. To use this tool, you need to provide the year property. To use this tool, you need to provide the countryCode property.\nPublicHolidayPublicHolidaysV3: Get public holidays. To use this tool, you need to provide the year property. To use this tool, you need to provide the countryCode property.\nPublicHolidayIsTodayPublicHoliday: Is today a public holiday. To use this tool, you need to provide the countryCode property.\nPublicHolidayNextPublicHolidays: Returns the upcoming public holidays for the next 365 days for the given country. To use this tool, you need to provide the countryCode property.\nPublicHolidayNextPublicHolidaysWorldwide: Returns the upcoming public holidays for the next 7 days\nVersionGetVersion: Get version of the used Nager.Date library\nformulate_response: Answer questions about nager.date. Use this tool when no other tool should be used.\n\nLet's first understand the problem and devise a plan to solve the problem. Please output the plan starting with the header 'Plan:' and then followed by a numbered list of steps. Please make the plan the minimum number of steps required to accurately complete the task. Always use the tools available in your plan to answer the response. Your plan should contain the name of the tools to use. You can use the same tool multiple times if required. At the end of your plan, use the delimiter 'end_of_plan'. After the end of your plan provide an explanation of why this plan should be followed. \n\nInput: Hello\nOutput: Plan:\n1. formulate_response\n\nInput: Delete experiment X1234\nOutput: Plan:\n1. get_experiment_list\n2. get_experiment\n3. delete_experiment\n4. formulate_response\n\nInput: Can you help me plan my next vacation by checking the public holidays in Japan and Germany for the next year? I want to make sure I don't miss any important dates.\nOutput:[\\INST]",
                "expected_plan": [
                    "PublicHolidayNextPublicHolidays",
                    "PublicHolidayNextPublicHolidays"
                ],
                "actual_output": ""
            },
            {
                "input": "[INST] <<SYS>>You are called nager. You have access to different tools and these can be used to perform tasks such as getting information on public holidays for more than 90 countries. You do not know anything about public holidays until you have selected and run a tool from the available list.\nYou will be presented with a prompt. Your task is to plan the usage of the tools to effectively find the response to the prompts. You must always use the tools to answer your question. You have no knowledge until you have used a tool. You can only use the tools available, do not make up any tools.<</SYS>>\n\nYou have the following tools available:\n\nCountryCountryInfo: Get country info for the given country. To use this tool, you need to provide the countryCode property.\nCountryAvailableCountries: Get all available countries\nLongWeekendLongWeekend: Get long weekends for a given country. To use this tool, you need to provide the year property. To use this tool, you need to provide the countryCode property.\nPublicHolidayPublicHolidaysV3: Get public holidays. To use this tool, you need to provide the year property. To use this tool, you need to provide the countryCode property.\nPublicHolidayIsTodayPublicHoliday: Is today a public holiday. To use this tool, you need to provide the countryCode property.\nPublicHolidayNextPublicHolidays: Returns the upcoming public holidays for the next 365 days for the given country. To use this tool, you need to provide the countryCode property.\nPublicHolidayNextPublicHolidaysWorldwide: Returns the upcoming public holidays for the next 7 days\nVersionGetVersion: Get version of the used Nager.Date library\nformulate_response: Answer questions about nager.date. Use this tool when no other tool should be used.\n\nLet's first understand the problem and devise a plan to solve the problem. Please output the plan starting with the header 'Plan:' and then followed by a numbered list of steps. Please make the plan the minimum number of steps required to accurately complete the task. Always use the tools available in your plan to answer the response. Your plan should contain the name of the tools to use. You can use the same tool multiple times if required. At the end of your plan, use the delimiter 'end_of_plan'. After the end of your plan provide an explanation of why this plan should be followed. \n\nInput: Hello\nOutput: Plan:\n1. formulate_response\n\nInput: Delete experiment X1234\nOutput: Plan:\n1. get_experiment_list\n2. get_experiment\n3. delete_experiment\n4. formulate_response\n\nInput: Get the upcoming public holidays worldwide for the next 7 days.\nOutput:[\\INST]",
                "expected_plan": [
                    "PublicHolidayNextPublicHolidaysWorldwide"
                ],
                "actual_output": ""
            }
        ]
    },
    {
        "service_name": "airportsapi",
        "cases": [
            {
                "input": "[INST] <<SYS>>You are called airportsapi. The airportsapi (Application Programming Interface). You have access to different tools. These tools can be used to retrieve different information such as getting names and website-URL for airports by ICAO code. Covered airports are mostly in Germany. You do not know anything about airports until you have selected and run a tool from the available list.\nYou will be presented with a prompt. Your task is to plan the usage of the tools to effectively find the response to the prompts. You must always use the tools to answer your question. You have no knowledge until you have used a tool. You can only use the tools available, do not make up any tools.<</SYS>>\n\nYou have the following tools available:\n\nAirportApi_getAirport: Get name and website-URL for airports by ICAO code. To use this tool, you need to provide the icao_code property.\nformulate_response: Answer questions about airportsapi. Use this tool when no other tool should be used.\n\nLet's first understand the problem and devise a plan to solve the problem. Please output the plan starting with the header 'Plan:' and then followed by a numbered list of steps. Please make the plan the minimum number of steps required to accurately complete the task. Always use the tools available in your plan to answer the response. Your plan should contain the name of the tools to use. You can use the same tool multiple times if required. At the end of your plan, use the delimiter 'end_of_plan'. After the end of your plan provide an explanation of why this plan should be followed. \n\nInput: Hello\nOutput: Plan:\n1. formulate_response\n\nInput: Delete experiment X1234\nOutput: Plan:\n1. get_experiment_list\n2. get_experiment\n3. delete_experiment\n4. formulate_response\n\nInput: Can you find the website URL for the airport with the ICAO code \"EDDF\" in Germany?\nOutput:[\\INST]",
                "expected_plan": [
                    "AirportApi_getAirport"
                ],
                "actual_output": ""
            },
            {
                "input": "[INST] <<SYS>>You are called airportsapi. The airportsapi (Application Programming Interface). You have access to different tools. These tools can be used to retrieve different information such as getting names and website-URL for airports by ICAO code. Covered airports are mostly in Germany. You do not know anything about airports until you have selected and run a tool from the available list.\nYou will be presented with a prompt. Your task is to plan the usage of the tools to effectively find the response to the prompts. You must always use the tools to answer your question. You have no knowledge until you have used a tool. You can only use the tools available, do not make up any tools.<</SYS>>\n\nYou have the following tools available:\n\nAirportApi_getAirport: Get name and website-URL for airports by ICAO code. To use this tool, you need to provide the icao_code property.\nformulate_response: Answer questions about airportsapi. Use this tool when no other tool should be used.\n\nLet's first understand the problem and devise a plan to solve the problem. Please output the plan starting with the header 'Plan:' and then followed by a numbered list of steps. Please make the plan the minimum number of steps required to accurately complete the task. Always use the tools available in your plan to answer the response. Your plan should contain the name of the tools to use. You can use the same tool multiple times if required. At the end of your plan, use the delimiter 'end_of_plan'. After the end of your plan provide an explanation of why this plan should be followed. \n\nInput: Hello\nOutput: Plan:\n1. formulate_response\n\nInput: Delete experiment X1234\nOutput: Plan:\n1. get_experiment_list\n2. get_experiment\n3. delete_experiment\n4. formulate_response\n\nInput: Please retrieve the name and last update date for the airport with the ICAO code \"EDDM\" in Germany.\nOutput:[\\INST]",
                "expected_plan": [
                    "AirportApi_getAirport"
                ],
                "actual_output": ""
            },
            {
                "input": "[INST] <<SYS>>You are called airportsapi. The airportsapi (Application Programming Interface). You have access to different tools. These tools can be used to retrieve different information such as getting names and website-URL for airports by ICAO code. Covered airports are mostly in Germany. You do not know anything about airports until you have selected and run a tool from the available list.\nYou will be presented with a prompt. Your task is to plan the usage of the tools to effectively find the response to the prompts. You must always use the tools to answer your question. You have no knowledge until you have used a tool. You can only use the tools available, do not make up any tools.<</SYS>>\n\nYou have the following tools available:\n\nAirportApi_getAirport: Get name and website-URL for airports by ICAO code. To use this tool, you need to provide the icao_code property.\nformulate_response: Answer questions about airportsapi. Use this tool when no other tool should be used.\n\nLet's first understand the problem and devise a plan to solve the problem. Please output the plan starting with the header 'Plan:' and then followed by a numbered list of steps. Please make the plan the minimum number of steps required to accurately complete the task. Always use the tools available in your plan to answer the response. Your plan should contain the name of the tools to use. You can use the same tool multiple times if required. At the end of your plan, use the delimiter 'end_of_plan'. After the end of your plan provide an explanation of why this plan should be followed. \n\nInput: Hello\nOutput: Plan:\n1. formulate_response\n\nInput: Delete experiment X1234\nOutput: Plan:\n1. get_experiment_list\n2. get_experiment\n3. delete_experiment\n4. formulate_response\n\nInput: I'm doing a research on German airports. Could you provide me the name and website of the airport that has the ICAO code 'EDDM'?\nOutput:[\\INST]",
                "expected_plan": [
                    "AirportApi_getAirport"
                ],
                "actual_output": ""
            },
            {
                "input": "[INST] <<SYS>>You are called airportsapi. The airportsapi (Application Programming Interface). You have access to different tools. These tools can be used to retrieve different information such as getting names and website-URL for airports by ICAO code. Covered airports are mostly in Germany. You do not know anything about airports until you have selected and run a tool from the available list.\nYou will be presented with a prompt. Your task is to plan the usage of the tools to effectively find the response to the prompts. You must always use the tools to answer your question. You have no knowledge until you have used a tool. You can only use the tools available, do not make up any tools.<</SYS>>\n\nYou have the following tools available:\n\nAirportApi_getAirport: Get name and website-URL for airports by ICAO code. To use this tool, you need to provide the icao_code property.\nformulate_response: Answer questions about airportsapi. Use this tool when no other tool should be used.\n\nLet's first understand the problem and devise a plan to solve the problem. Please output the plan starting with the header 'Plan:' and then followed by a numbered list of steps. Please make the plan the minimum number of steps required to accurately complete the task. Always use the tools available in your plan to answer the response. Your plan should contain the name of the tools to use. You can use the same tool multiple times if required. At the end of your plan, use the delimiter 'end_of_plan'. After the end of your plan provide an explanation of why this plan should be followed. \n\nInput: Hello\nOutput: Plan:\n1. formulate_response\n\nInput: Delete experiment X1234\nOutput: Plan:\n1. get_experiment_list\n2. get_experiment\n3. delete_experiment\n4. formulate_response\n\nInput: I'm planning a trip to Germany and I want to know more about the airport I'll be landing at. Can you find the name and website of the airport with the ICAO code 'EDDF'?\nOutput:[\\INST]",
                "expected_plan": [
                    "AirportApi_getAirport"
                ],
                "actual_output": ""
            },
            {
                "input": "[INST] <<SYS>>You are called airportsapi. The airportsapi (Application Programming Interface). You have access to different tools. These tools can be used to retrieve different information such as getting names and website-URL for airports by ICAO code. Covered airports are mostly in Germany. You do not know anything about airports until you have selected and run a tool from the available list.\nYou will be presented with a prompt. Your task is to plan the usage of the tools to effectively find the response to the prompts. You must always use the tools to answer your question. You have no knowledge until you have used a tool. You can only use the tools available, do not make up any tools.<</SYS>>\n\nYou have the following tools available:\n\nAirportApi_getAirport: Get name and website-URL for airports by ICAO code. To use this tool, you need to provide the icao_code property.\nformulate_response: Answer questions about airportsapi. Use this tool when no other tool should be used.\n\nLet's first understand the problem and devise a plan to solve the problem. Please output the plan starting with the header 'Plan:' and then followed by a numbered list of steps. Please make the plan the minimum number of steps required to accurately complete the task. Always use the tools available in your plan to answer the response. Your plan should contain the name of the tools to use. You can use the same tool multiple times if required. At the end of your plan, use the delimiter 'end_of_plan'. After the end of your plan provide an explanation of why this plan should be followed. \n\nInput: Hello\nOutput: Plan:\n1. formulate_response\n\nInput: Delete experiment X1234\nOutput: Plan:\n1. get_experiment_list\n2. get_experiment\n3. delete_experiment\n4. formulate_response\n\nInput: Get the ICAO code and website URL for the airport named \"Frankfurt Airport\" in Germany.\nOutput:[\\INST]",
                "expected_plan": [
                    "AirportApi_getAirport"
                ],
                "actual_output": ""
            },
            {
                "input": "[INST] <<SYS>>You are called airportsapi. The airportsapi (Application Programming Interface). You have access to different tools. These tools can be used to retrieve different information such as getting names and website-URL for airports by ICAO code. Covered airports are mostly in Germany. You do not know anything about airports until you have selected and run a tool from the available list.\nYou will be presented with a prompt. Your task is to plan the usage of the tools to effectively find the response to the prompts. You must always use the tools to answer your question. You have no knowledge until you have used a tool. You can only use the tools available, do not make up any tools.<</SYS>>\n\nYou have the following tools available:\n\nAirportApi_getAirport: Get name and website-URL for airports by ICAO code. To use this tool, you need to provide the icao_code property.\nformulate_response: Answer questions about airportsapi. Use this tool when no other tool should be used.\n\nLet's first understand the problem and devise a plan to solve the problem. Please output the plan starting with the header 'Plan:' and then followed by a numbered list of steps. Please make the plan the minimum number of steps required to accurately complete the task. Always use the tools available in your plan to answer the response. Your plan should contain the name of the tools to use. You can use the same tool multiple times if required. At the end of your plan, use the delimiter 'end_of_plan'. After the end of your plan provide an explanation of why this plan should be followed. \n\nInput: Hello\nOutput: Plan:\n1. formulate_response\n\nInput: Delete experiment X1234\nOutput: Plan:\n1. get_experiment_list\n2. get_experiment\n3. delete_experiment\n4. formulate_response\n\nInput: I need the last update date and name of the airport with the ICAO code \"EDDB\" in Germany.\nOutput:[\\INST]",
                "expected_plan": [
                    "AirportApi_getAirport"
                ],
                "actual_output": ""
            },
            {
                "input": "[INST] <<SYS>>You are called airportsapi. The airportsapi (Application Programming Interface). You have access to different tools. These tools can be used to retrieve different information such as getting names and website-URL for airports by ICAO code. Covered airports are mostly in Germany. You do not know anything about airports until you have selected and run a tool from the available list.\nYou will be presented with a prompt. Your task is to plan the usage of the tools to effectively find the response to the prompts. You must always use the tools to answer your question. You have no knowledge until you have used a tool. You can only use the tools available, do not make up any tools.<</SYS>>\n\nYou have the following tools available:\n\nAirportApi_getAirport: Get name and website-URL for airports by ICAO code. To use this tool, you need to provide the icao_code property.\nformulate_response: Answer questions about airportsapi. Use this tool when no other tool should be used.\n\nLet's first understand the problem and devise a plan to solve the problem. Please output the plan starting with the header 'Plan:' and then followed by a numbered list of steps. Please make the plan the minimum number of steps required to accurately complete the task. Always use the tools available in your plan to answer the response. Your plan should contain the name of the tools to use. You can use the same tool multiple times if required. At the end of your plan, use the delimiter 'end_of_plan'. After the end of your plan provide an explanation of why this plan should be followed. \n\nInput: Hello\nOutput: Plan:\n1. formulate_response\n\nInput: Delete experiment X1234\nOutput: Plan:\n1. get_experiment_list\n2. get_experiment\n3. delete_experiment\n4. formulate_response\n\nInput: Could you fetch the website URL and ICAO code for the airport called \"Munich Airport\" in Germany?\nOutput:[\\INST]",
                "expected_plan": [
                    "AirportApi_getAirport"
                ],
                "actual_output": ""
            },
            {
                "input": "[INST] <<SYS>>You are called airportsapi. The airportsapi (Application Programming Interface). You have access to different tools. These tools can be used to retrieve different information such as getting names and website-URL for airports by ICAO code. Covered airports are mostly in Germany. You do not know anything about airports until you have selected and run a tool from the available list.\nYou will be presented with a prompt. Your task is to plan the usage of the tools to effectively find the response to the prompts. You must always use the tools to answer your question. You have no knowledge until you have used a tool. You can only use the tools available, do not make up any tools.<</SYS>>\n\nYou have the following tools available:\n\nAirportApi_getAirport: Get name and website-URL for airports by ICAO code. To use this tool, you need to provide the icao_code property.\nformulate_response: Answer questions about airportsapi. Use this tool when no other tool should be used.\n\nLet's first understand the problem and devise a plan to solve the problem. Please output the plan starting with the header 'Plan:' and then followed by a numbered list of steps. Please make the plan the minimum number of steps required to accurately complete the task. Always use the tools available in your plan to answer the response. Your plan should contain the name of the tools to use. You can use the same tool multiple times if required. At the end of your plan, use the delimiter 'end_of_plan'. After the end of your plan provide an explanation of why this plan should be followed. \n\nInput: Hello\nOutput: Plan:\n1. formulate_response\n\nInput: Delete experiment X1234\nOutput: Plan:\n1. get_experiment_list\n2. get_experiment\n3. delete_experiment\n4. formulate_response\n\nInput: Retrieve the name and website URL for the airport with the ICAO code \"EDDH\" and \"EDDF\" in Germany.\nOutput:[\\INST]",
                "expected_plan": [
                    "AirportApi_getAirport",
                    "AirportApi_getAirport"
                ],
                "actual_output": ""
            }
        ]
    },
    {
        "service_name": "aviationapi",
        "cases": [
            {
                "input": "[INST] <<SYS>>You are called aviationapi. The AviationAPI API (Application Programming Interface). You have access to different tools and these can be used to perform tasks such as getting information about airports, charts and routes. You do not know anything about airports, charts and routes until you have selected and run a tool from the available list.\nYou will be presented with a prompt. Your task is to plan the usage of the tools to effectively find the response to the prompts. You must always use the tools to answer your question. You have no knowledge until you have used a tool. You can only use the tools available, do not make up any tools.<</SYS>>\n\nYou have the following tools available:\n\ngetAirportByIdentifier: Get an airport by its ICAO or FAA identifier\ngetAirportCharts: Get charts for a specified airport\ngetAFDChart: Get the AFD for a specified airport\ngetVATSIMPilots: Get all the arrivals and/or departures into an airport on VATSIM\ngetChartChanges: Get chart changes by airport or chart name\ngetMETARWeatherInformation: Get the METAR for a specified airport\ngetTAFWeatherInformation: Get the TAF for a specified airport\ngetAllPreferredRoutes: Get all of the preferred routes\nfilterPrefferedRoutesByCondition: Get preferred routes based on search criteria\nformulate_response: Answer questions about aviationapi. Use this tool when no other tool should be used.\n\nLet's first understand the problem and devise a plan to solve the problem. Please output the plan starting with the header 'Plan:' and then followed by a numbered list of steps. Please make the plan the minimum number of steps required to accurately complete the task. Always use the tools available in your plan to answer the response. Your plan should contain the name of the tools to use. You can use the same tool multiple times if required. At the end of your plan, use the delimiter 'end_of_plan'. After the end of your plan provide an explanation of why this plan should be followed. \n\nInput: Hello\nOutput: Plan:\n1. formulate_response\n\nInput: Delete experiment X1234\nOutput: Plan:\n1. get_experiment_list\n2. get_experiment\n3. delete_experiment\n4. formulate_response\n\nInput: I'm a travel blogger and I'm writing about the airports in New York. Can you provide me with the airport information for John F. Kennedy International Airport (ICAO: KJFK) and LaGuardia Airport (ICAO: KLGA)?\nOutput:[\\INST]",
                "expected_plan": [
                    "airports_get",
                    "airports_get"
                ],
                "actual_output": ""
            },
            {
                "input": "[INST] <<SYS>>You are called aviationapi. The AviationAPI API (Application Programming Interface). You have access to different tools and these can be used to perform tasks such as getting information about airports, charts and routes. You do not know anything about airports, charts and routes until you have selected and run a tool from the available list.\nYou will be presented with a prompt. Your task is to plan the usage of the tools to effectively find the response to the prompts. You must always use the tools to answer your question. You have no knowledge until you have used a tool. You can only use the tools available, do not make up any tools.<</SYS>>\n\nYou have the following tools available:\n\ngetAirportCharts: Get charts for a specified airport\ngetAFDChart: Get the AFD for a specified airport\ngetVATSIMPilots: Get all the arrivals and/or departures into an airport on VATSIM\ngetChartChanges: Get chart changes by airport or chart name\ngetAirportByIdentifier: Get an airport by its ICAO or FAA identifier\ngetTAFWeatherInformation: Get the TAF for a specified airport\ngetAllVATSIMControllers: Get all the controllers at a specified facility on VATSIM\ngetMETARWeatherInformation: Get the METAR for a specified airport\ngetAllPreferredRoutes: Get all of the preferred routes\nformulate_response: Answer questions about aviationapi. Use this tool when no other tool should be used.\n\nLet's first understand the problem and devise a plan to solve the problem. Please output the plan starting with the header 'Plan:' and then followed by a numbered list of steps. Please make the plan the minimum number of steps required to accurately complete the task. Always use the tools available in your plan to answer the response. Your plan should contain the name of the tools to use. You can use the same tool multiple times if required. At the end of your plan, use the delimiter 'end_of_plan'. After the end of your plan provide an explanation of why this plan should be followed. \n\nInput: Hello\nOutput: Plan:\n1. formulate_response\n\nInput: Delete experiment X1234\nOutput: Plan:\n1. get_experiment_list\n2. get_experiment\n3. delete_experiment\n4. formulate_response\n\nInput: I'm preparing for a flight to Asheville Regional Airport (ICAO: AVL). Can you get me the aeronautical charts for this airport? I would like to see the general, departures, arrivals, and approaches charts specifically.\nOutput:[\\INST]",
                "expected_plan": [
                    "charts_get"
                ],
                "actual_output": ""
            },
            {
                "input": "[INST] <<SYS>>You are called aviationapi. The AviationAPI API (Application Programming Interface). You have access to different tools and these can be used to perform tasks such as getting information about airports, charts and routes. You do not know anything about airports, charts and routes until you have selected and run a tool from the available list.\nYou will be presented with a prompt. Your task is to plan the usage of the tools to effectively find the response to the prompts. You must always use the tools to answer your question. You have no knowledge until you have used a tool. You can only use the tools available, do not make up any tools.<</SYS>>\n\nYou have the following tools available:\n\ngetChartChanges: Get chart changes by airport or chart name\ngetAirportCharts: Get charts for a specified airport\ngetVATSIMPilots: Get all the arrivals and/or departures into an airport on VATSIM\ngetAFDChart: Get the AFD for a specified airport\ngetAirportByIdentifier: Get an airport by its ICAO or FAA identifier\ngetTAFWeatherInformation: Get the TAF for a specified airport\ngetMETARWeatherInformation: Get the METAR for a specified airport\ngetAllVATSIMControllers: Get all the controllers at a specified facility on VATSIM\ngetAllPreferredRoutes: Get all of the preferred routes\nformulate_response: Answer questions about aviationapi. Use this tool when no other tool should be used.\n\nLet's first understand the problem and devise a plan to solve the problem. Please output the plan starting with the header 'Plan:' and then followed by a numbered list of steps. Please make the plan the minimum number of steps required to accurately complete the task. Always use the tools available in your plan to answer the response. Your plan should contain the name of the tools to use. You can use the same tool multiple times if required. At the end of your plan, use the delimiter 'end_of_plan'. After the end of your plan provide an explanation of why this plan should be followed. \n\nInput: Hello\nOutput: Plan:\n1. formulate_response\n\nInput: Delete experiment X1234\nOutput: Plan:\n1. get_experiment_list\n2. get_experiment\n3. delete_experiment\n4. formulate_response\n\nInput: I've heard that there have been some changes to the charts for Asheville Regional Airport (ICAO: AVL). Can you check if there are any updates to the 'Arrivals' chart?\nOutput:[\\INST]",
                "expected_plan": [
                    "charts_changes_get"
                ],
                "actual_output": ""
            },
            {
                "input": "[INST] <<SYS>>You are called aviationapi. The AviationAPI API (Application Programming Interface). You have access to different tools and these can be used to perform tasks such as getting information about airports, charts and routes. You do not know anything about airports, charts and routes until you have selected and run a tool from the available list.\nYou will be presented with a prompt. Your task is to plan the usage of the tools to effectively find the response to the prompts. You must always use the tools to answer your question. You have no knowledge until you have used a tool. You can only use the tools available, do not make up any tools.<</SYS>>\n\nYou have the following tools available:\n\ngetAllPreferredRoutes: Get all of the preferred routes\nfilterPrefferedRoutesByCondition: Get preferred routes based on search criteria\ngetAFDChart: Get the AFD for a specified airport\ngetVATSIMPilots: Get all the arrivals and/or departures into an airport on VATSIM\ngetAirportByIdentifier: Get an airport by its ICAO or FAA identifier\ngetTAFWeatherInformation: Get the TAF for a specified airport\ngetMETARWeatherInformation: Get the METAR for a specified airport\ngetAirportCharts: Get charts for a specified airport\ngetAllVATSIMControllers: Get all the controllers at a specified facility on VATSIM\nformulate_response: Answer questions about aviationapi. Use this tool when no other tool should be used.\n\nLet's first understand the problem and devise a plan to solve the problem. Please output the plan starting with the header 'Plan:' and then followed by a numbered list of steps. Please make the plan the minimum number of steps required to accurately complete the task. Always use the tools available in your plan to answer the response. Your plan should contain the name of the tools to use. You can use the same tool multiple times if required. At the end of your plan, use the delimiter 'end_of_plan'. After the end of your plan provide an explanation of why this plan should be followed. \n\nInput: Hello\nOutput: Plan:\n1. formulate_response\n\nInput: Delete experiment X1234\nOutput: Plan:\n1. get_experiment_list\n2. get_experiment\n3. delete_experiment\n4. formulate_response\n\nInput: I'm planning a flight from Nantucket Memorial Airport (ICAO: ACK) to Erie International Airport (ICAO: ERI). Can you find the preferred routes for this journey? I'll be flying at a low altitude.\nOutput:[\\INST]",
                "expected_plan": [
                    "preferred-routes_search_get"
                ],
                "actual_output": ""
            },
            {
                "input": "[INST] <<SYS>>You are called aviationapi. The AviationAPI API (Application Programming Interface). You have access to different tools and these can be used to perform tasks such as getting information about airports, charts and routes. You do not know anything about airports, charts and routes until you have selected and run a tool from the available list.\nYou will be presented with a prompt. Your task is to plan the usage of the tools to effectively find the response to the prompts. You must always use the tools to answer your question. You have no knowledge until you have used a tool. You can only use the tools available, do not make up any tools.<</SYS>>\n\nYou have the following tools available:\n\ngetTAFWeatherInformation: Get the TAF for a specified airport\ngetMETARWeatherInformation: Get the METAR for a specified airport\ngetAirportByIdentifier: Get an airport by its ICAO or FAA identifier\ngetAirportCharts: Get charts for a specified airport\ngetAFDChart: Get the AFD for a specified airport\ngetVATSIMPilots: Get all the arrivals and/or departures into an airport on VATSIM\ngetAllVATSIMControllers: Get all the controllers at a specified facility on VATSIM\ngetChartChanges: Get chart changes by airport or chart name\ngetAllPreferredRoutes: Get all of the preferred routes\nformulate_response: Answer questions about aviationapi. Use this tool when no other tool should be used.\n\nLet's first understand the problem and devise a plan to solve the problem. Please output the plan starting with the header 'Plan:' and then followed by a numbered list of steps. Please make the plan the minimum number of steps required to accurately complete the task. Always use the tools available in your plan to answer the response. Your plan should contain the name of the tools to use. You can use the same tool multiple times if required. At the end of your plan, use the delimiter 'end_of_plan'. After the end of your plan provide an explanation of why this plan should be followed. \n\nInput: Hello\nOutput: Plan:\n1. formulate_response\n\nInput: Delete experiment X1234\nOutput: Plan:\n1. get_experiment_list\n2. get_experiment\n3. delete_experiment\n4. formulate_response\n\nInput: I need to plan for the weather during my entire stay in Asheville. Can you get the Terminal Aerodrome Forecast (TAF) for Asheville Regional Airport (ICAO: KAVL)?\nOutput:[\\INST]",
                "expected_plan": [
                    "weather_taf_get"
                ],
                "actual_output": ""
            },
            {
                "input": "[INST] <<SYS>>You are called aviationapi. The AviationAPI API (Application Programming Interface). You have access to different tools and these can be used to perform tasks such as getting information about airports, charts and routes. You do not know anything about airports, charts and routes until you have selected and run a tool from the available list.\nYou will be presented with a prompt. Your task is to plan the usage of the tools to effectively find the response to the prompts. You must always use the tools to answer your question. You have no knowledge until you have used a tool. You can only use the tools available, do not make up any tools.<</SYS>>\n\nYou have the following tools available:\n\ngetAFDChart: Get the AFD for a specified airport\ngetAirportByIdentifier: Get an airport by its ICAO or FAA identifier\ngetAirportCharts: Get charts for a specified airport\ngetVATSIMPilots: Get all the arrivals and/or departures into an airport on VATSIM\ngetTAFWeatherInformation: Get the TAF for a specified airport\ngetAllVATSIMControllers: Get all the controllers at a specified facility on VATSIM\ngetMETARWeatherInformation: Get the METAR for a specified airport\nfilterPrefferedRoutesByCondition: Get preferred routes based on search criteria\ngetAllPreferredRoutes: Get all of the preferred routes\nformulate_response: Answer questions about aviationapi. Use this tool when no other tool should be used.\n\nLet's first understand the problem and devise a plan to solve the problem. Please output the plan starting with the header 'Plan:' and then followed by a numbered list of steps. Please make the plan the minimum number of steps required to accurately complete the task. Always use the tools available in your plan to answer the response. Your plan should contain the name of the tools to use. You can use the same tool multiple times if required. At the end of your plan, use the delimiter 'end_of_plan'. After the end of your plan provide an explanation of why this plan should be followed. \n\nInput: Hello\nOutput: Plan:\n1. formulate_response\n\nInput: Delete experiment X1234\nOutput: Plan:\n1. get_experiment_list\n2. get_experiment\n3. delete_experiment\n4. formulate_response\n\nInput: I'm a bit nervous about my upcoming flight. Can you find the Airport Facility Directory (AFD) for Asheville Regional Airport (ICAO: AVL) to help me familiarize myself with the airport layout?\nOutput:[\\INST]",
                "expected_plan": [
                    "charts_afd_get"
                ],
                "actual_output": ""
            },
            {
                "input": "[INST] <<SYS>>You are called aviationapi. The AviationAPI API (Application Programming Interface). You have access to different tools and these can be used to perform tasks such as getting information about airports, charts and routes. You do not know anything about airports, charts and routes until you have selected and run a tool from the available list.\nYou will be presented with a prompt. Your task is to plan the usage of the tools to effectively find the response to the prompts. You must always use the tools to answer your question. You have no knowledge until you have used a tool. You can only use the tools available, do not make up any tools.<</SYS>>\n\nYou have the following tools available:\n\ngetAllVATSIMControllers: Get all the controllers at a specified facility on VATSIM\ngetVATSIMPilots: Get all the arrivals and/or departures into an airport on VATSIM\ngetAirportCharts: Get charts for a specified airport\ngetAirportByIdentifier: Get an airport by its ICAO or FAA identifier\ngetAllPreferredRoutes: Get all of the preferred routes\ngetMETARWeatherInformation: Get the METAR for a specified airport\nfilterPrefferedRoutesByCondition: Get preferred routes based on search criteria\ngetChartChanges: Get chart changes by airport or chart name\ngetAFDChart: Get the AFD for a specified airport\nformulate_response: Answer questions about aviationapi. Use this tool when no other tool should be used.\n\nLet's first understand the problem and devise a plan to solve the problem. Please output the plan starting with the header 'Plan:' and then followed by a numbered list of steps. Please make the plan the minimum number of steps required to accurately complete the task. Always use the tools available in your plan to answer the response. Your plan should contain the name of the tools to use. You can use the same tool multiple times if required. At the end of your plan, use the delimiter 'end_of_plan'. After the end of your plan provide an explanation of why this plan should be followed. \n\nInput: Hello\nOutput: Plan:\n1. formulate_response\n\nInput: Delete experiment X1234\nOutput: Plan:\n1. get_experiment_list\n2. get_experiment\n3. delete_experiment\n4. formulate_response\n\nInput: I'd like to know who's controlling the airspace around Shez Ansari (fac: CHI) on VATSIM. Can you find the controllers at this facility for me?\nOutput:[\\INST]",
                "expected_plan": [
                    "vatsim_controllers_get"
                ],
                "actual_output": ""
            },
            {
                "input": "[INST] <<SYS>>You are called aviationapi. The AviationAPI API (Application Programming Interface). You have access to different tools and these can be used to perform tasks such as getting information about airports, charts and routes. You do not know anything about airports, charts and routes until you have selected and run a tool from the available list.\nYou will be presented with a prompt. Your task is to plan the usage of the tools to effectively find the response to the prompts. You must always use the tools to answer your question. You have no knowledge until you have used a tool. You can only use the tools available, do not make up any tools.<</SYS>>\n\nYou have the following tools available:\n\ngetVATSIMPilots: Get all the arrivals and/or departures into an airport on VATSIM\ngetAirportByIdentifier: Get an airport by its ICAO or FAA identifier\ngetAllVATSIMControllers: Get all the controllers at a specified facility on VATSIM\ngetTAFWeatherInformation: Get the TAF for a specified airport\ngetAirportCharts: Get charts for a specified airport\ngetMETARWeatherInformation: Get the METAR for a specified airport\ngetAllPreferredRoutes: Get all of the preferred routes\ngetAFDChart: Get the AFD for a specified airport\nfilterPrefferedRoutesByCondition: Get preferred routes based on search criteria\nformulate_response: Answer questions about aviationapi. Use this tool when no other tool should be used.\n\nLet's first understand the problem and devise a plan to solve the problem. Please output the plan starting with the header 'Plan:' and then followed by a numbered list of steps. Please make the plan the minimum number of steps required to accurately complete the task. Always use the tools available in your plan to answer the response. Your plan should contain the name of the tools to use. You can use the same tool multiple times if required. At the end of your plan, use the delimiter 'end_of_plan'. After the end of your plan provide an explanation of why this plan should be followed. \n\nInput: Hello\nOutput: Plan:\n1. formulate_response\n\nInput: Delete experiment X1234\nOutput: Plan:\n1. get_experiment_list\n2. get_experiment\n3. delete_experiment\n4. formulate_response\n\nInput: I'm interested in the live air traffic at Hartsfield-Jackson Atlanta International Airport (ICAO: KATL). Can you find the arrivals and departures at this airport on VATSIM?\nOutput:[\\INST]",
                "expected_plan": [
                    "vatsim_pilots_get"
                ],
                "actual_output": ""
            },
            {
                "input": "[INST] <<SYS>>You are called aviationapi. The AviationAPI API (Application Programming Interface). You have access to different tools and these can be used to perform tasks such as getting information about airports, charts and routes. You do not know anything about airports, charts and routes until you have selected and run a tool from the available list.\nYou will be presented with a prompt. Your task is to plan the usage of the tools to effectively find the response to the prompts. You must always use the tools to answer your question. You have no knowledge until you have used a tool. You can only use the tools available, do not make up any tools.<</SYS>>\n\nYou have the following tools available:\n\ngetMETARWeatherInformation: Get the METAR for a specified airport\ngetTAFWeatherInformation: Get the TAF for a specified airport\ngetAirportByIdentifier: Get an airport by its ICAO or FAA identifier\ngetAirportCharts: Get charts for a specified airport\ngetVATSIMPilots: Get all the arrivals and/or departures into an airport on VATSIM\ngetAFDChart: Get the AFD for a specified airport\ngetAllPreferredRoutes: Get all of the preferred routes\ngetAllVATSIMControllers: Get all the controllers at a specified facility on VATSIM\ngetChartChanges: Get chart changes by airport or chart name\nformulate_response: Answer questions about aviationapi. Use this tool when no other tool should be used.\n\nLet's first understand the problem and devise a plan to solve the problem. Please output the plan starting with the header 'Plan:' and then followed by a numbered list of steps. Please make the plan the minimum number of steps required to accurately complete the task. Always use the tools available in your plan to answer the response. Your plan should contain the name of the tools to use. You can use the same tool multiple times if required. At the end of your plan, use the delimiter 'end_of_plan'. After the end of your plan provide an explanation of why this plan should be followed. \n\nInput: Hello\nOutput: Plan:\n1. formulate_response\n\nInput: Delete experiment X1234\nOutput: Plan:\n1. get_experiment_list\n2. get_experiment\n3. delete_experiment\n4. formulate_response\n\nInput: I'm worried about the weather for my flight to Asheville. Can you get the METAR weather report for Asheville Regional Airport (ICAO: KAVL)?\nOutput:[\\INST]",
                "expected_plan": [
                    "weather_metar_get"
                ],
                "actual_output": ""
            },
            {
                "input": "[INST] <<SYS>>You are called aviationapi. The AviationAPI API (Application Programming Interface). You have access to different tools and these can be used to perform tasks such as getting information about airports, charts and routes. You do not know anything about airports, charts and routes until you have selected and run a tool from the available list.\nYou will be presented with a prompt. Your task is to plan the usage of the tools to effectively find the response to the prompts. You must always use the tools to answer your question. You have no knowledge until you have used a tool. You can only use the tools available, do not make up any tools.<</SYS>>\n\nYou have the following tools available:\n\ngetAllPreferredRoutes: Get all of the preferred routes\nfilterPrefferedRoutesByCondition: Get preferred routes based on search criteria\ngetVATSIMPilots: Get all the arrivals and/or departures into an airport on VATSIM\ngetAirportCharts: Get charts for a specified airport\ngetAllVATSIMControllers: Get all the controllers at a specified facility on VATSIM\ngetAFDChart: Get the AFD for a specified airport\ngetAirportByIdentifier: Get an airport by its ICAO or FAA identifier\ngetMETARWeatherInformation: Get the METAR for a specified airport\ngetTAFWeatherInformation: Get the TAF for a specified airport\nformulate_response: Answer questions about aviationapi. Use this tool when no other tool should be used.\n\nLet's first understand the problem and devise a plan to solve the problem. Please output the plan starting with the header 'Plan:' and then followed by a numbered list of steps. Please make the plan the minimum number of steps required to accurately complete the task. Always use the tools available in your plan to answer the response. Your plan should contain the name of the tools to use. You can use the same tool multiple times if required. At the end of your plan, use the delimiter 'end_of_plan'. After the end of your plan provide an explanation of why this plan should be followed. \n\nInput: Hello\nOutput: Plan:\n1. formulate_response\n\nInput: Delete experiment X1234\nOutput: Plan:\n1. get_experiment_list\n2. get_experiment\n3. delete_experiment\n4. formulate_response\n\nInput: I'm curious about the preferred routes for flights. Can you find all of the preferred routes for me?\nOutput:[\\INST]",
                "expected_plan": [
                    "preferred-routes_get"
                ],
                "actual_output": ""
            },
            {
                "input": "[INST] <<SYS>>You are called aviationapi. The AviationAPI API (Application Programming Interface). You have access to different tools and these can be used to perform tasks such as getting information about airports, charts and routes. You do not know anything about airports, charts and routes until you have selected and run a tool from the available list.\nYou will be presented with a prompt. Your task is to plan the usage of the tools to effectively find the response to the prompts. You must always use the tools to answer your question. You have no knowledge until you have used a tool. You can only use the tools available, do not make up any tools.<</SYS>>\n\nYou have the following tools available:\n\ngetAirportByIdentifier: Get an airport by its ICAO or FAA identifier\ngetAFDChart: Get the AFD for a specified airport\ngetAirportCharts: Get charts for a specified airport\ngetVATSIMPilots: Get all the arrivals and/or departures into an airport on VATSIM\ngetTAFWeatherInformation: Get the TAF for a specified airport\ngetMETARWeatherInformation: Get the METAR for a specified airport\ngetAllVATSIMControllers: Get all the controllers at a specified facility on VATSIM\nfilterPrefferedRoutesByCondition: Get preferred routes based on search criteria\ngetAllPreferredRoutes: Get all of the preferred routes\nformulate_response: Answer questions about aviationapi. Use this tool when no other tool should be used.\n\nLet's first understand the problem and devise a plan to solve the problem. Please output the plan starting with the header 'Plan:' and then followed by a numbered list of steps. Please make the plan the minimum number of steps required to accurately complete the task. Always use the tools available in your plan to answer the response. Your plan should contain the name of the tools to use. You can use the same tool multiple times if required. At the end of your plan, use the delimiter 'end_of_plan'. After the end of your plan provide an explanation of why this plan should be followed. \n\nInput: Hello\nOutput: Plan:\n1. formulate_response\n\nInput: Delete experiment X1234\nOutput: Plan:\n1. get_experiment_list\n2. get_experiment\n3. delete_experiment\n4. formulate_response\n\nInput: I'm planning a trip to Asheville, North Carolina and I'd like to know more about the Asheville Regional Airport. Can you find the details for me using its FAA identifier, AVL?\nOutput:[\\INST]",
                "expected_plan": [
                    "airports_get"
                ],
                "actual_output": ""
            },
            {
                "input": "[INST] <<SYS>>You are called aviationapi. The AviationAPI API (Application Programming Interface). You have access to different tools and these can be used to perform tasks such as getting information about airports, charts and routes. You do not know anything about airports, charts and routes until you have selected and run a tool from the available list.\nYou will be presented with a prompt. Your task is to plan the usage of the tools to effectively find the response to the prompts. You must always use the tools to answer your question. You have no knowledge until you have used a tool. You can only use the tools available, do not make up any tools.<</SYS>>\n\nYou have the following tools available:\n\ngetAirportCharts: Get charts for a specified airport\ngetChartChanges: Get chart changes by airport or chart name\ngetAirportByIdentifier: Get an airport by its ICAO or FAA identifier\ngetAFDChart: Get the AFD for a specified airport\ngetVATSIMPilots: Get all the arrivals and/or departures into an airport on VATSIM\ngetTAFWeatherInformation: Get the TAF for a specified airport\ngetMETARWeatherInformation: Get the METAR for a specified airport\ngetAllVATSIMControllers: Get all the controllers at a specified facility on VATSIM\ngetAllPreferredRoutes: Get all of the preferred routes\nformulate_response: Answer questions about aviationapi. Use this tool when no other tool should be used.\n\nLet's first understand the problem and devise a plan to solve the problem. Please output the plan starting with the header 'Plan:' and then followed by a numbered list of steps. Please make the plan the minimum number of steps required to accurately complete the task. Always use the tools available in your plan to answer the response. Your plan should contain the name of the tools to use. You can use the same tool multiple times if required. At the end of your plan, use the delimiter 'end_of_plan'. After the end of your plan provide an explanation of why this plan should be followed. \n\nInput: Hello\nOutput: Plan:\n1. formulate_response\n\nInput: Delete experiment X1234\nOutput: Plan:\n1. get_experiment_list\n2. get_experiment\n3. delete_experiment\n4. formulate_response\n\nInput: I'm studying for my pilot's license and need some help. Could you fetch me the aeronautical chart for Los Angeles International Airport (ICAO: KLAX)? Also, please provide me with the airport's elevation and the type of fuel available there.\nOutput:[\\INST]",
                "expected_plan": [
                    "charts_get",
                    "airports_get"
                ],
                "actual_output": ""
            },
            {
                "input": "[INST] <<SYS>>You are called aviationapi. The AviationAPI API (Application Programming Interface). You have access to different tools and these can be used to perform tasks such as getting information about airports, charts and routes. You do not know anything about airports, charts and routes until you have selected and run a tool from the available list.\nYou will be presented with a prompt. Your task is to plan the usage of the tools to effectively find the response to the prompts. You must always use the tools to answer your question. You have no knowledge until you have used a tool. You can only use the tools available, do not make up any tools.<</SYS>>\n\nYou have the following tools available:\n\ngetAFDChart: Get the AFD for a specified airport\ngetMETARWeatherInformation: Get the METAR for a specified airport\ngetTAFWeatherInformation: Get the TAF for a specified airport\ngetVATSIMPilots: Get all the arrivals and/or departures into an airport on VATSIM\ngetAirportByIdentifier: Get an airport by its ICAO or FAA identifier\ngetAirportCharts: Get charts for a specified airport\ngetAllPreferredRoutes: Get all of the preferred routes\nfilterPrefferedRoutesByCondition: Get preferred routes based on search criteria\ngetChartChanges: Get chart changes by airport or chart name\nformulate_response: Answer questions about aviationapi. Use this tool when no other tool should be used.\n\nLet's first understand the problem and devise a plan to solve the problem. Please output the plan starting with the header 'Plan:' and then followed by a numbered list of steps. Please make the plan the minimum number of steps required to accurately complete the task. Always use the tools available in your plan to answer the response. Your plan should contain the name of the tools to use. You can use the same tool multiple times if required. At the end of your plan, use the delimiter 'end_of_plan'. After the end of your plan provide an explanation of why this plan should be followed. \n\nInput: Hello\nOutput: Plan:\n1. formulate_response\n\nInput: Delete experiment X1234\nOutput: Plan:\n1. get_experiment_list\n2. get_experiment\n3. delete_experiment\n4. formulate_response\n\nInput: I'm planning a trip to Chicago next week. Can you check the weather conditions at O'Hare International Airport (ICAO: ORD) for me? Also, I'd like to know the runway length and the type of surface of the longest runway there.\nOutput:[\\INST]",
                "expected_plan": [
                    "weather_metar_get",
                    "airports_get"
                ],
                "actual_output": ""
            }
        ]
    },
    {
        "service_name": "chucknorrisjokes",
        "cases": [
            {
                "input": "[INST] <<SYS>>You are called chucknorrisjokes. The Chuck Norris Jokes API (Application Programming Interface). Chuck Norris Jokes API allows you to retrieve Chuck Norris jokes in various ways. You do not know anything about chuck norris jokes until you have selected and run a tool from the available list. 4) Free text search for Chuck Norris jokes. \nYou will be presented with a prompt. Your task is to plan the usage of the tools to effectively find the response to the prompts. You must always use the tools to answer your question. You have no knowledge until you have used a tool. You can only use the tools available, do not make up any tools.<</SYS>>\n\nYou have the following tools available:\n\ngetRandomChuckNorrisJoke: Retrieve a random Chuck Norris joke\nsearchChuckNorrisJokeByCategory: Retrieve a random Chuck Norris joke by category. To use this tool, you need to provide the category property.\ngetChuckNorrisJokeCategories: Retrieve a list of available categories\nfindChuckNorrisJokeWithText: Free text search for Chuck Norris jokes\nformulate_response: Answer questions about chucknorris.io. Use this tool when no other tool should be used.\n\nLet's first understand the problem and devise a plan to solve the problem. Please output the plan starting with the header 'Plan:' and then followed by a numbered list of steps. Please make the plan the minimum number of steps required to accurately complete the task. Always use the tools available in your plan to answer the response. Your plan should contain the name of the tools to use. You can use the same tool multiple times if required. At the end of your plan, use the delimiter 'end_of_plan'. After the end of your plan provide an explanation of why this plan should be followed. \n\nInput: Hello\nOutput: Plan:\n1. formulate_response\n\nInput: Delete experiment X1234\nOutput: Plan:\n1. get_experiment_list\n2. get_experiment\n3. delete_experiment\n4. formulate_response\n\nInput: I'm doing a presentation on Chuck Norris for my film class. Can you help me find a joke from the 'movie' category to lighten the mood?\nOutput:[\\INST]",
                "expected_plan": [
                    "jokes_random_category_get"
                ],
                "actual_output": ""
            },
            {
                "input": "[INST] <<SYS>>You are called chucknorrisjokes. The Chuck Norris Jokes API (Application Programming Interface). Chuck Norris Jokes API allows you to retrieve Chuck Norris jokes in various ways. You do not know anything about chuck norris jokes until you have selected and run a tool from the available list. 4) Free text search for Chuck Norris jokes. \nYou will be presented with a prompt. Your task is to plan the usage of the tools to effectively find the response to the prompts. You must always use the tools to answer your question. You have no knowledge until you have used a tool. You can only use the tools available, do not make up any tools.<</SYS>>\n\nYou have the following tools available:\n\ngetRandomChuckNorrisJoke: Retrieve a random Chuck Norris joke\nsearchChuckNorrisJokeByCategory: Retrieve a random Chuck Norris joke by category. To use this tool, you need to provide the category property.\ngetChuckNorrisJokeCategories: Retrieve a list of available categories\nfindChuckNorrisJokeWithText: Free text search for Chuck Norris jokes\nformulate_response: Answer questions about chucknorris.io. Use this tool when no other tool should be used.\n\nLet's first understand the problem and devise a plan to solve the problem. Please output the plan starting with the header 'Plan:' and then followed by a numbered list of steps. Please make the plan the minimum number of steps required to accurately complete the task. Always use the tools available in your plan to answer the response. Your plan should contain the name of the tools to use. You can use the same tool multiple times if required. At the end of your plan, use the delimiter 'end_of_plan'. After the end of your plan provide an explanation of why this plan should be followed. \n\nInput: Hello\nOutput: Plan:\n1. formulate_response\n\nInput: Delete experiment X1234\nOutput: Plan:\n1. get_experiment_list\n2. get_experiment\n3. delete_experiment\n4. formulate_response\n\nInput: I'm writing a blog post about Chuck Norris and his impact on pop culture. I need a joke related to 'music'. Can you find one for me?\nOutput:[\\INST]",
                "expected_plan": [
                    "jokes_random_category_get"
                ],
                "actual_output": ""
            },
            {
                "input": "[INST] <<SYS>>You are called chucknorrisjokes. The Chuck Norris Jokes API (Application Programming Interface). Chuck Norris Jokes API allows you to retrieve Chuck Norris jokes in various ways. You do not know anything about chuck norris jokes until you have selected and run a tool from the available list. 4) Free text search for Chuck Norris jokes. \nYou will be presented with a prompt. Your task is to plan the usage of the tools to effectively find the response to the prompts. You must always use the tools to answer your question. You have no knowledge until you have used a tool. You can only use the tools available, do not make up any tools.<</SYS>>\n\nYou have the following tools available:\n\ngetRandomChuckNorrisJoke: Retrieve a random Chuck Norris joke\nsearchChuckNorrisJokeByCategory: Retrieve a random Chuck Norris joke by category. To use this tool, you need to provide the category property.\ngetChuckNorrisJokeCategories: Retrieve a list of available categories\nfindChuckNorrisJokeWithText: Free text search for Chuck Norris jokes\nformulate_response: Answer questions about chucknorris.io. Use this tool when no other tool should be used.\n\nLet's first understand the problem and devise a plan to solve the problem. Please output the plan starting with the header 'Plan:' and then followed by a numbered list of steps. Please make the plan the minimum number of steps required to accurately complete the task. Always use the tools available in your plan to answer the response. Your plan should contain the name of the tools to use. You can use the same tool multiple times if required. At the end of your plan, use the delimiter 'end_of_plan'. After the end of your plan provide an explanation of why this plan should be followed. \n\nInput: Hello\nOutput: Plan:\n1. formulate_response\n\nInput: Delete experiment X1234\nOutput: Plan:\n1. get_experiment_list\n2. get_experiment\n3. delete_experiment\n4. formulate_response\n\nInput: I'm planning a trivia night and need some Chuck Norris jokes to include. Can you search for jokes that mention 'Texas'?\nOutput:[\\INST]",
                "expected_plan": [
                    "jokes_search_get"
                ],
                "actual_output": ""
            },
            {
                "input": "[INST] <<SYS>>You are called chucknorrisjokes. The Chuck Norris Jokes API (Application Programming Interface). Chuck Norris Jokes API allows you to retrieve Chuck Norris jokes in various ways. You do not know anything about chuck norris jokes until you have selected and run a tool from the available list. 4) Free text search for Chuck Norris jokes. \nYou will be presented with a prompt. Your task is to plan the usage of the tools to effectively find the response to the prompts. You must always use the tools to answer your question. You have no knowledge until you have used a tool. You can only use the tools available, do not make up any tools.<</SYS>>\n\nYou have the following tools available:\n\ngetRandomChuckNorrisJoke: Retrieve a random Chuck Norris joke\nsearchChuckNorrisJokeByCategory: Retrieve a random Chuck Norris joke by category. To use this tool, you need to provide the category property.\ngetChuckNorrisJokeCategories: Retrieve a list of available categories\nfindChuckNorrisJokeWithText: Free text search for Chuck Norris jokes\nformulate_response: Answer questions about chucknorris.io. Use this tool when no other tool should be used.\n\nLet's first understand the problem and devise a plan to solve the problem. Please output the plan starting with the header 'Plan:' and then followed by a numbered list of steps. Please make the plan the minimum number of steps required to accurately complete the task. Always use the tools available in your plan to answer the response. Your plan should contain the name of the tools to use. You can use the same tool multiple times if required. At the end of your plan, use the delimiter 'end_of_plan'. After the end of your plan provide an explanation of why this plan should be followed. \n\nInput: Hello\nOutput: Plan:\n1. formulate_response\n\nInput: Delete experiment X1234\nOutput: Plan:\n1. get_experiment_list\n2. get_experiment\n3. delete_experiment\n4. formulate_response\n\nInput: I'm having a party tonight and want to entertain my guests with some Chuck Norris jokes. Can you find a random joke for me to tell them?\nOutput:[\\INST]",
                "expected_plan": [
                    "jokes_random_get"
                ],
                "actual_output": ""
            },
            {
                "input": "[INST] <<SYS>>You are called chucknorrisjokes. The Chuck Norris Jokes API (Application Programming Interface). Chuck Norris Jokes API allows you to retrieve Chuck Norris jokes in various ways. You do not know anything about chuck norris jokes until you have selected and run a tool from the available list. 4) Free text search for Chuck Norris jokes. \nYou will be presented with a prompt. Your task is to plan the usage of the tools to effectively find the response to the prompts. You must always use the tools to answer your question. You have no knowledge until you have used a tool. You can only use the tools available, do not make up any tools.<</SYS>>\n\nYou have the following tools available:\n\ngetRandomChuckNorrisJoke: Retrieve a random Chuck Norris joke\nsearchChuckNorrisJokeByCategory: Retrieve a random Chuck Norris joke by category. To use this tool, you need to provide the category property.\ngetChuckNorrisJokeCategories: Retrieve a list of available categories\nfindChuckNorrisJokeWithText: Free text search for Chuck Norris jokes\nformulate_response: Answer questions about chucknorris.io. Use this tool when no other tool should be used.\n\nLet's first understand the problem and devise a plan to solve the problem. Please output the plan starting with the header 'Plan:' and then followed by a numbered list of steps. Please make the plan the minimum number of steps required to accurately complete the task. Always use the tools available in your plan to answer the response. Your plan should contain the name of the tools to use. You can use the same tool multiple times if required. At the end of your plan, use the delimiter 'end_of_plan'. After the end of your plan provide an explanation of why this plan should be followed. \n\nInput: Hello\nOutput: Plan:\n1. formulate_response\n\nInput: Delete experiment X1234\nOutput: Plan:\n1. get_experiment_list\n2. get_experiment\n3. delete_experiment\n4. formulate_response\n\nInput: I'm working on a Chuck Norris-themed board game and need some jokes for the cards. Can you find jokes that involve 'sports'?\nOutput:[\\INST]",
                "expected_plan": [
                    "jokes_search_get"
                ],
                "actual_output": ""
            },
            {
                "input": "[INST] <<SYS>>You are called chucknorrisjokes. The Chuck Norris Jokes API (Application Programming Interface). Chuck Norris Jokes API allows you to retrieve Chuck Norris jokes in various ways. You do not know anything about chuck norris jokes until you have selected and run a tool from the available list. 4) Free text search for Chuck Norris jokes. \nYou will be presented with a prompt. Your task is to plan the usage of the tools to effectively find the response to the prompts. You must always use the tools to answer your question. You have no knowledge until you have used a tool. You can only use the tools available, do not make up any tools.<</SYS>>\n\nYou have the following tools available:\n\ngetRandomChuckNorrisJoke: Retrieve a random Chuck Norris joke\nsearchChuckNorrisJokeByCategory: Retrieve a random Chuck Norris joke by category. To use this tool, you need to provide the category property.\ngetChuckNorrisJokeCategories: Retrieve a list of available categories\nfindChuckNorrisJokeWithText: Free text search for Chuck Norris jokes\nformulate_response: Answer questions about chucknorris.io. Use this tool when no other tool should be used.\n\nLet's first understand the problem and devise a plan to solve the problem. Please output the plan starting with the header 'Plan:' and then followed by a numbered list of steps. Please make the plan the minimum number of steps required to accurately complete the task. Always use the tools available in your plan to answer the response. Your plan should contain the name of the tools to use. You can use the same tool multiple times if required. At the end of your plan, use the delimiter 'end_of_plan'. After the end of your plan provide an explanation of why this plan should be followed. \n\nInput: Hello\nOutput: Plan:\n1. formulate_response\n\nInput: Delete experiment X1234\nOutput: Plan:\n1. get_experiment_list\n2. get_experiment\n3. delete_experiment\n4. formulate_response\n\nInput: I'm having a party tonight and I want to entertain my guests with some Chuck Norris jokes. Can you find me 3 random jokes?\nOutput:[\\INST]",
                "expected_plan": [
                    "jokes_random_get",
                    "jokes_random_get",
                    "jokes_random_get"
                ],
                "actual_output": ""
            }
        ]
    },
    {
        "service_name": "uselessfactsapi",
        "cases": [
            {
                "input": "[INST] <<SYS>>You are called uselessfactsapi. The Random Useless Facts API (Application Programming Interface). You have access to different tools and these can be used to perform tasks such as getting random and daily useless facts in different languages and formats. You do not know anything about randome, useless facts until you have selected and run a tool from the available list.\nYou will be presented with a prompt. Your task is to plan the usage of the tools to effectively find the response to the prompts. You must always use the tools to answer your question. You have no knowledge until you have used a tool. You can only use the tools available, do not make up any tools.<</SYS>>\n\nYou have the following tools available:\n\ngetRandomFact: Get random useless fact\ngetTodaysUselessFact: Get today's useless fact\nformulate_response: Answer questions about random-useless-facts. Use this tool when no other tool should be used.\n\nLet's first understand the problem and devise a plan to solve the problem. Please output the plan starting with the header 'Plan:' and then followed by a numbered list of steps. Please make the plan the minimum number of steps required to accurately complete the task. Always use the tools available in your plan to answer the response. Your plan should contain the name of the tools to use. You can use the same tool multiple times if required. At the end of your plan, use the delimiter 'end_of_plan'. After the end of your plan provide an explanation of why this plan should be followed. \n\nInput: Hello\nOutput: Plan:\n1. formulate_response\n\nInput: Delete experiment X1234\nOutput: Plan:\n1. get_experiment_list\n2. get_experiment\n3. delete_experiment\n4. formulate_response\n\nInput: I'm writing a blog post about interesting trivia. Can you provide me with a random fact that I can include? It should be something that most people wouldn't know.\nOutput:[\\INST]",
                "expected_plan": [
                    "api_v2_facts_random_get"
                ],
                "actual_output": ""
            },
            {
                "input": "[INST] <<SYS>>You are called uselessfactsapi. The Random Useless Facts API (Application Programming Interface). You have access to different tools and these can be used to perform tasks such as getting random and daily useless facts in different languages and formats. You do not know anything about randome, useless facts until you have selected and run a tool from the available list.\nYou will be presented with a prompt. Your task is to plan the usage of the tools to effectively find the response to the prompts. You must always use the tools to answer your question. You have no knowledge until you have used a tool. You can only use the tools available, do not make up any tools.<</SYS>>\n\nYou have the following tools available:\n\ngetRandomFact: Get random useless fact\ngetTodaysUselessFact: Get today's useless fact\nformulate_response: Answer questions about random-useless-facts. Use this tool when no other tool should be used.\n\nLet's first understand the problem and devise a plan to solve the problem. Please output the plan starting with the header 'Plan:' and then followed by a numbered list of steps. Please make the plan the minimum number of steps required to accurately complete the task. Always use the tools available in your plan to answer the response. Your plan should contain the name of the tools to use. You can use the same tool multiple times if required. At the end of your plan, use the delimiter 'end_of_plan'. After the end of your plan provide an explanation of why this plan should be followed. \n\nInput: Hello\nOutput: Plan:\n1. formulate_response\n\nInput: Delete experiment X1234\nOutput: Plan:\n1. get_experiment_list\n2. get_experiment\n3. delete_experiment\n4. formulate_response\n\nInput: I'm hosting a trivia night at my place this evening. Could you fetch me a random useless fact that I can use to stump my friends? I want something they'll never guess.\nOutput:[\\INST]",
                "expected_plan": [
                    "api_v2_facts_random_get"
                ],
                "actual_output": ""
            },
            {
                "input": "[INST] <<SYS>>You are called uselessfactsapi. The Random Useless Facts API (Application Programming Interface). You have access to different tools and these can be used to perform tasks such as getting random and daily useless facts in different languages and formats. You do not know anything about randome, useless facts until you have selected and run a tool from the available list.\nYou will be presented with a prompt. Your task is to plan the usage of the tools to effectively find the response to the prompts. You must always use the tools to answer your question. You have no knowledge until you have used a tool. You can only use the tools available, do not make up any tools.<</SYS>>\n\nYou have the following tools available:\n\ngetRandomFact: Get random useless fact\ngetTodaysUselessFact: Get today's useless fact\nformulate_response: Answer questions about random-useless-facts. Use this tool when no other tool should be used.\n\nLet's first understand the problem and devise a plan to solve the problem. Please output the plan starting with the header 'Plan:' and then followed by a numbered list of steps. Please make the plan the minimum number of steps required to accurately complete the task. Always use the tools available in your plan to answer the response. Your plan should contain the name of the tools to use. You can use the same tool multiple times if required. At the end of your plan, use the delimiter 'end_of_plan'. After the end of your plan provide an explanation of why this plan should be followed. \n\nInput: Hello\nOutput: Plan:\n1. formulate_response\n\nInput: Delete experiment X1234\nOutput: Plan:\n1. get_experiment_list\n2. get_experiment\n3. delete_experiment\n4. formulate_response\n\nInput: I'm feeling a bit bored. Can you cheer me up with a random, useless fact? I'm in the mood for something quirky and unexpected.\nOutput:[\\INST]",
                "expected_plan": [
                    "api_v2_facts_random_get"
                ],
                "actual_output": ""
            },
            {
                "input": "[INST] <<SYS>>You are called uselessfactsapi. The Random Useless Facts API (Application Programming Interface). You have access to different tools and these can be used to perform tasks such as getting random and daily useless facts in different languages and formats. You do not know anything about randome, useless facts until you have selected and run a tool from the available list.\nYou will be presented with a prompt. Your task is to plan the usage of the tools to effectively find the response to the prompts. You must always use the tools to answer your question. You have no knowledge until you have used a tool. You can only use the tools available, do not make up any tools.<</SYS>>\n\nYou have the following tools available:\n\ngetRandomFact: Get random useless fact\ngetTodaysUselessFact: Get today's useless fact\nformulate_response: Answer questions about random-useless-facts. Use this tool when no other tool should be used.\n\nLet's first understand the problem and devise a plan to solve the problem. Please output the plan starting with the header 'Plan:' and then followed by a numbered list of steps. Please make the plan the minimum number of steps required to accurately complete the task. Always use the tools available in your plan to answer the response. Your plan should contain the name of the tools to use. You can use the same tool multiple times if required. At the end of your plan, use the delimiter 'end_of_plan'. After the end of your plan provide an explanation of why this plan should be followed. \n\nInput: Hello\nOutput: Plan:\n1. formulate_response\n\nInput: Delete experiment X1234\nOutput: Plan:\n1. get_experiment_list\n2. get_experiment\n3. delete_experiment\n4. formulate_response\n\nInput: I'm starting a new daily ritual of learning something new every day. Can you tell me today's useless fact?\nOutput:[\\INST]",
                "expected_plan": [
                    "api_v2_facts_today_get"
                ],
                "actual_output": ""
            },
            {
                "input": "[INST] <<SYS>>You are called uselessfactsapi. The Random Useless Facts API (Application Programming Interface). You have access to different tools and these can be used to perform tasks such as getting random and daily useless facts in different languages and formats. You do not know anything about randome, useless facts until you have selected and run a tool from the available list.\nYou will be presented with a prompt. Your task is to plan the usage of the tools to effectively find the response to the prompts. You must always use the tools to answer your question. You have no knowledge until you have used a tool. You can only use the tools available, do not make up any tools.<</SYS>>\n\nYou have the following tools available:\n\ngetRandomFact: Get random useless fact\ngetTodaysUselessFact: Get today's useless fact\nformulate_response: Answer questions about random-useless-facts. Use this tool when no other tool should be used.\n\nLet's first understand the problem and devise a plan to solve the problem. Please output the plan starting with the header 'Plan:' and then followed by a numbered list of steps. Please make the plan the minimum number of steps required to accurately complete the task. Always use the tools available in your plan to answer the response. Your plan should contain the name of the tools to use. You can use the same tool multiple times if required. At the end of your plan, use the delimiter 'end_of_plan'. After the end of your plan provide an explanation of why this plan should be followed. \n\nInput: Hello\nOutput: Plan:\n1. formulate_response\n\nInput: Delete experiment X1234\nOutput: Plan:\n1. get_experiment_list\n2. get_experiment\n3. delete_experiment\n4. formulate_response\n\nInput: I'm preparing a presentation for my class about random trivia. Could you help me find some fun, useless facts to include? I need about five facts.\nOutput:[\\INST]",
                "expected_plan": [
                    "api_v2_facts_random_get",
                    "api_v2_facts_random_get",
                    "api_v2_facts_random_get",
                    "api_v2_facts_random_get",
                    "api_v2_facts_random_get"
                ],
                "actual_output": ""
            },
            {
                "input": "[INST] <<SYS>>You are called uselessfactsapi. The Random Useless Facts API (Application Programming Interface). You have access to different tools and these can be used to perform tasks such as getting random and daily useless facts in different languages and formats. You do not know anything about randome, useless facts until you have selected and run a tool from the available list.\nYou will be presented with a prompt. Your task is to plan the usage of the tools to effectively find the response to the prompts. You must always use the tools to answer your question. You have no knowledge until you have used a tool. You can only use the tools available, do not make up any tools.<</SYS>>\n\nYou have the following tools available:\n\ngetRandomFact: Get random useless fact\ngetTodaysUselessFact: Get today's useless fact\nformulate_response: Answer questions about random-useless-facts. Use this tool when no other tool should be used.\n\nLet's first understand the problem and devise a plan to solve the problem. Please output the plan starting with the header 'Plan:' and then followed by a numbered list of steps. Please make the plan the minimum number of steps required to accurately complete the task. Always use the tools available in your plan to answer the response. Your plan should contain the name of the tools to use. You can use the same tool multiple times if required. At the end of your plan, use the delimiter 'end_of_plan'. After the end of your plan provide an explanation of why this plan should be followed. \n\nInput: Hello\nOutput: Plan:\n1. formulate_response\n\nInput: Delete experiment X1234\nOutput: Plan:\n1. get_experiment_list\n2. get_experiment\n3. delete_experiment\n4. formulate_response\n\nInput: I'm writing a daily newsletter and I want to include a fun fact in each issue. Can you give me today's useless fact that I can share with my subscribers?\nOutput:[\\INST]",
                "expected_plan": [
                    "api_v2_facts_today_get"
                ],
                "actual_output": ""
            }
        ]
    },
    {
        "service_name": "weatherstack",
        "cases": [
            {
                "input": "[INST] <<SYS>>You are called weatherstack. The WeatherStack API (Application Programming Interface).  You have access to different tools and these can be used to perform tasks such as getting real-time weather data for locations around the world. You do not know anything about weather until you have selected and run a tool from the available list.\nYou will be presented with a prompt. Your task is to plan the usage of the tools to effectively find the response to the prompts. You must always use the tools to answer your question. You have no knowledge until you have used a tool. You can only use the tools available, do not make up any tools.<</SYS>>\n\nYou have the following tools available:\n\ngetCurrentWeather: Get current weather\nformulate_response: Answer questions about apilayer-weatherstack. Use this tool when no other tool should be used.\n\nLet's first understand the problem and devise a plan to solve the problem. Please output the plan starting with the header 'Plan:' and then followed by a numbered list of steps. Please make the plan the minimum number of steps required to accurately complete the task. Always use the tools available in your plan to answer the response. Your plan should contain the name of the tools to use. You can use the same tool multiple times if required. At the end of your plan, use the delimiter 'end_of_plan'. After the end of your plan provide an explanation of why this plan should be followed. \n\nInput: Hello\nOutput: Plan:\n1. formulate_response\n\nInput: Delete experiment X1234\nOutput: Plan:\n1. get_experiment_list\n2. get_experiment\n3. delete_experiment\n4. formulate_response\n\nInput: I'm a science teacher preparing a lesson on weather patterns. Can you get me the current weather for Denver? I need the data in scientific units.\nOutput:[\\INST]",
                "expected_plan": [
                    "current_get"
                ],
                "actual_output": ""
            },
            {
                "input": "[INST] <<SYS>>You are called weatherstack. The WeatherStack API (Application Programming Interface).  You have access to different tools and these can be used to perform tasks such as getting real-time weather data for locations around the world. You do not know anything about weather until you have selected and run a tool from the available list.\nYou will be presented with a prompt. Your task is to plan the usage of the tools to effectively find the response to the prompts. You must always use the tools to answer your question. You have no knowledge until you have used a tool. You can only use the tools available, do not make up any tools.<</SYS>>\n\nYou have the following tools available:\n\ngetCurrentWeather: Get current weather\nformulate_response: Answer questions about apilayer-weatherstack. Use this tool when no other tool should be used.\n\nLet's first understand the problem and devise a plan to solve the problem. Please output the plan starting with the header 'Plan:' and then followed by a numbered list of steps. Please make the plan the minimum number of steps required to accurately complete the task. Always use the tools available in your plan to answer the response. Your plan should contain the name of the tools to use. You can use the same tool multiple times if required. At the end of your plan, use the delimiter 'end_of_plan'. After the end of your plan provide an explanation of why this plan should be followed. \n\nInput: Hello\nOutput: Plan:\n1. formulate_response\n\nInput: Delete experiment X1234\nOutput: Plan:\n1. get_experiment_list\n2. get_experiment\n3. delete_experiment\n4. formulate_response\n\nInput: I'm organizing an outdoor event next weekend. Is it possible to get the UV index and visibility in Los Angeles during that time?\nOutput:[\\INST]",
                "expected_plan": [
                    "current_get"
                ],
                "actual_output": ""
            },
            {
                "input": "[INST] <<SYS>>You are called weatherstack. The WeatherStack API (Application Programming Interface).  You have access to different tools and these can be used to perform tasks such as getting real-time weather data for locations around the world. You do not know anything about weather until you have selected and run a tool from the available list.\nYou will be presented with a prompt. Your task is to plan the usage of the tools to effectively find the response to the prompts. You must always use the tools to answer your question. You have no knowledge until you have used a tool. You can only use the tools available, do not make up any tools.<</SYS>>\n\nYou have the following tools available:\n\ngetCurrentWeather: Get current weather\nformulate_response: Answer questions about apilayer-weatherstack. Use this tool when no other tool should be used.\n\nLet's first understand the problem and devise a plan to solve the problem. Please output the plan starting with the header 'Plan:' and then followed by a numbered list of steps. Please make the plan the minimum number of steps required to accurately complete the task. Always use the tools available in your plan to answer the response. Your plan should contain the name of the tools to use. You can use the same tool multiple times if required. At the end of your plan, use the delimiter 'end_of_plan'. After the end of your plan provide an explanation of why this plan should be followed. \n\nInput: Hello\nOutput: Plan:\n1. formulate_response\n\nInput: Delete experiment X1234\nOutput: Plan:\n1. get_experiment_list\n2. get_experiment\n3. delete_experiment\n4. formulate_response\n\nInput: I'm heading out for a run in San Francisco. Can you tell me what the current temperature is and how it feels outside? Also, I'd like to know the humidity and visibility.\nOutput:[\\INST]",
                "expected_plan": [
                    "current_get"
                ],
                "actual_output": ""
            },
            {
                "input": "[INST] <<SYS>>You are called weatherstack. The WeatherStack API (Application Programming Interface).  You have access to different tools and these can be used to perform tasks such as getting real-time weather data for locations around the world. You do not know anything about weather until you have selected and run a tool from the available list.\nYou will be presented with a prompt. Your task is to plan the usage of the tools to effectively find the response to the prompts. You must always use the tools to answer your question. You have no knowledge until you have used a tool. You can only use the tools available, do not make up any tools.<</SYS>>\n\nYou have the following tools available:\n\ngetCurrentWeather: Get current weather\nformulate_response: Answer questions about apilayer-weatherstack. Use this tool when no other tool should be used.\n\nLet's first understand the problem and devise a plan to solve the problem. Please output the plan starting with the header 'Plan:' and then followed by a numbered list of steps. Please make the plan the minimum number of steps required to accurately complete the task. Always use the tools available in your plan to answer the response. Your plan should contain the name of the tools to use. You can use the same tool multiple times if required. At the end of your plan, use the delimiter 'end_of_plan'. After the end of your plan provide an explanation of why this plan should be followed. \n\nInput: Hello\nOutput: Plan:\n1. formulate_response\n\nInput: Delete experiment X1234\nOutput: Plan:\n1. get_experiment_list\n2. get_experiment\n3. delete_experiment\n4. formulate_response\n\nInput: I'm writing a blog post about the weather in different parts of the world. Can you fetch the current weather for Beijing, Moscow, and Rio de Janeiro? Please include the local time in each city.\nOutput:[\\INST]",
                "expected_plan": [
                    "current_get",
                    "current_get",
                    "current_get"
                ],
                "actual_output": ""
            },
            {
                "input": "[INST] <<SYS>>You are called weatherstack. The WeatherStack API (Application Programming Interface).  You have access to different tools and these can be used to perform tasks such as getting real-time weather data for locations around the world. You do not know anything about weather until you have selected and run a tool from the available list.\nYou will be presented with a prompt. Your task is to plan the usage of the tools to effectively find the response to the prompts. You must always use the tools to answer your question. You have no knowledge until you have used a tool. You can only use the tools available, do not make up any tools.<</SYS>>\n\nYou have the following tools available:\n\ngetCurrentWeather: Get current weather\nformulate_response: Answer questions about apilayer-weatherstack. Use this tool when no other tool should be used.\n\nLet's first understand the problem and devise a plan to solve the problem. Please output the plan starting with the header 'Plan:' and then followed by a numbered list of steps. Please make the plan the minimum number of steps required to accurately complete the task. Always use the tools available in your plan to answer the response. Your plan should contain the name of the tools to use. You can use the same tool multiple times if required. At the end of your plan, use the delimiter 'end_of_plan'. After the end of your plan provide an explanation of why this plan should be followed. \n\nInput: Hello\nOutput: Plan:\n1. formulate_response\n\nInput: Delete experiment X1234\nOutput: Plan:\n1. get_experiment_list\n2. get_experiment\n3. delete_experiment\n4. formulate_response\n\nInput: I'm planning a picnic this weekend in London. Could you check the current weather for me? I'm particularly interested in the wind speed and direction.\nOutput:[\\INST]",
                "expected_plan": [
                    "current_get"
                ],
                "actual_output": ""
            },
            {
                "input": "[INST] <<SYS>>You are called weatherstack. The WeatherStack API (Application Programming Interface).  You have access to different tools and these can be used to perform tasks such as getting real-time weather data for locations around the world. You do not know anything about weather until you have selected and run a tool from the available list.\nYou will be presented with a prompt. Your task is to plan the usage of the tools to effectively find the response to the prompts. You must always use the tools to answer your question. You have no knowledge until you have used a tool. You can only use the tools available, do not make up any tools.<</SYS>>\n\nYou have the following tools available:\n\ngetCurrentWeather: Get current weather\nformulate_response: Answer questions about apilayer-weatherstack. Use this tool when no other tool should be used.\n\nLet's first understand the problem and devise a plan to solve the problem. Please output the plan starting with the header 'Plan:' and then followed by a numbered list of steps. Please make the plan the minimum number of steps required to accurately complete the task. Always use the tools available in your plan to answer the response. Your plan should contain the name of the tools to use. You can use the same tool multiple times if required. At the end of your plan, use the delimiter 'end_of_plan'. After the end of your plan provide an explanation of why this plan should be followed. \n\nInput: Hello\nOutput: Plan:\n1. formulate_response\n\nInput: Delete experiment X1234\nOutput: Plan:\n1. get_experiment_list\n2. get_experiment\n3. delete_experiment\n4. formulate_response\n\nInput: I'm planning a beach day in Miami this weekend. Could you check the weather for me? I'd like to know if it's going to be sunny and what the UV index will be. Also, could you tell me what the sea temperature will be?\nOutput:[\\INST]",
                "expected_plan": [
                    "current_get"
                ],
                "actual_output": ""
            },
            {
                "input": "[INST] <<SYS>>You are called weatherstack. The WeatherStack API (Application Programming Interface).  You have access to different tools and these can be used to perform tasks such as getting real-time weather data for locations around the world. You do not know anything about weather until you have selected and run a tool from the available list.\nYou will be presented with a prompt. Your task is to plan the usage of the tools to effectively find the response to the prompts. You must always use the tools to answer your question. You have no knowledge until you have used a tool. You can only use the tools available, do not make up any tools.<</SYS>>\n\nYou have the following tools available:\n\ngetCurrentWeather: Get current weather\nformulate_response: Answer questions about apilayer-weatherstack. Use this tool when no other tool should be used.\n\nLet's first understand the problem and devise a plan to solve the problem. Please output the plan starting with the header 'Plan:' and then followed by a numbered list of steps. Please make the plan the minimum number of steps required to accurately complete the task. Always use the tools available in your plan to answer the response. Your plan should contain the name of the tools to use. You can use the same tool multiple times if required. At the end of your plan, use the delimiter 'end_of_plan'. After the end of your plan provide an explanation of why this plan should be followed. \n\nInput: Hello\nOutput: Plan:\n1. formulate_response\n\nInput: Delete experiment X1234\nOutput: Plan:\n1. get_experiment_list\n2. get_experiment\n3. delete_experiment\n4. formulate_response\n\nInput: It's getting colder here. Can you find the current temperature in Fahrenheit for Toronto? I want to see if I need to bring a jacket.\nOutput:[\\INST]",
                "expected_plan": [
                    "current_get"
                ],
                "actual_output": ""
            },
            {
                "input": "[INST] <<SYS>>You are called weatherstack. The WeatherStack API (Application Programming Interface).  You have access to different tools and these can be used to perform tasks such as getting real-time weather data for locations around the world. You do not know anything about weather until you have selected and run a tool from the available list.\nYou will be presented with a prompt. Your task is to plan the usage of the tools to effectively find the response to the prompts. You must always use the tools to answer your question. You have no knowledge until you have used a tool. You can only use the tools available, do not make up any tools.<</SYS>>\n\nYou have the following tools available:\n\ngetCurrentWeather: Get current weather\nformulate_response: Answer questions about apilayer-weatherstack. Use this tool when no other tool should be used.\n\nLet's first understand the problem and devise a plan to solve the problem. Please output the plan starting with the header 'Plan:' and then followed by a numbered list of steps. Please make the plan the minimum number of steps required to accurately complete the task. Always use the tools available in your plan to answer the response. Your plan should contain the name of the tools to use. You can use the same tool multiple times if required. At the end of your plan, use the delimiter 'end_of_plan'. After the end of your plan provide an explanation of why this plan should be followed. \n\nInput: Hello\nOutput: Plan:\n1. formulate_response\n\nInput: Delete experiment X1234\nOutput: Plan:\n1. get_experiment_list\n2. get_experiment\n3. delete_experiment\n4. formulate_response\n\nInput: I'm curious about the weather in multiple cities for a project. Can you get me the current weather for New York, Tokyo, and Sydney? I'd prefer the data in metric units.\nOutput:[\\INST]",
                "expected_plan": [
                    "current_get",
                    "current_get",
                    "current_get"
                ],
                "actual_output": ""
            },
            {
                "input": "[INST] <<SYS>>You are called weatherstack. The WeatherStack API (Application Programming Interface).  You have access to different tools and these can be used to perform tasks such as getting real-time weather data for locations around the world. You do not know anything about weather until you have selected and run a tool from the available list.\nYou will be presented with a prompt. Your task is to plan the usage of the tools to effectively find the response to the prompts. You must always use the tools to answer your question. You have no knowledge until you have used a tool. You can only use the tools available, do not make up any tools.<</SYS>>\n\nYou have the following tools available:\n\ngetCurrentWeather: Get current weather\nformulate_response: Answer questions about apilayer-weatherstack. Use this tool when no other tool should be used.\n\nLet's first understand the problem and devise a plan to solve the problem. Please output the plan starting with the header 'Plan:' and then followed by a numbered list of steps. Please make the plan the minimum number of steps required to accurately complete the task. Always use the tools available in your plan to answer the response. Your plan should contain the name of the tools to use. You can use the same tool multiple times if required. At the end of your plan, use the delimiter 'end_of_plan'. After the end of your plan provide an explanation of why this plan should be followed. \n\nInput: Hello\nOutput: Plan:\n1. formulate_response\n\nInput: Delete experiment X1234\nOutput: Plan:\n1. get_experiment_list\n2. get_experiment\n3. delete_experiment\n4. formulate_response\n\nInput: I'm planning a trip to Paris next week. Could you find out what the current weather is there? And please, make sure the temperature is in Fahrenheit, I'm more familiar with that.\nOutput:[\\INST]",
                "expected_plan": [
                    "current_get"
                ],
                "actual_output": ""
            },
            {
                "input": "[INST] <<SYS>>You are called weatherstack. The WeatherStack API (Application Programming Interface).  You have access to different tools and these can be used to perform tasks such as getting real-time weather data for locations around the world. You do not know anything about weather until you have selected and run a tool from the available list.\nYou will be presented with a prompt. Your task is to plan the usage of the tools to effectively find the response to the prompts. You must always use the tools to answer your question. You have no knowledge until you have used a tool. You can only use the tools available, do not make up any tools.<</SYS>>\n\nYou have the following tools available:\n\ngetCurrentWeather: Get current weather\nformulate_response: Answer questions about apilayer-weatherstack. Use this tool when no other tool should be used.\n\nLet's first understand the problem and devise a plan to solve the problem. Please output the plan starting with the header 'Plan:' and then followed by a numbered list of steps. Please make the plan the minimum number of steps required to accurately complete the task. Always use the tools available in your plan to answer the response. Your plan should contain the name of the tools to use. You can use the same tool multiple times if required. At the end of your plan, use the delimiter 'end_of_plan'. After the end of your plan provide an explanation of why this plan should be followed. \n\nInput: Hello\nOutput: Plan:\n1. formulate_response\n\nInput: Delete experiment X1234\nOutput: Plan:\n1. get_experiment_list\n2. get_experiment\n3. delete_experiment\n4. formulate_response\n\nInput: I'm planning a road trip from New York to Los Angeles next week. Can you help me check the weather conditions for the major cities along the route, like Chicago, Denver, and Las Vegas? I'd like to know if there will be any severe weather conditions that might affect my trip.\nOutput:[\\INST]",
                "expected_plan": [
                    "current_get",
                    "current_get",
                    "current_get"
                ],
                "actual_output": ""
            }
        ]
    },
    {
        "service_name": "thedictionaryapi",
        "cases": [
            {
                "input": "[INST] <<SYS>>You are called thedictionaryapi. The Dictionary API (Application Programming Interface). You have access to different tools and these can be used to perform tasks such as getting information on word definitions for English words. You do not know anything about word definitions until you have selected and run a tool from the available list.\nYou will be presented with a prompt. Your task is to plan the usage of the tools to effectively find the response to the prompts. You must always use the tools to answer your question. You have no knowledge until you have used a tool. You can only use the tools available, do not make up any tools.<</SYS>>\n\nYou have the following tools available:\n\ngetWordDefinitions: Get word definitions. To use this tool, you need to provide the word property.\nformulate_response: Answer questions about free-dictionary. Use this tool when no other tool should be used.\n\nLet's first understand the problem and devise a plan to solve the problem. Please output the plan starting with the header 'Plan:' and then followed by a numbered list of steps. Please make the plan the minimum number of steps required to accurately complete the task. Always use the tools available in your plan to answer the response. Your plan should contain the name of the tools to use. You can use the same tool multiple times if required. At the end of your plan, use the delimiter 'end_of_plan'. After the end of your plan provide an explanation of why this plan should be followed. \n\nInput: Hello\nOutput: Plan:\n1. formulate_response\n\nInput: Delete experiment X1234\nOutput: Plan:\n1. get_experiment_list\n2. get_experiment\n3. delete_experiment\n4. formulate_response\n\nInput: I'm writing a report on the etymology of words. Can you find the origin of the word 'serendipity'?\nOutput:[\\INST]",
                "expected_plan": [
                    "api_v2_entries_en_word_get"
                ],
                "actual_output": ""
            },
            {
                "input": "[INST] <<SYS>>You are called thedictionaryapi. The Dictionary API (Application Programming Interface). You have access to different tools and these can be used to perform tasks such as getting information on word definitions for English words. You do not know anything about word definitions until you have selected and run a tool from the available list.\nYou will be presented with a prompt. Your task is to plan the usage of the tools to effectively find the response to the prompts. You must always use the tools to answer your question. You have no knowledge until you have used a tool. You can only use the tools available, do not make up any tools.<</SYS>>\n\nYou have the following tools available:\n\ngetWordDefinitions: Get word definitions. To use this tool, you need to provide the word property.\nformulate_response: Answer questions about free-dictionary. Use this tool when no other tool should be used.\n\nLet's first understand the problem and devise a plan to solve the problem. Please output the plan starting with the header 'Plan:' and then followed by a numbered list of steps. Please make the plan the minimum number of steps required to accurately complete the task. Always use the tools available in your plan to answer the response. Your plan should contain the name of the tools to use. You can use the same tool multiple times if required. At the end of your plan, use the delimiter 'end_of_plan'. After the end of your plan provide an explanation of why this plan should be followed. \n\nInput: Hello\nOutput: Plan:\n1. formulate_response\n\nInput: Delete experiment X1234\nOutput: Plan:\n1. get_experiment_list\n2. get_experiment\n3. delete_experiment\n4. formulate_response\n\nInput: I'm a bit confused about the usage of the word 'ephemeral'. Could you provide me with its definition and an example sentence?\nOutput:[\\INST]",
                "expected_plan": [
                    "api_v2_entries_en_word_get"
                ],
                "actual_output": ""
            },
            {
                "input": "[INST] <<SYS>>You are called thedictionaryapi. The Dictionary API (Application Programming Interface). You have access to different tools and these can be used to perform tasks such as getting information on word definitions for English words. You do not know anything about word definitions until you have selected and run a tool from the available list.\nYou will be presented with a prompt. Your task is to plan the usage of the tools to effectively find the response to the prompts. You must always use the tools to answer your question. You have no knowledge until you have used a tool. You can only use the tools available, do not make up any tools.<</SYS>>\n\nYou have the following tools available:\n\ngetWordDefinitions: Get word definitions. To use this tool, you need to provide the word property.\nformulate_response: Answer questions about free-dictionary. Use this tool when no other tool should be used.\n\nLet's first understand the problem and devise a plan to solve the problem. Please output the plan starting with the header 'Plan:' and then followed by a numbered list of steps. Please make the plan the minimum number of steps required to accurately complete the task. Always use the tools available in your plan to answer the response. Your plan should contain the name of the tools to use. You can use the same tool multiple times if required. At the end of your plan, use the delimiter 'end_of_plan'. After the end of your plan provide an explanation of why this plan should be followed. \n\nInput: Hello\nOutput: Plan:\n1. formulate_response\n\nInput: Delete experiment X1234\nOutput: Plan:\n1. get_experiment_list\n2. get_experiment\n3. delete_experiment\n4. formulate_response\n\nInput: I'm trying to expand my vocabulary. Can you find synonyms for the word 'beautiful'?\nOutput:[\\INST]",
                "expected_plan": [
                    "api_v2_entries_en_word_get"
                ],
                "actual_output": ""
            },
            {
                "input": "[INST] <<SYS>>You are called thedictionaryapi. The Dictionary API (Application Programming Interface). You have access to different tools and these can be used to perform tasks such as getting information on word definitions for English words. You do not know anything about word definitions until you have selected and run a tool from the available list.\nYou will be presented with a prompt. Your task is to plan the usage of the tools to effectively find the response to the prompts. You must always use the tools to answer your question. You have no knowledge until you have used a tool. You can only use the tools available, do not make up any tools.<</SYS>>\n\nYou have the following tools available:\n\ngetWordDefinitions: Get word definitions. To use this tool, you need to provide the word property.\nformulate_response: Answer questions about free-dictionary. Use this tool when no other tool should be used.\n\nLet's first understand the problem and devise a plan to solve the problem. Please output the plan starting with the header 'Plan:' and then followed by a numbered list of steps. Please make the plan the minimum number of steps required to accurately complete the task. Always use the tools available in your plan to answer the response. Your plan should contain the name of the tools to use. You can use the same tool multiple times if required. At the end of your plan, use the delimiter 'end_of_plan'. After the end of your plan provide an explanation of why this plan should be followed. \n\nInput: Hello\nOutput: Plan:\n1. formulate_response\n\nInput: Delete experiment X1234\nOutput: Plan:\n1. get_experiment_list\n2. get_experiment\n3. delete_experiment\n4. formulate_response\n\nInput: I'm trying to understand the difference between 'affect' and 'effect'. Could you fetch the definitions and examples of both words?\nOutput:[\\INST]",
                "expected_plan": [
                    "api_v2_entries_en_word_get",
                    "api_v2_entries_en_word_get"
                ],
                "actual_output": ""
            },
            {
                "input": "[INST] <<SYS>>You are called thedictionaryapi. The Dictionary API (Application Programming Interface). You have access to different tools and these can be used to perform tasks such as getting information on word definitions for English words. You do not know anything about word definitions until you have selected and run a tool from the available list.\nYou will be presented with a prompt. Your task is to plan the usage of the tools to effectively find the response to the prompts. You must always use the tools to answer your question. You have no knowledge until you have used a tool. You can only use the tools available, do not make up any tools.<</SYS>>\n\nYou have the following tools available:\n\ngetWordDefinitions: Get word definitions. To use this tool, you need to provide the word property.\nformulate_response: Answer questions about free-dictionary. Use this tool when no other tool should be used.\n\nLet's first understand the problem and devise a plan to solve the problem. Please output the plan starting with the header 'Plan:' and then followed by a numbered list of steps. Please make the plan the minimum number of steps required to accurately complete the task. Always use the tools available in your plan to answer the response. Your plan should contain the name of the tools to use. You can use the same tool multiple times if required. At the end of your plan, use the delimiter 'end_of_plan'. After the end of your plan provide an explanation of why this plan should be followed. \n\nInput: Hello\nOutput: Plan:\n1. formulate_response\n\nInput: Delete experiment X1234\nOutput: Plan:\n1. get_experiment_list\n2. get_experiment\n3. delete_experiment\n4. formulate_response\n\nInput: I'm working on my English vocabulary. Can you help me understand the word \"serendipity\"? I need its definition, pronunciation, part of speech, and some examples of its usage. Also, provide me with some synonyms to expand my vocabulary.\nOutput:[\\INST]",
                "expected_plan": [
                    "api_v2_entries_en_word_get"
                ],
                "actual_output": ""
            },
            {
                "input": "[INST] <<SYS>>You are called thedictionaryapi. The Dictionary API (Application Programming Interface). You have access to different tools and these can be used to perform tasks such as getting information on word definitions for English words. You do not know anything about word definitions until you have selected and run a tool from the available list.\nYou will be presented with a prompt. Your task is to plan the usage of the tools to effectively find the response to the prompts. You must always use the tools to answer your question. You have no knowledge until you have used a tool. You can only use the tools available, do not make up any tools.<</SYS>>\n\nYou have the following tools available:\n\ngetWordDefinitions: Get word definitions. To use this tool, you need to provide the word property.\nformulate_response: Answer questions about free-dictionary. Use this tool when no other tool should be used.\n\nLet's first understand the problem and devise a plan to solve the problem. Please output the plan starting with the header 'Plan:' and then followed by a numbered list of steps. Please make the plan the minimum number of steps required to accurately complete the task. Always use the tools available in your plan to answer the response. Your plan should contain the name of the tools to use. You can use the same tool multiple times if required. At the end of your plan, use the delimiter 'end_of_plan'. After the end of your plan provide an explanation of why this plan should be followed. \n\nInput: Hello\nOutput: Plan:\n1. formulate_response\n\nInput: Delete experiment X1234\nOutput: Plan:\n1. get_experiment_list\n2. get_experiment\n3. delete_experiment\n4. formulate_response\n\nInput: I'm preparing for a spelling bee and need to practice my pronunciation. Could you find the phonetics and audio pronunciation for the word 'quixotic' for me?\nOutput:[\\INST]",
                "expected_plan": [
                    "api_v2_entries_en_word_get"
                ],
                "actual_output": ""
            },
            {
                "input": "[INST] <<SYS>>You are called thedictionaryapi. The Dictionary API (Application Programming Interface). You have access to different tools and these can be used to perform tasks such as getting information on word definitions for English words. You do not know anything about word definitions until you have selected and run a tool from the available list.\nYou will be presented with a prompt. Your task is to plan the usage of the tools to effectively find the response to the prompts. You must always use the tools to answer your question. You have no knowledge until you have used a tool. You can only use the tools available, do not make up any tools.<</SYS>>\n\nYou have the following tools available:\n\ngetWordDefinitions: Get word definitions. To use this tool, you need to provide the word property.\nformulate_response: Answer questions about free-dictionary. Use this tool when no other tool should be used.\n\nLet's first understand the problem and devise a plan to solve the problem. Please output the plan starting with the header 'Plan:' and then followed by a numbered list of steps. Please make the plan the minimum number of steps required to accurately complete the task. Always use the tools available in your plan to answer the response. Your plan should contain the name of the tools to use. You can use the same tool multiple times if required. At the end of your plan, use the delimiter 'end_of_plan'. After the end of your plan provide an explanation of why this plan should be followed. \n\nInput: Hello\nOutput: Plan:\n1. formulate_response\n\nInput: Delete experiment X1234\nOutput: Plan:\n1. get_experiment_list\n2. get_experiment\n3. delete_experiment\n4. formulate_response\n\nInput: I'm writing a poem and I need some inspiration. Could you find the definition, pronunciation, and examples of the word \"ephemeral\"? Also, I'd love to know its synonyms to enrich my poem.\nOutput:[\\INST]",
                "expected_plan": [
                    "api_v2_entries_en_word_get"
                ],
                "actual_output": ""
            }
        ]
    },
    {
        "service_name": "Wolfram",
        "cases": [
            {
                "input": "[INST] <<SYS>>You are called Wolfram Alpha Short Answers API. You can use tools from the Wolfram Alpha Short Answers API (Application Programming Interface). The tools can be used for getting information such as provides specific answers to questions using data and algorithms.\nYou will be presented with a prompt. Your task is to plan the usage of the tools to effectively find the response to the prompts. You must always use the tools to answer your question. You have no knowledge until you have used a tool. You can only use the tools available, do not make up any tools.<</SYS>>\n\nYou have the following tools available:\n\ngetAnswerToQuestion: Get short answer from Wolfram Alpha\nformulate_response: Answer questions about wolframalpha. Use this tool when no other tool should be used.\n\nLet's first understand the problem and devise a plan to solve the problem. Please output the plan starting with the header 'Plan:' and then followed by a numbered list of steps. Please make the plan the minimum number of steps required to accurately complete the task. Always use the tools available in your plan to answer the response. Your plan should contain the name of the tools to use. You can use the same tool multiple times if required. At the end of your plan, use the delimiter 'end_of_plan'. After the end of your plan provide an explanation of why this plan should be followed. \n\nInput: Hello\nOutput: Plan:\n1. formulate_response\n\nInput: Delete experiment X1234\nOutput: Plan:\n1. get_experiment_list\n2. get_experiment\n3. delete_experiment\n4. formulate_response\n\nInput: I'm trying to lose weight and I'm counting calories. Can you tell me how many calories are in a medium-sized apple?\nOutput:[\\INST]",
                "expected_plan": [
                    "result_get"
                ],
                "actual_output": ""
            },
            {
                "input": "[INST] <<SYS>>You are called Wolfram Alpha Short Answers API. You can use tools from the Wolfram Alpha Short Answers API (Application Programming Interface). The tools can be used for getting information such as provides specific answers to questions using data and algorithms.\nYou will be presented with a prompt. Your task is to plan the usage of the tools to effectively find the response to the prompts. You must always use the tools to answer your question. You have no knowledge until you have used a tool. You can only use the tools available, do not make up any tools.<</SYS>>\n\nYou have the following tools available:\n\ngetAnswerToQuestion: Get short answer from Wolfram Alpha\nformulate_response: Answer questions about wolframalpha. Use this tool when no other tool should be used.\n\nLet's first understand the problem and devise a plan to solve the problem. Please output the plan starting with the header 'Plan:' and then followed by a numbered list of steps. Please make the plan the minimum number of steps required to accurately complete the task. Always use the tools available in your plan to answer the response. Your plan should contain the name of the tools to use. You can use the same tool multiple times if required. At the end of your plan, use the delimiter 'end_of_plan'. After the end of your plan provide an explanation of why this plan should be followed. \n\nInput: Hello\nOutput: Plan:\n1. formulate_response\n\nInput: Delete experiment X1234\nOutput: Plan:\n1. get_experiment_list\n2. get_experiment\n3. delete_experiment\n4. formulate_response\n\nInput: I'm doing a presentation on famous scientists. Can you find out when Albert Einstein was born?\nOutput:[\\INST]",
                "expected_plan": [
                    "result_get"
                ],
                "actual_output": ""
            },
            {
                "input": "[INST] <<SYS>>You are called Wolfram Alpha Short Answers API. You can use tools from the Wolfram Alpha Short Answers API (Application Programming Interface). The tools can be used for getting information such as provides specific answers to questions using data and algorithms.\nYou will be presented with a prompt. Your task is to plan the usage of the tools to effectively find the response to the prompts. You must always use the tools to answer your question. You have no knowledge until you have used a tool. You can only use the tools available, do not make up any tools.<</SYS>>\n\nYou have the following tools available:\n\ngetAnswerToQuestion: Get short answer from Wolfram Alpha\nformulate_response: Answer questions about wolframalpha. Use this tool when no other tool should be used.\n\nLet's first understand the problem and devise a plan to solve the problem. Please output the plan starting with the header 'Plan:' and then followed by a numbered list of steps. Please make the plan the minimum number of steps required to accurately complete the task. Always use the tools available in your plan to answer the response. Your plan should contain the name of the tools to use. You can use the same tool multiple times if required. At the end of your plan, use the delimiter 'end_of_plan'. After the end of your plan provide an explanation of why this plan should be followed. \n\nInput: Hello\nOutput: Plan:\n1. formulate_response\n\nInput: Delete experiment X1234\nOutput: Plan:\n1. get_experiment_list\n2. get_experiment\n3. delete_experiment\n4. formulate_response\n\nInput: Could you check the population of Tokyo for me using the demographics API?\nOutput:[\\INST]",
                "expected_plan": [
                    "result_get"
                ],
                "actual_output": ""
            },
            {
                "input": "[INST] <<SYS>>You are called Wolfram Alpha Short Answers API. You can use tools from the Wolfram Alpha Short Answers API (Application Programming Interface). The tools can be used for getting information such as provides specific answers to questions using data and algorithms.\nYou will be presented with a prompt. Your task is to plan the usage of the tools to effectively find the response to the prompts. You must always use the tools to answer your question. You have no knowledge until you have used a tool. You can only use the tools available, do not make up any tools.<</SYS>>\n\nYou have the following tools available:\n\ngetAnswerToQuestion: Get short answer from Wolfram Alpha\nformulate_response: Answer questions about wolframalpha. Use this tool when no other tool should be used.\n\nLet's first understand the problem and devise a plan to solve the problem. Please output the plan starting with the header 'Plan:' and then followed by a numbered list of steps. Please make the plan the minimum number of steps required to accurately complete the task. Always use the tools available in your plan to answer the response. Your plan should contain the name of the tools to use. You can use the same tool multiple times if required. At the end of your plan, use the delimiter 'end_of_plan'. After the end of your plan provide an explanation of why this plan should be followed. \n\nInput: Hello\nOutput: Plan:\n1. formulate_response\n\nInput: Delete experiment X1234\nOutput: Plan:\n1. get_experiment_list\n2. get_experiment\n3. delete_experiment\n4. formulate_response\n\nInput: Can you find the current temperature in New York City in Fahrenheit using the weather API?\nOutput:[\\INST]",
                "expected_plan": [
                    "result_get"
                ],
                "actual_output": ""
            },
            {
                "input": "[INST] <<SYS>>You are called Wolfram Alpha Short Answers API. You can use tools from the Wolfram Alpha Short Answers API (Application Programming Interface). The tools can be used for getting information such as provides specific answers to questions using data and algorithms.\nYou will be presented with a prompt. Your task is to plan the usage of the tools to effectively find the response to the prompts. You must always use the tools to answer your question. You have no knowledge until you have used a tool. You can only use the tools available, do not make up any tools.<</SYS>>\n\nYou have the following tools available:\n\ngetAnswerToQuestion: Get short answer from Wolfram Alpha\nformulate_response: Answer questions about wolframalpha. Use this tool when no other tool should be used.\n\nLet's first understand the problem and devise a plan to solve the problem. Please output the plan starting with the header 'Plan:' and then followed by a numbered list of steps. Please make the plan the minimum number of steps required to accurately complete the task. Always use the tools available in your plan to answer the response. Your plan should contain the name of the tools to use. You can use the same tool multiple times if required. At the end of your plan, use the delimiter 'end_of_plan'. After the end of your plan provide an explanation of why this plan should be followed. \n\nInput: Hello\nOutput: Plan:\n1. formulate_response\n\nInput: Delete experiment X1234\nOutput: Plan:\n1. get_experiment_list\n2. get_experiment\n3. delete_experiment\n4. formulate_response\n\nInput: I'm planning a trip to Paris and I'm curious about the weather. Can you find out what the average temperature is in Paris in July?\nOutput:[\\INST]",
                "expected_plan": [
                    "result_get"
                ],
                "actual_output": ""
            },
            {
                "input": "[INST] <<SYS>>You are called Wolfram Alpha Short Answers API. You can use tools from the Wolfram Alpha Short Answers API (Application Programming Interface). The tools can be used for getting information such as provides specific answers to questions using data and algorithms.\nYou will be presented with a prompt. Your task is to plan the usage of the tools to effectively find the response to the prompts. You must always use the tools to answer your question. You have no knowledge until you have used a tool. You can only use the tools available, do not make up any tools.<</SYS>>\n\nYou have the following tools available:\n\ngetAnswerToQuestion: Get short answer from Wolfram Alpha\nformulate_response: Answer questions about wolframalpha. Use this tool when no other tool should be used.\n\nLet's first understand the problem and devise a plan to solve the problem. Please output the plan starting with the header 'Plan:' and then followed by a numbered list of steps. Please make the plan the minimum number of steps required to accurately complete the task. Always use the tools available in your plan to answer the response. Your plan should contain the name of the tools to use. You can use the same tool multiple times if required. At the end of your plan, use the delimiter 'end_of_plan'. After the end of your plan provide an explanation of why this plan should be followed. \n\nInput: Hello\nOutput: Plan:\n1. formulate_response\n\nInput: Delete experiment X1234\nOutput: Plan:\n1. get_experiment_list\n2. get_experiment\n3. delete_experiment\n4. formulate_response\n\nInput: I'm working on a science project and I need to know how many moons Jupiter has. Can you look that up for me?\nOutput:[\\INST]",
                "expected_plan": [
                    "result_get"
                ],
                "actual_output": ""
            },
            {
                "input": "[INST] <<SYS>>You are called Wolfram Alpha Short Answers API. You can use tools from the Wolfram Alpha Short Answers API (Application Programming Interface). The tools can be used for getting information such as provides specific answers to questions using data and algorithms.\nYou will be presented with a prompt. Your task is to plan the usage of the tools to effectively find the response to the prompts. You must always use the tools to answer your question. You have no knowledge until you have used a tool. You can only use the tools available, do not make up any tools.<</SYS>>\n\nYou have the following tools available:\n\ngetAnswerToQuestion: Get short answer from Wolfram Alpha\nformulate_response: Answer questions about wolframalpha. Use this tool when no other tool should be used.\n\nLet's first understand the problem and devise a plan to solve the problem. Please output the plan starting with the header 'Plan:' and then followed by a numbered list of steps. Please make the plan the minimum number of steps required to accurately complete the task. Always use the tools available in your plan to answer the response. Your plan should contain the name of the tools to use. You can use the same tool multiple times if required. At the end of your plan, use the delimiter 'end_of_plan'. After the end of your plan provide an explanation of why this plan should be followed. \n\nInput: Hello\nOutput: Plan:\n1. formulate_response\n\nInput: Delete experiment X1234\nOutput: Plan:\n1. get_experiment_list\n2. get_experiment\n3. delete_experiment\n4. formulate_response\n\nInput: Please help me calculate the square root of 625 using the math API.\nOutput:[\\INST]",
                "expected_plan": [
                    "result_get"
                ],
                "actual_output": ""
            },
            {
                "input": "[INST] <<SYS>>You are called Wolfram Alpha Short Answers API. You can use tools from the Wolfram Alpha Short Answers API (Application Programming Interface). The tools can be used for getting information such as provides specific answers to questions using data and algorithms.\nYou will be presented with a prompt. Your task is to plan the usage of the tools to effectively find the response to the prompts. You must always use the tools to answer your question. You have no knowledge until you have used a tool. You can only use the tools available, do not make up any tools.<</SYS>>\n\nYou have the following tools available:\n\ngetAnswerToQuestion: Get short answer from Wolfram Alpha\nformulate_response: Answer questions about wolframalpha. Use this tool when no other tool should be used.\n\nLet's first understand the problem and devise a plan to solve the problem. Please output the plan starting with the header 'Plan:' and then followed by a numbered list of steps. Please make the plan the minimum number of steps required to accurately complete the task. Always use the tools available in your plan to answer the response. Your plan should contain the name of the tools to use. You can use the same tool multiple times if required. At the end of your plan, use the delimiter 'end_of_plan'. After the end of your plan provide an explanation of why this plan should be followed. \n\nInput: Hello\nOutput: Plan:\n1. formulate_response\n\nInput: Delete experiment X1234\nOutput: Plan:\n1. get_experiment_list\n2. get_experiment\n3. delete_experiment\n4. formulate_response\n\nInput: I'm trying to eat healthier and I need to know the nutritional value of some foods. Can you tell me how many calories are in an apple and a banana?\nOutput:[\\INST]",
                "expected_plan": [
                    "result_get",
                    "result_get"
                ],
                "actual_output": ""
            },
            {
                "input": "[INST] <<SYS>>You are called Wolfram Alpha Short Answers API. You can use tools from the Wolfram Alpha Short Answers API (Application Programming Interface). The tools can be used for getting information such as provides specific answers to questions using data and algorithms.\nYou will be presented with a prompt. Your task is to plan the usage of the tools to effectively find the response to the prompts. You must always use the tools to answer your question. You have no knowledge until you have used a tool. You can only use the tools available, do not make up any tools.<</SYS>>\n\nYou have the following tools available:\n\ngetAnswerToQuestion: Get short answer from Wolfram Alpha\nformulate_response: Answer questions about wolframalpha. Use this tool when no other tool should be used.\n\nLet's first understand the problem and devise a plan to solve the problem. Please output the plan starting with the header 'Plan:' and then followed by a numbered list of steps. Please make the plan the minimum number of steps required to accurately complete the task. Always use the tools available in your plan to answer the response. Your plan should contain the name of the tools to use. You can use the same tool multiple times if required. At the end of your plan, use the delimiter 'end_of_plan'. After the end of your plan provide an explanation of why this plan should be followed. \n\nInput: Hello\nOutput: Plan:\n1. formulate_response\n\nInput: Delete experiment X1234\nOutput: Plan:\n1. get_experiment_list\n2. get_experiment\n3. delete_experiment\n4. formulate_response\n\nInput: I want to know the capital city of Australia. Can you use the geography API to find that out?\nOutput:[\\INST]",
                "expected_plan": [
                    "result_get"
                ],
                "actual_output": ""
            },
            {
                "input": "[INST] <<SYS>>You are called Wolfram Alpha Short Answers API. You can use tools from the Wolfram Alpha Short Answers API (Application Programming Interface). The tools can be used for getting information such as provides specific answers to questions using data and algorithms.\nYou will be presented with a prompt. Your task is to plan the usage of the tools to effectively find the response to the prompts. You must always use the tools to answer your question. You have no knowledge until you have used a tool. You can only use the tools available, do not make up any tools.<</SYS>>\n\nYou have the following tools available:\n\ngetAnswerToQuestion: Get short answer from Wolfram Alpha\nformulate_response: Answer questions about wolframalpha. Use this tool when no other tool should be used.\n\nLet's first understand the problem and devise a plan to solve the problem. Please output the plan starting with the header 'Plan:' and then followed by a numbered list of steps. Please make the plan the minimum number of steps required to accurately complete the task. Always use the tools available in your plan to answer the response. Your plan should contain the name of the tools to use. You can use the same tool multiple times if required. At the end of your plan, use the delimiter 'end_of_plan'. After the end of your plan provide an explanation of why this plan should be followed. \n\nInput: Hello\nOutput: Plan:\n1. formulate_response\n\nInput: Delete experiment X1234\nOutput: Plan:\n1. get_experiment_list\n2. get_experiment\n3. delete_experiment\n4. formulate_response\n\nInput: I'm writing a report on the solar system and I need some information. Can you tell me the diameter of Mars and the distance between Mars and Earth?\nOutput:[\\INST]",
                "expected_plan": [
                    "result_get",
                    "result_get"
                ],
                "actual_output": ""
            },
            {
                "input": "[INST] <<SYS>>You are called Wolfram Alpha Short Answers API. You can use tools from the Wolfram Alpha Short Answers API (Application Programming Interface). The tools can be used for getting information such as provides specific answers to questions using data and algorithms.\nYou will be presented with a prompt. Your task is to plan the usage of the tools to effectively find the response to the prompts. You must always use the tools to answer your question. You have no knowledge until you have used a tool. You can only use the tools available, do not make up any tools.<</SYS>>\n\nYou have the following tools available:\n\ngetAnswerToQuestion: Get short answer from Wolfram Alpha\nformulate_response: Answer questions about wolframalpha. Use this tool when no other tool should be used.\n\nLet's first understand the problem and devise a plan to solve the problem. Please output the plan starting with the header 'Plan:' and then followed by a numbered list of steps. Please make the plan the minimum number of steps required to accurately complete the task. Always use the tools available in your plan to answer the response. Your plan should contain the name of the tools to use. You can use the same tool multiple times if required. At the end of your plan, use the delimiter 'end_of_plan'. After the end of your plan provide an explanation of why this plan should be followed. \n\nInput: Hello\nOutput: Plan:\n1. formulate_response\n\nInput: Delete experiment X1234\nOutput: Plan:\n1. get_experiment_list\n2. get_experiment\n3. delete_experiment\n4. formulate_response\n\nInput: I need to convert 5 miles to kilometers. Can you use the unit conversion API to help me with that?\nOutput:[\\INST]",
                "expected_plan": [
                    "result_get"
                ],
                "actual_output": ""
            },
            {
                "input": "[INST] <<SYS>>You are called Wolfram Alpha Short Answers API. You can use tools from the Wolfram Alpha Short Answers API (Application Programming Interface). The tools can be used for getting information such as provides specific answers to questions using data and algorithms.\nYou will be presented with a prompt. Your task is to plan the usage of the tools to effectively find the response to the prompts. You must always use the tools to answer your question. You have no knowledge until you have used a tool. You can only use the tools available, do not make up any tools.<</SYS>>\n\nYou have the following tools available:\n\ngetAnswerToQuestion: Get short answer from Wolfram Alpha\nformulate_response: Answer questions about wolframalpha. Use this tool when no other tool should be used.\n\nLet's first understand the problem and devise a plan to solve the problem. Please output the plan starting with the header 'Plan:' and then followed by a numbered list of steps. Please make the plan the minimum number of steps required to accurately complete the task. Always use the tools available in your plan to answer the response. Your plan should contain the name of the tools to use. You can use the same tool multiple times if required. At the end of your plan, use the delimiter 'end_of_plan'. After the end of your plan provide an explanation of why this plan should be followed. \n\nInput: Hello\nOutput: Plan:\n1. formulate_response\n\nInput: Delete experiment X1234\nOutput: Plan:\n1. get_experiment_list\n2. get_experiment\n3. delete_experiment\n4. formulate_response\n\nInput: I'm planning a road trip and I need to calculate the distance. Can you tell me the distance from Los Angeles to New York by car? Also, can you tell me how long it would take to drive that distance?\nOutput:[\\INST]",
                "expected_plan": [
                    "result_get",
                    "result_get"
                ],
                "actual_output": ""
            },
            {
                "input": "[INST] <<SYS>>You are called Wolfram Alpha Short Answers API. You can use tools from the Wolfram Alpha Short Answers API (Application Programming Interface). The tools can be used for getting information such as provides specific answers to questions using data and algorithms.\nYou will be presented with a prompt. Your task is to plan the usage of the tools to effectively find the response to the prompts. You must always use the tools to answer your question. You have no knowledge until you have used a tool. You can only use the tools available, do not make up any tools.<</SYS>>\n\nYou have the following tools available:\n\ngetAnswerToQuestion: Get short answer from Wolfram Alpha\nformulate_response: Answer questions about wolframalpha. Use this tool when no other tool should be used.\n\nLet's first understand the problem and devise a plan to solve the problem. Please output the plan starting with the header 'Plan:' and then followed by a numbered list of steps. Please make the plan the minimum number of steps required to accurately complete the task. Always use the tools available in your plan to answer the response. Your plan should contain the name of the tools to use. You can use the same tool multiple times if required. At the end of your plan, use the delimiter 'end_of_plan'. After the end of your plan provide an explanation of why this plan should be followed. \n\nInput: Hello\nOutput: Plan:\n1. formulate_response\n\nInput: Delete experiment X1234\nOutput: Plan:\n1. get_experiment_list\n2. get_experiment\n3. delete_experiment\n4. formulate_response\n\nInput: Hey, I'm trying to help my daughter with her homework and we're stuck on this math problem. Can you find out what the square root of 256 is?\nOutput:[\\INST]",
                "expected_plan": [
                    "result_get"
                ],
                "actual_output": ""
            }
        ]
    },
    {
        "service_name": "FruityVice",
        "cases": [
            {
                "input": "[INST] <<SYS>>You are called FruityVice API. You can use tools from the FruityVice API (Application Programming Interface). The tools can be used for getting information such as data about all kinds of fruit.\nYou will be presented with a prompt. Your task is to plan the usage of the tools to effectively find the response to the prompts. You must always use the tools to answer your question. You have no knowledge until you have used a tool. You can only use the tools available, do not make up any tools.<</SYS>>\n\nYou have the following tools available:\n\ngetFruitByName: Get a fruit information by its name. To use this tool, you need to provide the name property.\ngetAllFruits: Get all fruits\ngetFruitByFamily: Get a fruit by family. To use this tool, you need to provide the family property.\ngetFruitsByGenus: Get fruits by genus. To use this tool, you need to provide the genus property.\ngetFruitsByOrder: Get fruits by order. To use this tool, you need to provide the order property.\nformulate_response: Answer questions about fruityvice. Use this tool when no other tool should be used.\n\nLet's first understand the problem and devise a plan to solve the problem. Please output the plan starting with the header 'Plan:' and then followed by a numbered list of steps. Please make the plan the minimum number of steps required to accurately complete the task. Always use the tools available in your plan to answer the response. Your plan should contain the name of the tools to use. You can use the same tool multiple times if required. At the end of your plan, use the delimiter 'end_of_plan'. After the end of your plan provide an explanation of why this plan should be followed. \n\nInput: Hello\nOutput: Plan:\n1. formulate_response\n\nInput: Delete experiment X1234\nOutput: Plan:\n1. get_experiment_list\n2. get_experiment\n3. delete_experiment\n4. formulate_response\n\nInput: I'm curious about the nutritional value of an apple. Can you find out how many calories, carbohydrates, proteins, fats, and sugars an apple has?\nOutput:[\\INST]",
                "expected_plan": [
                    "getFruitByName"
                ],
                "actual_output": ""
            },
            {
                "input": "[INST] <<SYS>>You are called FruityVice API. You can use tools from the FruityVice API (Application Programming Interface). The tools can be used for getting information such as data about all kinds of fruit.\nYou will be presented with a prompt. Your task is to plan the usage of the tools to effectively find the response to the prompts. You must always use the tools to answer your question. You have no knowledge until you have used a tool. You can only use the tools available, do not make up any tools.<</SYS>>\n\nYou have the following tools available:\n\ngetFruitByName: Get a fruit information by its name. To use this tool, you need to provide the name property.\ngetAllFruits: Get all fruits\ngetFruitByFamily: Get a fruit by family. To use this tool, you need to provide the family property.\ngetFruitsByGenus: Get fruits by genus. To use this tool, you need to provide the genus property.\ngetFruitsByOrder: Get fruits by order. To use this tool, you need to provide the order property.\nformulate_response: Answer questions about fruityvice. Use this tool when no other tool should be used.\n\nLet's first understand the problem and devise a plan to solve the problem. Please output the plan starting with the header 'Plan:' and then followed by a numbered list of steps. Please make the plan the minimum number of steps required to accurately complete the task. Always use the tools available in your plan to answer the response. Your plan should contain the name of the tools to use. You can use the same tool multiple times if required. At the end of your plan, use the delimiter 'end_of_plan'. After the end of your plan provide an explanation of why this plan should be followed. \n\nInput: Hello\nOutput: Plan:\n1. formulate_response\n\nInput: Delete experiment X1234\nOutput: Plan:\n1. get_experiment_list\n2. get_experiment\n3. delete_experiment\n4. formulate_response\n\nInput: Please fetch all the fruits available in the API. I want to explore the variety and learn about different fruit options.\nOutput:[\\INST]",
                "expected_plan": [
                    "getAllFruits"
                ],
                "actual_output": ""
            },
            {
                "input": "[INST] <<SYS>>You are called FruityVice API. You can use tools from the FruityVice API (Application Programming Interface). The tools can be used for getting information such as data about all kinds of fruit.\nYou will be presented with a prompt. Your task is to plan the usage of the tools to effectively find the response to the prompts. You must always use the tools to answer your question. You have no knowledge until you have used a tool. You can only use the tools available, do not make up any tools.<</SYS>>\n\nYou have the following tools available:\n\ngetFruitByName: Get a fruit information by its name. To use this tool, you need to provide the name property.\ngetAllFruits: Get all fruits\ngetFruitByFamily: Get a fruit by family. To use this tool, you need to provide the family property.\ngetFruitsByGenus: Get fruits by genus. To use this tool, you need to provide the genus property.\ngetFruitsByOrder: Get fruits by order. To use this tool, you need to provide the order property.\nformulate_response: Answer questions about fruityvice. Use this tool when no other tool should be used.\n\nLet's first understand the problem and devise a plan to solve the problem. Please output the plan starting with the header 'Plan:' and then followed by a numbered list of steps. Please make the plan the minimum number of steps required to accurately complete the task. Always use the tools available in your plan to answer the response. Your plan should contain the name of the tools to use. You can use the same tool multiple times if required. At the end of your plan, use the delimiter 'end_of_plan'. After the end of your plan provide an explanation of why this plan should be followed. \n\nInput: Hello\nOutput: Plan:\n1. formulate_response\n\nInput: Delete experiment X1234\nOutput: Plan:\n1. get_experiment_list\n2. get_experiment\n3. delete_experiment\n4. formulate_response\n\nInput: I'm curious about fruits belonging to the \"Rosaceae\" family. Can you retrieve information about a fruit from this family using the API? I'd like to know its name, genus, order, and nutritional values.\nOutput:[\\INST]",
                "expected_plan": [
                    "getFruitByFamily"
                ],
                "actual_output": ""
            },
            {
                "input": "[INST] <<SYS>>You are called FruityVice API. You can use tools from the FruityVice API (Application Programming Interface). The tools can be used for getting information such as data about all kinds of fruit.\nYou will be presented with a prompt. Your task is to plan the usage of the tools to effectively find the response to the prompts. You must always use the tools to answer your question. You have no knowledge until you have used a tool. You can only use the tools available, do not make up any tools.<</SYS>>\n\nYou have the following tools available:\n\ngetFruitByName: Get a fruit information by its name. To use this tool, you need to provide the name property.\ngetAllFruits: Get all fruits\ngetFruitByFamily: Get a fruit by family. To use this tool, you need to provide the family property.\ngetFruitsByGenus: Get fruits by genus. To use this tool, you need to provide the genus property.\ngetFruitsByOrder: Get fruits by order. To use this tool, you need to provide the order property.\nformulate_response: Answer questions about fruityvice. Use this tool when no other tool should be used.\n\nLet's first understand the problem and devise a plan to solve the problem. Please output the plan starting with the header 'Plan:' and then followed by a numbered list of steps. Please make the plan the minimum number of steps required to accurately complete the task. Always use the tools available in your plan to answer the response. Your plan should contain the name of the tools to use. You can use the same tool multiple times if required. At the end of your plan, use the delimiter 'end_of_plan'. After the end of your plan provide an explanation of why this plan should be followed. \n\nInput: Hello\nOutput: Plan:\n1. formulate_response\n\nInput: Delete experiment X1234\nOutput: Plan:\n1. get_experiment_list\n2. get_experiment\n3. delete_experiment\n4. formulate_response\n\nInput: I'm planning to make a fruit salad, and I want to include fruits from the \"Sapindales\" order. Can you fetch a list of fruits belonging to this order using the API? I need their names, families, and nutritional values.\nOutput:[\\INST]",
                "expected_plan": [
                    "getFruitsByOrder"
                ],
                "actual_output": ""
            },
            {
                "input": "[INST] <<SYS>>You are called FruityVice API. You can use tools from the FruityVice API (Application Programming Interface). The tools can be used for getting information such as data about all kinds of fruit.\nYou will be presented with a prompt. Your task is to plan the usage of the tools to effectively find the response to the prompts. You must always use the tools to answer your question. You have no knowledge until you have used a tool. You can only use the tools available, do not make up any tools.<</SYS>>\n\nYou have the following tools available:\n\ngetFruitByName: Get a fruit information by its name. To use this tool, you need to provide the name property.\ngetAllFruits: Get all fruits\ngetFruitByFamily: Get a fruit by family. To use this tool, you need to provide the family property.\ngetFruitsByGenus: Get fruits by genus. To use this tool, you need to provide the genus property.\ngetFruitsByOrder: Get fruits by order. To use this tool, you need to provide the order property.\nformulate_response: Answer questions about fruityvice. Use this tool when no other tool should be used.\n\nLet's first understand the problem and devise a plan to solve the problem. Please output the plan starting with the header 'Plan:' and then followed by a numbered list of steps. Please make the plan the minimum number of steps required to accurately complete the task. Always use the tools available in your plan to answer the response. Your plan should contain the name of the tools to use. You can use the same tool multiple times if required. At the end of your plan, use the delimiter 'end_of_plan'. After the end of your plan provide an explanation of why this plan should be followed. \n\nInput: Hello\nOutput: Plan:\n1. formulate_response\n\nInput: Delete experiment X1234\nOutput: Plan:\n1. get_experiment_list\n2. get_experiment\n3. delete_experiment\n4. formulate_response\n\nInput: Can you find me information about a fruit called \"mango\" using the API? I want to know its nutritional values like carbohydrates, protein, fat, calories, and sugar.\nOutput:[\\INST]",
                "expected_plan": [
                    "getFruitByName"
                ],
                "actual_output": ""
            },
            {
                "input": "[INST] <<SYS>>You are called FruityVice API. You can use tools from the FruityVice API (Application Programming Interface). The tools can be used for getting information such as data about all kinds of fruit.\nYou will be presented with a prompt. Your task is to plan the usage of the tools to effectively find the response to the prompts. You must always use the tools to answer your question. You have no knowledge until you have used a tool. You can only use the tools available, do not make up any tools.<</SYS>>\n\nYou have the following tools available:\n\ngetFruitByName: Get a fruit information by its name. To use this tool, you need to provide the name property.\ngetAllFruits: Get all fruits\ngetFruitByFamily: Get a fruit by family. To use this tool, you need to provide the family property.\ngetFruitsByGenus: Get fruits by genus. To use this tool, you need to provide the genus property.\ngetFruitsByOrder: Get fruits by order. To use this tool, you need to provide the order property.\nformulate_response: Answer questions about fruityvice. Use this tool when no other tool should be used.\n\nLet's first understand the problem and devise a plan to solve the problem. Please output the plan starting with the header 'Plan:' and then followed by a numbered list of steps. Please make the plan the minimum number of steps required to accurately complete the task. Always use the tools available in your plan to answer the response. Your plan should contain the name of the tools to use. You can use the same tool multiple times if required. At the end of your plan, use the delimiter 'end_of_plan'. After the end of your plan provide an explanation of why this plan should be followed. \n\nInput: Hello\nOutput: Plan:\n1. formulate_response\n\nInput: Delete experiment X1234\nOutput: Plan:\n1. get_experiment_list\n2. get_experiment\n3. delete_experiment\n4. formulate_response\n\nInput: I'm trying to find fruits that belong to the \"Citrus\" genus. Could you help me retrieve a list of all such fruits using the API? I'm interested in their names, families, and nutritional values.\nOutput:[\\INST]",
                "expected_plan": [
                    "getFruitsByGenus"
                ],
                "actual_output": ""
            },
            {
                "input": "[INST] <<SYS>>You are called FruityVice API. You can use tools from the FruityVice API (Application Programming Interface). The tools can be used for getting information such as data about all kinds of fruit.\nYou will be presented with a prompt. Your task is to plan the usage of the tools to effectively find the response to the prompts. You must always use the tools to answer your question. You have no knowledge until you have used a tool. You can only use the tools available, do not make up any tools.<</SYS>>\n\nYou have the following tools available:\n\ngetFruitByName: Get a fruit information by its name. To use this tool, you need to provide the name property.\ngetAllFruits: Get all fruits\ngetFruitByFamily: Get a fruit by family. To use this tool, you need to provide the family property.\ngetFruitsByGenus: Get fruits by genus. To use this tool, you need to provide the genus property.\ngetFruitsByOrder: Get fruits by order. To use this tool, you need to provide the order property.\nformulate_response: Answer questions about fruityvice. Use this tool when no other tool should be used.\n\nLet's first understand the problem and devise a plan to solve the problem. Please output the plan starting with the header 'Plan:' and then followed by a numbered list of steps. Please make the plan the minimum number of steps required to accurately complete the task. Always use the tools available in your plan to answer the response. Your plan should contain the name of the tools to use. You can use the same tool multiple times if required. At the end of your plan, use the delimiter 'end_of_plan'. After the end of your plan provide an explanation of why this plan should be followed. \n\nInput: Hello\nOutput: Plan:\n1. formulate_response\n\nInput: Delete experiment X1234\nOutput: Plan:\n1. get_experiment_list\n2. get_experiment\n3. delete_experiment\n4. formulate_response\n\nInput: I'm trying to put together a fruit salad for a party this weekend. Can you help me find a list of fruits that are in season right now, and also tell me their nutritional values? I want to make sure I'm providing a healthy option for my guests.\nOutput:[\\INST]",
                "expected_plan": [
                    "getFruitByName",
                    "getFruitByName"
                ],
                "actual_output": ""
            },
            {
                "input": "[INST] <<SYS>>You are called FruityVice API. You can use tools from the FruityVice API (Application Programming Interface). The tools can be used for getting information such as data about all kinds of fruit.\nYou will be presented with a prompt. Your task is to plan the usage of the tools to effectively find the response to the prompts. You must always use the tools to answer your question. You have no knowledge until you have used a tool. You can only use the tools available, do not make up any tools.<</SYS>>\n\nYou have the following tools available:\n\ngetFruitByName: Get a fruit information by its name. To use this tool, you need to provide the name property.\ngetAllFruits: Get all fruits\ngetFruitByFamily: Get a fruit by family. To use this tool, you need to provide the family property.\ngetFruitsByGenus: Get fruits by genus. To use this tool, you need to provide the genus property.\ngetFruitsByOrder: Get fruits by order. To use this tool, you need to provide the order property.\nformulate_response: Answer questions about fruityvice. Use this tool when no other tool should be used.\n\nLet's first understand the problem and devise a plan to solve the problem. Please output the plan starting with the header 'Plan:' and then followed by a numbered list of steps. Please make the plan the minimum number of steps required to accurately complete the task. Always use the tools available in your plan to answer the response. Your plan should contain the name of the tools to use. You can use the same tool multiple times if required. At the end of your plan, use the delimiter 'end_of_plan'. After the end of your plan provide an explanation of why this plan should be followed. \n\nInput: Hello\nOutput: Plan:\n1. formulate_response\n\nInput: Delete experiment X1234\nOutput: Plan:\n1. get_experiment_list\n2. get_experiment\n3. delete_experiment\n4. formulate_response\n\nInput: I'm interested in learning more about the 'Citrus' genus. Can you provide me with a list of fruits that belong to this genus?\nOutput:[\\INST]",
                "expected_plan": [
                    "getFruitsByGenus"
                ],
                "actual_output": ""
            },
            {
                "input": "[INST] <<SYS>>You are called FruityVice API. You can use tools from the FruityVice API (Application Programming Interface). The tools can be used for getting information such as data about all kinds of fruit.\nYou will be presented with a prompt. Your task is to plan the usage of the tools to effectively find the response to the prompts. You must always use the tools to answer your question. You have no knowledge until you have used a tool. You can only use the tools available, do not make up any tools.<</SYS>>\n\nYou have the following tools available:\n\ngetFruitByName: Get a fruit information by its name. To use this tool, you need to provide the name property.\ngetAllFruits: Get all fruits\ngetFruitByFamily: Get a fruit by family. To use this tool, you need to provide the family property.\ngetFruitsByGenus: Get fruits by genus. To use this tool, you need to provide the genus property.\ngetFruitsByOrder: Get fruits by order. To use this tool, you need to provide the order property.\nformulate_response: Answer questions about fruityvice. Use this tool when no other tool should be used.\n\nLet's first understand the problem and devise a plan to solve the problem. Please output the plan starting with the header 'Plan:' and then followed by a numbered list of steps. Please make the plan the minimum number of steps required to accurately complete the task. Always use the tools available in your plan to answer the response. Your plan should contain the name of the tools to use. You can use the same tool multiple times if required. At the end of your plan, use the delimiter 'end_of_plan'. After the end of your plan provide an explanation of why this plan should be followed. \n\nInput: Hello\nOutput: Plan:\n1. formulate_response\n\nInput: Delete experiment X1234\nOutput: Plan:\n1. get_experiment_list\n2. get_experiment\n3. delete_experiment\n4. formulate_response\n\nInput: I've been told that fruits from the 'Solanaceae' family are not good for my health. Can you find out which fruits belong to this family so I can avoid them?\nOutput:[\\INST]",
                "expected_plan": [
                    "getFruitByFamily"
                ],
                "actual_output": ""
            },
            {
                "input": "[INST] <<SYS>>You are called FruityVice API. You can use tools from the FruityVice API (Application Programming Interface). The tools can be used for getting information such as data about all kinds of fruit.\nYou will be presented with a prompt. Your task is to plan the usage of the tools to effectively find the response to the prompts. You must always use the tools to answer your question. You have no knowledge until you have used a tool. You can only use the tools available, do not make up any tools.<</SYS>>\n\nYou have the following tools available:\n\ngetFruitByName: Get a fruit information by its name. To use this tool, you need to provide the name property.\ngetAllFruits: Get all fruits\ngetFruitByFamily: Get a fruit by family. To use this tool, you need to provide the family property.\ngetFruitsByGenus: Get fruits by genus. To use this tool, you need to provide the genus property.\ngetFruitsByOrder: Get fruits by order. To use this tool, you need to provide the order property.\nformulate_response: Answer questions about fruityvice. Use this tool when no other tool should be used.\n\nLet's first understand the problem and devise a plan to solve the problem. Please output the plan starting with the header 'Plan:' and then followed by a numbered list of steps. Please make the plan the minimum number of steps required to accurately complete the task. Always use the tools available in your plan to answer the response. Your plan should contain the name of the tools to use. You can use the same tool multiple times if required. At the end of your plan, use the delimiter 'end_of_plan'. After the end of your plan provide an explanation of why this plan should be followed. \n\nInput: Hello\nOutput: Plan:\n1. formulate_response\n\nInput: Delete experiment X1234\nOutput: Plan:\n1. get_experiment_list\n2. get_experiment\n3. delete_experiment\n4. formulate_response\n\nInput: I'm planning a themed dinner and want to serve fruits from the 'Rosales' order. Can you provide me with a list of fruits in this order?\nOutput:[\\INST]",
                "expected_plan": [
                    "getFruitsByOrder"
                ],
                "actual_output": ""
            },
            {
                "input": "[INST] <<SYS>>You are called FruityVice API. You can use tools from the FruityVice API (Application Programming Interface). The tools can be used for getting information such as data about all kinds of fruit.\nYou will be presented with a prompt. Your task is to plan the usage of the tools to effectively find the response to the prompts. You must always use the tools to answer your question. You have no knowledge until you have used a tool. You can only use the tools available, do not make up any tools.<</SYS>>\n\nYou have the following tools available:\n\ngetFruitByName: Get a fruit information by its name. To use this tool, you need to provide the name property.\ngetAllFruits: Get all fruits\ngetFruitByFamily: Get a fruit by family. To use this tool, you need to provide the family property.\ngetFruitsByGenus: Get fruits by genus. To use this tool, you need to provide the genus property.\ngetFruitsByOrder: Get fruits by order. To use this tool, you need to provide the order property.\nformulate_response: Answer questions about fruityvice. Use this tool when no other tool should be used.\n\nLet's first understand the problem and devise a plan to solve the problem. Please output the plan starting with the header 'Plan:' and then followed by a numbered list of steps. Please make the plan the minimum number of steps required to accurately complete the task. Always use the tools available in your plan to answer the response. Your plan should contain the name of the tools to use. You can use the same tool multiple times if required. At the end of your plan, use the delimiter 'end_of_plan'. After the end of your plan provide an explanation of why this plan should be followed. \n\nInput: Hello\nOutput: Plan:\n1. formulate_response\n\nInput: Delete experiment X1234\nOutput: Plan:\n1. get_experiment_list\n2. get_experiment\n3. delete_experiment\n4. formulate_response\n\nInput: I'm curious about the origin of my favorite fruits. Could you find out where apples, oranges, and bananas originally come from? Also, I'd like to know their peak harvesting times.\nOutput:[\\INST]",
                "expected_plan": [
                    "getFruitByName",
                    "getFruitByName",
                    "getFruitByName"
                ],
                "actual_output": ""
            }
        ]
    },
    {
        "service_name": "Cataas",
        "cases": [
            {
                "input": "[INST] <<SYS>>You are called Cataas. You can use tools from the Cataas (Application Programming Interface). The tools can be used for getting information such as cat as a service (cats pictures and gifs).\nYou will be presented with a prompt. Your task is to plan the usage of the tools to effectively find the response to the prompts. You must always use the tools to answer your question. You have no knowledge until you have used a tool. You can only use the tools available, do not make up any tools.<</SYS>>\n\nYou have the following tools available:\n\ngetRandomCat: Get random cat\nfindCatById: Get cat by id. To use this tool, you need to provide the id property.\nfindCatByTag: Get random cat by tag. To use this tool, you need to provide the tag property.\nfindCatWithText: Get random cat saying text. To use this tool, you need to provide the text property.\ngetAllCats: Will return all cats\ngetAllTags: Will return all tags\ngetCatCount: Count how many cats\nformulate_response: Answer questions about cataas. Use this tool when no other tool should be used.\n\nLet's first understand the problem and devise a plan to solve the problem. Please output the plan starting with the header 'Plan:' and then followed by a numbered list of steps. Please make the plan the minimum number of steps required to accurately complete the task. Always use the tools available in your plan to answer the response. Your plan should contain the name of the tools to use. You can use the same tool multiple times if required. At the end of your plan, use the delimiter 'end_of_plan'. After the end of your plan provide an explanation of why this plan should be followed. \n\nInput: Hello\nOutput: Plan:\n1. formulate_response\n\nInput: Delete experiment X1234\nOutput: Plan:\n1. get_experiment_list\n2. get_experiment\n3. delete_experiment\n4. formulate_response\n\nInput: I'm looking for a cat picture with the tag 'cute'. Could you find me a random one? Make sure it has a width of 800 pixels and a height of 600 pixels.\nOutput:[\\INST]",
                "expected_plan": [
                    "findCatByTag"
                ],
                "actual_output": ""
            },
            {
                "input": "[INST] <<SYS>>You are called Cataas. You can use tools from the Cataas (Application Programming Interface). The tools can be used for getting information such as cat as a service (cats pictures and gifs).\nYou will be presented with a prompt. Your task is to plan the usage of the tools to effectively find the response to the prompts. You must always use the tools to answer your question. You have no knowledge until you have used a tool. You can only use the tools available, do not make up any tools.<</SYS>>\n\nYou have the following tools available:\n\ngetRandomCat: Get random cat\nfindCatById: Get cat by id. To use this tool, you need to provide the id property.\nfindCatByTag: Get random cat by tag. To use this tool, you need to provide the tag property.\nfindCatWithText: Get random cat saying text. To use this tool, you need to provide the text property.\ngetAllCats: Will return all cats\ngetAllTags: Will return all tags\ngetCatCount: Count how many cats\nformulate_response: Answer questions about cataas. Use this tool when no other tool should be used.\n\nLet's first understand the problem and devise a plan to solve the problem. Please output the plan starting with the header 'Plan:' and then followed by a numbered list of steps. Please make the plan the minimum number of steps required to accurately complete the task. Always use the tools available in your plan to answer the response. Your plan should contain the name of the tools to use. You can use the same tool multiple times if required. At the end of your plan, use the delimiter 'end_of_plan'. After the end of your plan provide an explanation of why this plan should be followed. \n\nInput: Hello\nOutput: Plan:\n1. formulate_response\n\nInput: Delete experiment X1234\nOutput: Plan:\n1. get_experiment_list\n2. get_experiment\n3. delete_experiment\n4. formulate_response\n\nInput: I'm curious about how many cats are available in the database. Can you count them for me?\nOutput:[\\INST]",
                "expected_plan": [
                    "count"
                ],
                "actual_output": ""
            },
            {
                "input": "[INST] <<SYS>>You are called Cataas. You can use tools from the Cataas (Application Programming Interface). The tools can be used for getting information such as cat as a service (cats pictures and gifs).\nYou will be presented with a prompt. Your task is to plan the usage of the tools to effectively find the response to the prompts. You must always use the tools to answer your question. You have no knowledge until you have used a tool. You can only use the tools available, do not make up any tools.<</SYS>>\n\nYou have the following tools available:\n\ngetRandomCat: Get random cat\nfindCatById: Get cat by id. To use this tool, you need to provide the id property.\nfindCatByTag: Get random cat by tag. To use this tool, you need to provide the tag property.\nfindCatWithText: Get random cat saying text. To use this tool, you need to provide the text property.\ngetAllCats: Will return all cats\ngetAllTags: Will return all tags\ngetCatCount: Count how many cats\nformulate_response: Answer questions about cataas. Use this tool when no other tool should be used.\n\nLet's first understand the problem and devise a plan to solve the problem. Please output the plan starting with the header 'Plan:' and then followed by a numbered list of steps. Please make the plan the minimum number of steps required to accurately complete the task. Always use the tools available in your plan to answer the response. Your plan should contain the name of the tools to use. You can use the same tool multiple times if required. At the end of your plan, use the delimiter 'end_of_plan'. After the end of your plan provide an explanation of why this plan should be followed. \n\nInput: Hello\nOutput: Plan:\n1. formulate_response\n\nInput: Delete experiment X1234\nOutput: Plan:\n1. get_experiment_list\n2. get_experiment\n3. delete_experiment\n4. formulate_response\n\nInput: I need a funny image for a birthday card. Can you find me a picture of a cat with the text 'Happy Birthday' on it?\nOutput:[\\INST]",
                "expected_plan": [
                    "findCatWithText"
                ],
                "actual_output": ""
            },
            {
                "input": "[INST] <<SYS>>You are called Cataas. You can use tools from the Cataas (Application Programming Interface). The tools can be used for getting information such as cat as a service (cats pictures and gifs).\nYou will be presented with a prompt. Your task is to plan the usage of the tools to effectively find the response to the prompts. You must always use the tools to answer your question. You have no knowledge until you have used a tool. You can only use the tools available, do not make up any tools.<</SYS>>\n\nYou have the following tools available:\n\ngetRandomCat: Get random cat\nfindCatById: Get cat by id. To use this tool, you need to provide the id property.\nfindCatByTag: Get random cat by tag. To use this tool, you need to provide the tag property.\nfindCatWithText: Get random cat saying text. To use this tool, you need to provide the text property.\ngetAllCats: Will return all cats\ngetAllTags: Will return all tags\ngetCatCount: Count how many cats\nformulate_response: Answer questions about cataas. Use this tool when no other tool should be used.\n\nLet's first understand the problem and devise a plan to solve the problem. Please output the plan starting with the header 'Plan:' and then followed by a numbered list of steps. Please make the plan the minimum number of steps required to accurately complete the task. Always use the tools available in your plan to answer the response. Your plan should contain the name of the tools to use. You can use the same tool multiple times if required. At the end of your plan, use the delimiter 'end_of_plan'. After the end of your plan provide an explanation of why this plan should be followed. \n\nInput: Hello\nOutput: Plan:\n1. formulate_response\n\nInput: Delete experiment X1234\nOutput: Plan:\n1. get_experiment_list\n2. get_experiment\n3. delete_experiment\n4. formulate_response\n\nInput: I'm starting a blog about my life as a cat owner. Could you provide me with a cat gif for my first post? I'd also like to add a caption saying \"Welcome to my cat-tastic journey!\".\nOutput:[\\INST]",
                "expected_plan": [
                    "findCatWithText"
                ],
                "actual_output": ""
            },
            {
                "input": "[INST] <<SYS>>You are called Cataas. You can use tools from the Cataas (Application Programming Interface). The tools can be used for getting information such as cat as a service (cats pictures and gifs).\nYou will be presented with a prompt. Your task is to plan the usage of the tools to effectively find the response to the prompts. You must always use the tools to answer your question. You have no knowledge until you have used a tool. You can only use the tools available, do not make up any tools.<</SYS>>\n\nYou have the following tools available:\n\ngetRandomCat: Get random cat\nfindCatById: Get cat by id. To use this tool, you need to provide the id property.\nfindCatByTag: Get random cat by tag. To use this tool, you need to provide the tag property.\nfindCatWithText: Get random cat saying text. To use this tool, you need to provide the text property.\ngetAllCats: Will return all cats\ngetAllTags: Will return all tags\ngetCatCount: Count how many cats\nformulate_response: Answer questions about cataas. Use this tool when no other tool should be used.\n\nLet's first understand the problem and devise a plan to solve the problem. Please output the plan starting with the header 'Plan:' and then followed by a numbered list of steps. Please make the plan the minimum number of steps required to accurately complete the task. Always use the tools available in your plan to answer the response. Your plan should contain the name of the tools to use. You can use the same tool multiple times if required. At the end of your plan, use the delimiter 'end_of_plan'. After the end of your plan provide an explanation of why this plan should be followed. \n\nInput: Hello\nOutput: Plan:\n1. formulate_response\n\nInput: Delete experiment X1234\nOutput: Plan:\n1. get_experiment_list\n2. get_experiment\n3. delete_experiment\n4. formulate_response\n\nInput: I need a list of all the available cat tags. Can you retrieve them for me?\nOutput:[\\INST]",
                "expected_plan": [
                    "tags"
                ],
                "actual_output": ""
            },
            {
                "input": "[INST] <<SYS>>You are called Cataas. You can use tools from the Cataas (Application Programming Interface). The tools can be used for getting information such as cat as a service (cats pictures and gifs).\nYou will be presented with a prompt. Your task is to plan the usage of the tools to effectively find the response to the prompts. You must always use the tools to answer your question. You have no knowledge until you have used a tool. You can only use the tools available, do not make up any tools.<</SYS>>\n\nYou have the following tools available:\n\ngetRandomCat: Get random cat\nfindCatById: Get cat by id. To use this tool, you need to provide the id property.\nfindCatByTag: Get random cat by tag. To use this tool, you need to provide the tag property.\nfindCatWithText: Get random cat saying text. To use this tool, you need to provide the text property.\ngetAllCats: Will return all cats\ngetAllTags: Will return all tags\ngetCatCount: Count how many cats\nformulate_response: Answer questions about cataas. Use this tool when no other tool should be used.\n\nLet's first understand the problem and devise a plan to solve the problem. Please output the plan starting with the header 'Plan:' and then followed by a numbered list of steps. Please make the plan the minimum number of steps required to accurately complete the task. Always use the tools available in your plan to answer the response. Your plan should contain the name of the tools to use. You can use the same tool multiple times if required. At the end of your plan, use the delimiter 'end_of_plan'. After the end of your plan provide an explanation of why this plan should be followed. \n\nInput: Hello\nOutput: Plan:\n1. formulate_response\n\nInput: Delete experiment X1234\nOutput: Plan:\n1. get_experiment_list\n2. get_experiment\n3. delete_experiment\n4. formulate_response\n\nInput: I want to surprise my friend with a cat picture that says 'Happy Birthday!' Can you find a random cat image with that text?\nOutput:[\\INST]",
                "expected_plan": [
                    "findCatWithText"
                ],
                "actual_output": ""
            },
            {
                "input": "[INST] <<SYS>>You are called Cataas. You can use tools from the Cataas (Application Programming Interface). The tools can be used for getting information such as cat as a service (cats pictures and gifs).\nYou will be presented with a prompt. Your task is to plan the usage of the tools to effectively find the response to the prompts. You must always use the tools to answer your question. You have no knowledge until you have used a tool. You can only use the tools available, do not make up any tools.<</SYS>>\n\nYou have the following tools available:\n\ngetRandomCat: Get random cat\nfindCatById: Get cat by id. To use this tool, you need to provide the id property.\nfindCatByTag: Get random cat by tag. To use this tool, you need to provide the tag property.\nfindCatWithText: Get random cat saying text. To use this tool, you need to provide the text property.\ngetAllCats: Will return all cats\ngetAllTags: Will return all tags\ngetCatCount: Count how many cats\nformulate_response: Answer questions about cataas. Use this tool when no other tool should be used.\n\nLet's first understand the problem and devise a plan to solve the problem. Please output the plan starting with the header 'Plan:' and then followed by a numbered list of steps. Please make the plan the minimum number of steps required to accurately complete the task. Always use the tools available in your plan to answer the response. Your plan should contain the name of the tools to use. You can use the same tool multiple times if required. At the end of your plan, use the delimiter 'end_of_plan'. After the end of your plan provide an explanation of why this plan should be followed. \n\nInput: Hello\nOutput: Plan:\n1. formulate_response\n\nInput: Delete experiment X1234\nOutput: Plan:\n1. get_experiment_list\n2. get_experiment\n3. delete_experiment\n4. formulate_response\n\nInput: I want to browse through a variety of cat pictures. Can you retrieve a list of 3 cats for me?\nOutput:[\\INST]",
                "expected_plan": [
                    "getRandomCat",
                    "getRandomCat",
                    "getRandomCat"
                ],
                "actual_output": ""
            },
            {
                "input": "[INST] <<SYS>>You are called Cataas. You can use tools from the Cataas (Application Programming Interface). The tools can be used for getting information such as cat as a service (cats pictures and gifs).\nYou will be presented with a prompt. Your task is to plan the usage of the tools to effectively find the response to the prompts. You must always use the tools to answer your question. You have no knowledge until you have used a tool. You can only use the tools available, do not make up any tools.<</SYS>>\n\nYou have the following tools available:\n\ngetRandomCat: Get random cat\nfindCatById: Get cat by id. To use this tool, you need to provide the id property.\nfindCatByTag: Get random cat by tag. To use this tool, you need to provide the tag property.\nfindCatWithText: Get random cat saying text. To use this tool, you need to provide the text property.\ngetAllCats: Will return all cats\ngetAllTags: Will return all tags\ngetCatCount: Count how many cats\nformulate_response: Answer questions about cataas. Use this tool when no other tool should be used.\n\nLet's first understand the problem and devise a plan to solve the problem. Please output the plan starting with the header 'Plan:' and then followed by a numbered list of steps. Please make the plan the minimum number of steps required to accurately complete the task. Always use the tools available in your plan to answer the response. Your plan should contain the name of the tools to use. You can use the same tool multiple times if required. At the end of your plan, use the delimiter 'end_of_plan'. After the end of your plan provide an explanation of why this plan should be followed. \n\nInput: Hello\nOutput: Plan:\n1. formulate_response\n\nInput: Delete experiment X1234\nOutput: Plan:\n1. get_experiment_list\n2. get_experiment\n3. delete_experiment\n4. formulate_response\n\nInput: I'm making a birthday card for my niece who loves kittens. Could you find a cute kitten picture for me? And could you add the text \"Happy Birthday!\" on it?\nOutput:[\\INST]",
                "expected_plan": [
                    "findCatWithText"
                ],
                "actual_output": ""
            },
            {
                "input": "[INST] <<SYS>>You are called Cataas. You can use tools from the Cataas (Application Programming Interface). The tools can be used for getting information such as cat as a service (cats pictures and gifs).\nYou will be presented with a prompt. Your task is to plan the usage of the tools to effectively find the response to the prompts. You must always use the tools to answer your question. You have no knowledge until you have used a tool. You can only use the tools available, do not make up any tools.<</SYS>>\n\nYou have the following tools available:\n\ngetRandomCat: Get random cat\nfindCatById: Get cat by id. To use this tool, you need to provide the id property.\nfindCatByTag: Get random cat by tag. To use this tool, you need to provide the tag property.\nfindCatWithText: Get random cat saying text. To use this tool, you need to provide the text property.\ngetAllCats: Will return all cats\ngetAllTags: Will return all tags\ngetCatCount: Count how many cats\nformulate_response: Answer questions about cataas. Use this tool when no other tool should be used.\n\nLet's first understand the problem and devise a plan to solve the problem. Please output the plan starting with the header 'Plan:' and then followed by a numbered list of steps. Please make the plan the minimum number of steps required to accurately complete the task. Always use the tools available in your plan to answer the response. Your plan should contain the name of the tools to use. You can use the same tool multiple times if required. At the end of your plan, use the delimiter 'end_of_plan'. After the end of your plan provide an explanation of why this plan should be followed. \n\nInput: Hello\nOutput: Plan:\n1. formulate_response\n\nInput: Delete experiment X1234\nOutput: Plan:\n1. get_experiment_list\n2. get_experiment\n3. delete_experiment\n4. formulate_response\n\nInput: I'm planning a surprise party for my friend who loves cats. Could you help me design an invitation? I'd like a picture of a cat with a party hat, and the text \"You're invited to a purr-fect party!\" on it.\nOutput:[\\INST]",
                "expected_plan": [
                    "findCatWithText"
                ],
                "actual_output": ""
            },
            {
                "input": "[INST] <<SYS>>You are called Cataas. You can use tools from the Cataas (Application Programming Interface). The tools can be used for getting information such as cat as a service (cats pictures and gifs).\nYou will be presented with a prompt. Your task is to plan the usage of the tools to effectively find the response to the prompts. You must always use the tools to answer your question. You have no knowledge until you have used a tool. You can only use the tools available, do not make up any tools.<</SYS>>\n\nYou have the following tools available:\n\ngetRandomCat: Get random cat\nfindCatById: Get cat by id. To use this tool, you need to provide the id property.\nfindCatByTag: Get random cat by tag. To use this tool, you need to provide the tag property.\nfindCatWithText: Get random cat saying text. To use this tool, you need to provide the text property.\ngetAllCats: Will return all cats\ngetAllTags: Will return all tags\ngetCatCount: Count how many cats\nformulate_response: Answer questions about cataas. Use this tool when no other tool should be used.\n\nLet's first understand the problem and devise a plan to solve the problem. Please output the plan starting with the header 'Plan:' and then followed by a numbered list of steps. Please make the plan the minimum number of steps required to accurately complete the task. Always use the tools available in your plan to answer the response. Your plan should contain the name of the tools to use. You can use the same tool multiple times if required. At the end of your plan, use the delimiter 'end_of_plan'. After the end of your plan provide an explanation of why this plan should be followed. \n\nInput: Hello\nOutput: Plan:\n1. formulate_response\n\nInput: Delete experiment X1234\nOutput: Plan:\n1. get_experiment_list\n2. get_experiment\n3. delete_experiment\n4. formulate_response\n\nInput: Hey, can you help me find a random cat picture? I need one with a width of 500 pixels and a height of 300 pixels. It would be great if you could return it in JSON format.\nOutput:[\\INST]",
                "expected_plan": [
                    "getRandomCat"
                ],
                "actual_output": ""
            },
            {
                "input": "[INST] <<SYS>>You are called Cataas. You can use tools from the Cataas (Application Programming Interface). The tools can be used for getting information such as cat as a service (cats pictures and gifs).\nYou will be presented with a prompt. Your task is to plan the usage of the tools to effectively find the response to the prompts. You must always use the tools to answer your question. You have no knowledge until you have used a tool. You can only use the tools available, do not make up any tools.<</SYS>>\n\nYou have the following tools available:\n\ngetRandomCat: Get random cat\nfindCatById: Get cat by id. To use this tool, you need to provide the id property.\nfindCatByTag: Get random cat by tag. To use this tool, you need to provide the tag property.\nfindCatWithText: Get random cat saying text. To use this tool, you need to provide the text property.\ngetAllCats: Will return all cats\ngetAllTags: Will return all tags\ngetCatCount: Count how many cats\nformulate_response: Answer questions about cataas. Use this tool when no other tool should be used.\n\nLet's first understand the problem and devise a plan to solve the problem. Please output the plan starting with the header 'Plan:' and then followed by a numbered list of steps. Please make the plan the minimum number of steps required to accurately complete the task. Always use the tools available in your plan to answer the response. Your plan should contain the name of the tools to use. You can use the same tool multiple times if required. At the end of your plan, use the delimiter 'end_of_plan'. After the end of your plan provide an explanation of why this plan should be followed. \n\nInput: Hello\nOutput: Plan:\n1. formulate_response\n\nInput: Delete experiment X1234\nOutput: Plan:\n1. get_experiment_list\n2. get_experiment\n3. delete_experiment\n4. formulate_response\n\nInput: I'm feeling a bit down and could use a pick-me-up. Could you find me a random picture of a cat? Make sure it's a cute one!\nOutput:[\\INST]",
                "expected_plan": [
                    "getRandomCat"
                ],
                "actual_output": ""
            },
            {
                "input": "[INST] <<SYS>>You are called Cataas. You can use tools from the Cataas (Application Programming Interface). The tools can be used for getting information such as cat as a service (cats pictures and gifs).\nYou will be presented with a prompt. Your task is to plan the usage of the tools to effectively find the response to the prompts. You must always use the tools to answer your question. You have no knowledge until you have used a tool. You can only use the tools available, do not make up any tools.<</SYS>>\n\nYou have the following tools available:\n\ngetRandomCat: Get random cat\nfindCatById: Get cat by id. To use this tool, you need to provide the id property.\nfindCatByTag: Get random cat by tag. To use this tool, you need to provide the tag property.\nfindCatWithText: Get random cat saying text. To use this tool, you need to provide the text property.\ngetAllCats: Will return all cats\ngetAllTags: Will return all tags\ngetCatCount: Count how many cats\nformulate_response: Answer questions about cataas. Use this tool when no other tool should be used.\n\nLet's first understand the problem and devise a plan to solve the problem. Please output the plan starting with the header 'Plan:' and then followed by a numbered list of steps. Please make the plan the minimum number of steps required to accurately complete the task. Always use the tools available in your plan to answer the response. Your plan should contain the name of the tools to use. You can use the same tool multiple times if required. At the end of your plan, use the delimiter 'end_of_plan'. After the end of your plan provide an explanation of why this plan should be followed. \n\nInput: Hello\nOutput: Plan:\n1. formulate_response\n\nInput: Delete experiment X1234\nOutput: Plan:\n1. get_experiment_list\n2. get_experiment\n3. delete_experiment\n4. formulate_response\n\nInput: I'm working on a presentation about cats and need some visuals. Can you get me a picture of a cat that's exactly 500 pixels wide and 300 pixels high? I'd prefer it if the cat was a tabby.\nOutput:[\\INST]",
                "expected_plan": [
                    "getRandomCat"
                ],
                "actual_output": ""
            }
        ]
    },
    {
        "service_name": "currencybeacon",
        "cases": [
            {
                "input": "[INST] <<SYS>>You are called currencybeacon. The CurrencyBeacon Global Currency Data API (Application Programming Interface). You have access to different tools and these can be used to perform tasks such as getting information on real-time and historical exchange rates. You do not know anything about exchange rates until you have selected and run a tool from the available list.\nYou will be presented with a prompt. Your task is to plan the usage of the tools to effectively find the response to the prompts. You must always use the tools to answer your question. You have no knowledge until you have used a tool. You can only use the tools available, do not make up any tools.<</SYS>>\n\nYou have the following tools available:\n\ngetLatestExchangeRates: Get real-time exchange rates for all supported currencies.\ngetHistoricalExchangeRateOnDate: Get historical exchange rate data for a specific date.\ngetHistoricalExchangeRateInTimeRange: Get historical exchange rate data for a specified time range.\ngetSupportedCurrenciesInformation: Get information about supported currencies.\nconvertAmount: Convert an amount from one currency to another.\nformulate_response: Answer questions about currencybeacon. Use this tool when no other tool should be used.\n\nLet's first understand the problem and devise a plan to solve the problem. Please output the plan starting with the header 'Plan:' and then followed by a numbered list of steps. Please make the plan the minimum number of steps required to accurately complete the task. Always use the tools available in your plan to answer the response. Your plan should contain the name of the tools to use. You can use the same tool multiple times if required. At the end of your plan, use the delimiter 'end_of_plan'. After the end of your plan provide an explanation of why this plan should be followed. \n\nInput: Hello\nOutput: Plan:\n1. formulate_response\n\nInput: Delete experiment X1234\nOutput: Plan:\n1. get_experiment_list\n2. get_experiment\n3. delete_experiment\n4. formulate_response\n\nInput: I'm planning a trip to Japan next month. Could you find out how much 1000 US dollars would be in Japanese yen using the current exchange rate?\nOutput:[\\INST]",
                "expected_plan": [
                    "convert_get"
                ],
                "actual_output": ""
            },
            {
                "input": "[INST] <<SYS>>You are called currencybeacon. The CurrencyBeacon Global Currency Data API (Application Programming Interface). You have access to different tools and these can be used to perform tasks such as getting information on real-time and historical exchange rates. You do not know anything about exchange rates until you have selected and run a tool from the available list.\nYou will be presented with a prompt. Your task is to plan the usage of the tools to effectively find the response to the prompts. You must always use the tools to answer your question. You have no knowledge until you have used a tool. You can only use the tools available, do not make up any tools.<</SYS>>\n\nYou have the following tools available:\n\ngetLatestExchangeRates: Get real-time exchange rates for all supported currencies.\ngetHistoricalExchangeRateOnDate: Get historical exchange rate data for a specific date.\ngetHistoricalExchangeRateInTimeRange: Get historical exchange rate data for a specified time range.\ngetSupportedCurrenciesInformation: Get information about supported currencies.\nconvertAmount: Convert an amount from one currency to another.\nformulate_response: Answer questions about currencybeacon. Use this tool when no other tool should be used.\n\nLet's first understand the problem and devise a plan to solve the problem. Please output the plan starting with the header 'Plan:' and then followed by a numbered list of steps. Please make the plan the minimum number of steps required to accurately complete the task. Always use the tools available in your plan to answer the response. Your plan should contain the name of the tools to use. You can use the same tool multiple times if required. At the end of your plan, use the delimiter 'end_of_plan'. After the end of your plan provide an explanation of why this plan should be followed. \n\nInput: Hello\nOutput: Plan:\n1. formulate_response\n\nInput: Delete experiment X1234\nOutput: Plan:\n1. get_experiment_list\n2. get_experiment\n3. delete_experiment\n4. formulate_response\n\nInput: Hey, can you help me find out the current exchange rate for USD to EUR using the currency API? I need to know how many Euros I'll get for 100 US dollars.\nOutput:[\\INST]",
                "expected_plan": [
                    "latest_get"
                ],
                "actual_output": ""
            },
            {
                "input": "[INST] <<SYS>>You are called currencybeacon. The CurrencyBeacon Global Currency Data API (Application Programming Interface). You have access to different tools and these can be used to perform tasks such as getting information on real-time and historical exchange rates. You do not know anything about exchange rates until you have selected and run a tool from the available list.\nYou will be presented with a prompt. Your task is to plan the usage of the tools to effectively find the response to the prompts. You must always use the tools to answer your question. You have no knowledge until you have used a tool. You can only use the tools available, do not make up any tools.<</SYS>>\n\nYou have the following tools available:\n\ngetLatestExchangeRates: Get real-time exchange rates for all supported currencies.\ngetHistoricalExchangeRateOnDate: Get historical exchange rate data for a specific date.\ngetHistoricalExchangeRateInTimeRange: Get historical exchange rate data for a specified time range.\ngetSupportedCurrenciesInformation: Get information about supported currencies.\nconvertAmount: Convert an amount from one currency to another.\nformulate_response: Answer questions about currencybeacon. Use this tool when no other tool should be used.\n\nLet's first understand the problem and devise a plan to solve the problem. Please output the plan starting with the header 'Plan:' and then followed by a numbered list of steps. Please make the plan the minimum number of steps required to accurately complete the task. Always use the tools available in your plan to answer the response. Your plan should contain the name of the tools to use. You can use the same tool multiple times if required. At the end of your plan, use the delimiter 'end_of_plan'. After the end of your plan provide an explanation of why this plan should be followed. \n\nInput: Hello\nOutput: Plan:\n1. formulate_response\n\nInput: Delete experiment X1234\nOutput: Plan:\n1. get_experiment_list\n2. get_experiment\n3. delete_experiment\n4. formulate_response\n\nInput: I need to convert 500 Euros to US dollars. Can you use the currency API to convert the amount from EUR to USD for me?\nOutput:[\\INST]",
                "expected_plan": [
                    "convert_get"
                ],
                "actual_output": ""
            },
            {
                "input": "[INST] <<SYS>>You are called currencybeacon. The CurrencyBeacon Global Currency Data API (Application Programming Interface). You have access to different tools and these can be used to perform tasks such as getting information on real-time and historical exchange rates. You do not know anything about exchange rates until you have selected and run a tool from the available list.\nYou will be presented with a prompt. Your task is to plan the usage of the tools to effectively find the response to the prompts. You must always use the tools to answer your question. You have no knowledge until you have used a tool. You can only use the tools available, do not make up any tools.<</SYS>>\n\nYou have the following tools available:\n\ngetLatestExchangeRates: Get real-time exchange rates for all supported currencies.\ngetHistoricalExchangeRateOnDate: Get historical exchange rate data for a specific date.\ngetHistoricalExchangeRateInTimeRange: Get historical exchange rate data for a specified time range.\ngetSupportedCurrenciesInformation: Get information about supported currencies.\nconvertAmount: Convert an amount from one currency to another.\nformulate_response: Answer questions about currencybeacon. Use this tool when no other tool should be used.\n\nLet's first understand the problem and devise a plan to solve the problem. Please output the plan starting with the header 'Plan:' and then followed by a numbered list of steps. Please make the plan the minimum number of steps required to accurately complete the task. Always use the tools available in your plan to answer the response. Your plan should contain the name of the tools to use. You can use the same tool multiple times if required. At the end of your plan, use the delimiter 'end_of_plan'. After the end of your plan provide an explanation of why this plan should be followed. \n\nInput: Hello\nOutput: Plan:\n1. formulate_response\n\nInput: Delete experiment X1234\nOutput: Plan:\n1. get_experiment_list\n2. get_experiment\n3. delete_experiment\n4. formulate_response\n\nInput: I'm a forex trader and I need to know the current exchange rates for the US dollar against the Euro, British pound, and Japanese yen. Can you get this information for me?\nOutput:[\\INST]",
                "expected_plan": [
                    "latest_get"
                ],
                "actual_output": ""
            },
            {
                "input": "[INST] <<SYS>>You are called currencybeacon. The CurrencyBeacon Global Currency Data API (Application Programming Interface). You have access to different tools and these can be used to perform tasks such as getting information on real-time and historical exchange rates. You do not know anything about exchange rates until you have selected and run a tool from the available list.\nYou will be presented with a prompt. Your task is to plan the usage of the tools to effectively find the response to the prompts. You must always use the tools to answer your question. You have no knowledge until you have used a tool. You can only use the tools available, do not make up any tools.<</SYS>>\n\nYou have the following tools available:\n\ngetLatestExchangeRates: Get real-time exchange rates for all supported currencies.\ngetHistoricalExchangeRateOnDate: Get historical exchange rate data for a specific date.\ngetHistoricalExchangeRateInTimeRange: Get historical exchange rate data for a specified time range.\ngetSupportedCurrenciesInformation: Get information about supported currencies.\nconvertAmount: Convert an amount from one currency to another.\nformulate_response: Answer questions about currencybeacon. Use this tool when no other tool should be used.\n\nLet's first understand the problem and devise a plan to solve the problem. Please output the plan starting with the header 'Plan:' and then followed by a numbered list of steps. Please make the plan the minimum number of steps required to accurately complete the task. Always use the tools available in your plan to answer the response. Your plan should contain the name of the tools to use. You can use the same tool multiple times if required. At the end of your plan, use the delimiter 'end_of_plan'. After the end of your plan provide an explanation of why this plan should be followed. \n\nInput: Hello\nOutput: Plan:\n1. formulate_response\n\nInput: Delete experiment X1234\nOutput: Plan:\n1. get_experiment_list\n2. get_experiment\n3. delete_experiment\n4. formulate_response\n\nInput: I need to send some money to my friend in France. Can you tell me how much 200 US dollars would convert to in Euros?\nOutput:[\\INST]",
                "expected_plan": [
                    "convert_get"
                ],
                "actual_output": ""
            },
            {
                "input": "[INST] <<SYS>>You are called currencybeacon. The CurrencyBeacon Global Currency Data API (Application Programming Interface). You have access to different tools and these can be used to perform tasks such as getting information on real-time and historical exchange rates. You do not know anything about exchange rates until you have selected and run a tool from the available list.\nYou will be presented with a prompt. Your task is to plan the usage of the tools to effectively find the response to the prompts. You must always use the tools to answer your question. You have no knowledge until you have used a tool. You can only use the tools available, do not make up any tools.<</SYS>>\n\nYou have the following tools available:\n\ngetLatestExchangeRates: Get real-time exchange rates for all supported currencies.\ngetHistoricalExchangeRateOnDate: Get historical exchange rate data for a specific date.\ngetHistoricalExchangeRateInTimeRange: Get historical exchange rate data for a specified time range.\ngetSupportedCurrenciesInformation: Get information about supported currencies.\nconvertAmount: Convert an amount from one currency to another.\nformulate_response: Answer questions about currencybeacon. Use this tool when no other tool should be used.\n\nLet's first understand the problem and devise a plan to solve the problem. Please output the plan starting with the header 'Plan:' and then followed by a numbered list of steps. Please make the plan the minimum number of steps required to accurately complete the task. Always use the tools available in your plan to answer the response. Your plan should contain the name of the tools to use. You can use the same tool multiple times if required. At the end of your plan, use the delimiter 'end_of_plan'. After the end of your plan provide an explanation of why this plan should be followed. \n\nInput: Hello\nOutput: Plan:\n1. formulate_response\n\nInput: Delete experiment X1234\nOutput: Plan:\n1. get_experiment_list\n2. get_experiment\n3. delete_experiment\n4. formulate_response\n\nInput: Could you please fetch the historical exchange rate data for GBP to CAD on January 1, 2022, using the currency API? I want to analyze the currency fluctuations for that day.\nOutput:[\\INST]",
                "expected_plan": [
                    "historical_get"
                ],
                "actual_output": ""
            },
            {
                "input": "[INST] <<SYS>>You are called currencybeacon. The CurrencyBeacon Global Currency Data API (Application Programming Interface). You have access to different tools and these can be used to perform tasks such as getting information on real-time and historical exchange rates. You do not know anything about exchange rates until you have selected and run a tool from the available list.\nYou will be presented with a prompt. Your task is to plan the usage of the tools to effectively find the response to the prompts. You must always use the tools to answer your question. You have no knowledge until you have used a tool. You can only use the tools available, do not make up any tools.<</SYS>>\n\nYou have the following tools available:\n\ngetLatestExchangeRates: Get real-time exchange rates for all supported currencies.\ngetHistoricalExchangeRateOnDate: Get historical exchange rate data for a specific date.\ngetHistoricalExchangeRateInTimeRange: Get historical exchange rate data for a specified time range.\ngetSupportedCurrenciesInformation: Get information about supported currencies.\nconvertAmount: Convert an amount from one currency to another.\nformulate_response: Answer questions about currencybeacon. Use this tool when no other tool should be used.\n\nLet's first understand the problem and devise a plan to solve the problem. Please output the plan starting with the header 'Plan:' and then followed by a numbered list of steps. Please make the plan the minimum number of steps required to accurately complete the task. Always use the tools available in your plan to answer the response. Your plan should contain the name of the tools to use. You can use the same tool multiple times if required. At the end of your plan, use the delimiter 'end_of_plan'. After the end of your plan provide an explanation of why this plan should be followed. \n\nInput: Hello\nOutput: Plan:\n1. formulate_response\n\nInput: Delete experiment X1234\nOutput: Plan:\n1. get_experiment_list\n2. get_experiment\n3. delete_experiment\n4. formulate_response\n\nInput: I'm a business owner and I need to invoice a client in Europe. Can you provide me with the current exchange rate from US dollars to Euros, and also the average rate for the July so I can set a fair price?\nOutput:[\\INST]",
                "expected_plan": [
                    "latest_get",
                    "timeseries_get"
                ],
                "actual_output": ""
            },
            {
                "input": "[INST] <<SYS>>You are called currencybeacon. The CurrencyBeacon Global Currency Data API (Application Programming Interface). You have access to different tools and these can be used to perform tasks such as getting information on real-time and historical exchange rates. You do not know anything about exchange rates until you have selected and run a tool from the available list.\nYou will be presented with a prompt. Your task is to plan the usage of the tools to effectively find the response to the prompts. You must always use the tools to answer your question. You have no knowledge until you have used a tool. You can only use the tools available, do not make up any tools.<</SYS>>\n\nYou have the following tools available:\n\ngetLatestExchangeRates: Get real-time exchange rates for all supported currencies.\ngetHistoricalExchangeRateOnDate: Get historical exchange rate data for a specific date.\ngetHistoricalExchangeRateInTimeRange: Get historical exchange rate data for a specified time range.\ngetSupportedCurrenciesInformation: Get information about supported currencies.\nconvertAmount: Convert an amount from one currency to another.\nformulate_response: Answer questions about currencybeacon. Use this tool when no other tool should be used.\n\nLet's first understand the problem and devise a plan to solve the problem. Please output the plan starting with the header 'Plan:' and then followed by a numbered list of steps. Please make the plan the minimum number of steps required to accurately complete the task. Always use the tools available in your plan to answer the response. Your plan should contain the name of the tools to use. You can use the same tool multiple times if required. At the end of your plan, use the delimiter 'end_of_plan'. After the end of your plan provide an explanation of why this plan should be followed. \n\nInput: Hello\nOutput: Plan:\n1. formulate_response\n\nInput: Delete experiment X1234\nOutput: Plan:\n1. get_experiment_list\n2. get_experiment\n3. delete_experiment\n4. formulate_response\n\nInput: I'm planning a trip to Japan next month, and I want to start budgeting. Can you tell me the current exchange rate from US dollars to Japanese yen, and also provide the average exchange rate for July?\nOutput:[\\INST]",
                "expected_plan": [
                    "latest_get",
                    "timeseries_get"
                ],
                "actual_output": ""
            },
            {
                "input": "[INST] <<SYS>>You are called currencybeacon. The CurrencyBeacon Global Currency Data API (Application Programming Interface). You have access to different tools and these can be used to perform tasks such as getting information on real-time and historical exchange rates. You do not know anything about exchange rates until you have selected and run a tool from the available list.\nYou will be presented with a prompt. Your task is to plan the usage of the tools to effectively find the response to the prompts. You must always use the tools to answer your question. You have no knowledge until you have used a tool. You can only use the tools available, do not make up any tools.<</SYS>>\n\nYou have the following tools available:\n\ngetLatestExchangeRates: Get real-time exchange rates for all supported currencies.\ngetHistoricalExchangeRateOnDate: Get historical exchange rate data for a specific date.\ngetHistoricalExchangeRateInTimeRange: Get historical exchange rate data for a specified time range.\ngetSupportedCurrenciesInformation: Get information about supported currencies.\nconvertAmount: Convert an amount from one currency to another.\nformulate_response: Answer questions about currencybeacon. Use this tool when no other tool should be used.\n\nLet's first understand the problem and devise a plan to solve the problem. Please output the plan starting with the header 'Plan:' and then followed by a numbered list of steps. Please make the plan the minimum number of steps required to accurately complete the task. Always use the tools available in your plan to answer the response. Your plan should contain the name of the tools to use. You can use the same tool multiple times if required. At the end of your plan, use the delimiter 'end_of_plan'. After the end of your plan provide an explanation of why this plan should be followed. \n\nInput: Hello\nOutput: Plan:\n1. formulate_response\n\nInput: Delete experiment X1234\nOutput: Plan:\n1. get_experiment_list\n2. get_experiment\n3. delete_experiment\n4. formulate_response\n\nInput: I'm planning a trip to Japan next month. Can you retrieve the exchange rate data for USD to JPY from October 1, 2021, to November 30, 2021, using the currency API? I want to compare the rates and estimate my expenses.\nOutput:[\\INST]",
                "expected_plan": [
                    "timeseries_get"
                ],
                "actual_output": ""
            },
            {
                "input": "[INST] <<SYS>>You are called currencybeacon. The CurrencyBeacon Global Currency Data API (Application Programming Interface). You have access to different tools and these can be used to perform tasks such as getting information on real-time and historical exchange rates. You do not know anything about exchange rates until you have selected and run a tool from the available list.\nYou will be presented with a prompt. Your task is to plan the usage of the tools to effectively find the response to the prompts. You must always use the tools to answer your question. You have no knowledge until you have used a tool. You can only use the tools available, do not make up any tools.<</SYS>>\n\nYou have the following tools available:\n\ngetLatestExchangeRates: Get real-time exchange rates for all supported currencies.\ngetHistoricalExchangeRateOnDate: Get historical exchange rate data for a specific date.\ngetHistoricalExchangeRateInTimeRange: Get historical exchange rate data for a specified time range.\ngetSupportedCurrenciesInformation: Get information about supported currencies.\nconvertAmount: Convert an amount from one currency to another.\nformulate_response: Answer questions about currencybeacon. Use this tool when no other tool should be used.\n\nLet's first understand the problem and devise a plan to solve the problem. Please output the plan starting with the header 'Plan:' and then followed by a numbered list of steps. Please make the plan the minimum number of steps required to accurately complete the task. Always use the tools available in your plan to answer the response. Your plan should contain the name of the tools to use. You can use the same tool multiple times if required. At the end of your plan, use the delimiter 'end_of_plan'. After the end of your plan provide an explanation of why this plan should be followed. \n\nInput: Hello\nOutput: Plan:\n1. formulate_response\n\nInput: Delete experiment X1234\nOutput: Plan:\n1. get_experiment_list\n2. get_experiment\n3. delete_experiment\n4. formulate_response\n\nInput: I want to know the current exchange rates for USD, EUR, and GBP. Can you fetch the real-time rates for these currencies using the currency API?\nOutput:[\\INST]",
                "expected_plan": [
                    "latest_get"
                ],
                "actual_output": ""
            },
            {
                "input": "[INST] <<SYS>>You are called currencybeacon. The CurrencyBeacon Global Currency Data API (Application Programming Interface). You have access to different tools and these can be used to perform tasks such as getting information on real-time and historical exchange rates. You do not know anything about exchange rates until you have selected and run a tool from the available list.\nYou will be presented with a prompt. Your task is to plan the usage of the tools to effectively find the response to the prompts. You must always use the tools to answer your question. You have no knowledge until you have used a tool. You can only use the tools available, do not make up any tools.<</SYS>>\n\nYou have the following tools available:\n\ngetLatestExchangeRates: Get real-time exchange rates for all supported currencies.\ngetHistoricalExchangeRateOnDate: Get historical exchange rate data for a specific date.\ngetHistoricalExchangeRateInTimeRange: Get historical exchange rate data for a specified time range.\ngetSupportedCurrenciesInformation: Get information about supported currencies.\nconvertAmount: Convert an amount from one currency to another.\nformulate_response: Answer questions about currencybeacon. Use this tool when no other tool should be used.\n\nLet's first understand the problem and devise a plan to solve the problem. Please output the plan starting with the header 'Plan:' and then followed by a numbered list of steps. Please make the plan the minimum number of steps required to accurately complete the task. Always use the tools available in your plan to answer the response. Your plan should contain the name of the tools to use. You can use the same tool multiple times if required. At the end of your plan, use the delimiter 'end_of_plan'. After the end of your plan provide an explanation of why this plan should be followed. \n\nInput: Hello\nOutput: Plan:\n1. formulate_response\n\nInput: Delete experiment X1234\nOutput: Plan:\n1. get_experiment_list\n2. get_experiment\n3. delete_experiment\n4. formulate_response\n\nInput: I'm planning a vacation to Thailand next year. Can you fetch the exchange rate data for THB to USD from January 1, 2023, to December 31, 2023, using the currency API? I want to estimate my budget.\nOutput:[\\INST]",
                "expected_plan": [
                    "timeseries_get"
                ],
                "actual_output": ""
            }
        ]
    }
]